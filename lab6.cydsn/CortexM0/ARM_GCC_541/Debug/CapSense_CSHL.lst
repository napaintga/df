ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_CSHL.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	CapSense_rawFilterData1,2,4
  20              		.global	CapSense_sensorBaseline
  21              		.bss
  22              		.align	2
  23              		.type	CapSense_sensorBaseline, %object
  24              		.size	CapSense_sensorBaseline, 2
  25              	CapSense_sensorBaseline:
  26 0000 0000     		.space	2
  27              		.global	CapSense_sensorBaselineLow
  28 0002 0000     		.align	2
  29              		.type	CapSense_sensorBaselineLow, %object
  30              		.size	CapSense_sensorBaselineLow, 1
  31              	CapSense_sensorBaselineLow:
  32 0004 00       		.space	1
  33              		.global	CapSense_sensorSignal
  34 0005 000000   		.align	2
  35              		.type	CapSense_sensorSignal, %object
  36              		.size	CapSense_sensorSignal, 1
  37              	CapSense_sensorSignal:
  38 0008 00       		.space	1
  39              		.global	CapSense_sensorOnMask
  40 0009 000000   		.align	2
  41              		.type	CapSense_sensorOnMask, %object
  42              		.size	CapSense_sensorOnMask, 1
  43              	CapSense_sensorOnMask:
  44 000c 00       		.space	1
  45              		.comm	CapSense_lowBaselineResetCnt,1,4
  46              		.global	CapSense_lowBaselineReset
  47              		.data
  48              		.align	2
  49              		.type	CapSense_lowBaselineReset, %object
  50              		.size	CapSense_lowBaselineReset, 1
  51              	CapSense_lowBaselineReset:
  52 0000 1E       		.byte	30
  53              		.global	CapSense_enableRawFilters
  54              		.type	CapSense_enableRawFilters, %object
  55              		.size	CapSense_enableRawFilters, 1
  56              	CapSense_enableRawFilters:
  57 0001 01       		.byte	1
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 2


  58              		.global	CapSense_fingerThreshold
  59 0002 0000     		.align	2
  60              		.type	CapSense_fingerThreshold, %object
  61              		.size	CapSense_fingerThreshold, 1
  62              	CapSense_fingerThreshold:
  63 0004 50       		.byte	80
  64              		.comm	CapSense_noiseThreshold,1,4
  65              		.comm	CapSense_negativeNoiseThreshold,1,4
  66              		.comm	CapSense_hysteresis,1,4
  67              		.global	CapSense_debounce
  68 0005 000000   		.align	2
  69              		.type	CapSense_debounce, %object
  70              		.size	CapSense_debounce, 1
  71              	CapSense_debounce:
  72 0008 05       		.byte	5
  73              		.bss
  74 000d 000000   		.align	2
  75              	CapSense_debounceCounter:
  76 0010 0000     		.space	2
  77              		.global	CapSense_rawDataIndex
  78              		.section	.rodata
  79              		.align	2
  80              		.type	CapSense_rawDataIndex, %object
  81              		.size	CapSense_rawDataIndex, 1
  82              	CapSense_rawDataIndex:
  83 0000 00       		.space	1
  84              		.global	CapSense_numberOfSensors
  85 0001 000000   		.align	2
  86              		.type	CapSense_numberOfSensors, %object
  87              		.size	CapSense_numberOfSensors, 1
  88              	CapSense_numberOfSensors:
  89 0004 01       		.byte	1
  90              		.section	.text.CapSense_BaseInit,"ax",%progbits
  91              		.align	2
  92              		.global	CapSense_BaseInit
  93              		.code	16
  94              		.thumb_func
  95              		.type	CapSense_BaseInit, %function
  96              	CapSense_BaseInit:
  97              	.LFB36:
  98              		.file 1 "Generated_Source\\PSoC4\\CapSense_CSHL.c"
   1:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/CapSense_CSHL.c **** * File Name: CapSense_CSHL.c
   3:Generated_Source\PSoC4/CapSense_CSHL.c **** * Version 2.60
   4:Generated_Source\PSoC4/CapSense_CSHL.c **** *
   5:Generated_Source\PSoC4/CapSense_CSHL.c **** * Description:
   6:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CSD component.
   8:Generated_Source\PSoC4/CapSense_CSHL.c **** *
   9:Generated_Source\PSoC4/CapSense_CSHL.c **** * Note:
  10:Generated_Source\PSoC4/CapSense_CSHL.c **** *
  11:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CapSense_CSHL.c **** * Copyright 2013-2016, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/CapSense_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/CapSense_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/CapSense_CSHL.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 3


  17:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  18:Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_CSHL.h"
  19:Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_PVT.h"
  20:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  21:Generated_Source\PSoC4/CapSense_CSHL.c **** /* SmartSense functions */
  22:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  23:Generated_Source\PSoC4/CapSense_CSHL.c ****     extern void CapSense_UpdateThresholds(uint32 sensor);
  24:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  25:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  26:Generated_Source\PSoC4/CapSense_CSHL.c **** /* Storage of filters data */
  27:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
  28:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) )
  29:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  30:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  31:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData2[CapSense_TOTAL_SENSOR_COUNT];
  32:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  33:Generated_Source\PSoC4/CapSense_CSHL.c **** #elif ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER))   || \
  34:Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER))   || \
  35:Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
  36:Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))   || \
  37:Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)) )
  38:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  39:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  40:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
  41:Generated_Source\PSoC4/CapSense_CSHL.c ****         *    (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) )
  42:Generated_Source\PSoC4/CapSense_CSHL.c ****         */
  43:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  44:Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint16 CapSense_sensorRaw[CapSense_TOTAL_SENSOR_COUNT];
  45:Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint8 CapSense_sensorEnableMask[CapSense_TOTAL_SENSOR_MASK];
  46:Generated_Source\PSoC4/CapSense_CSHL.c **** extern const uint8 CapSense_widgetNumber[CapSense_TOTAL_SENSOR_COUNT];
  47:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  48:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
  49:Generated_Source\PSoC4/CapSense_CSHL.c ****     extern uint32 CapSense_widgetResolution[CapSense_RESOLUTIONS_TBL_SIZE];
  50:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
  51:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  52:Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_sensorBaseline[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  53:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorBaselineLow[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  54:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorSignal[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  55:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorOnMask[CapSense_TOTAL_SENSOR_MASK] = {0u};
  56:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  57:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineResetCnt[CapSense_TOTAL_SENSOR_COUNT];
  58:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineReset[CapSense_TOTAL_SENSOR_COUNT] = {
  59:Generated_Source\PSoC4/CapSense_CSHL.c ****     30u, 
  60:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  61:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  62:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  63:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  64:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  65:Generated_Source\PSoC4/CapSense_CSHL.c ****     extern CapSense_CONFIG_TYPE_P4_v2_60 CapSense_config;
  66:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  67:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  68:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
  69:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
  70:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
  71:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  72:Generated_Source\PSoC4/CapSense_CSHL.c **** /* Generated by Customizer */
  73:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_fingerThreshold[] = {
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 4


  74:Generated_Source\PSoC4/CapSense_CSHL.c ****     80u, 
  75:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  76:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  77:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_noiseThreshold[CapSense_THRESHOLD_TBL_SIZE];
  78:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  79:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_negativeNoiseThreshold[CapSense_THRESHOLD_TBL_SIZE];
  80:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  81:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_hysteresis[CapSense_WIDGET_PARAM_TBL_SIZE];
  82:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  83:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_debounce[] = {
  84:Generated_Source\PSoC4/CapSense_CSHL.c ****     5u, 
  85:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  86:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  87:Generated_Source\PSoC4/CapSense_CSHL.c **** static uint8 CapSense_debounceCounter[] = {
  88:Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, 0u, 
  89:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  90:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  91:Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_rawDataIndex[] = {
  92:Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, /* ProximitySensor0__PROX */
  93:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  94:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  95:Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_numberOfSensors[] = {
  96:Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* ProximitySensor0__PROX */
  97:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  98:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  99:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 100:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 101:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 102:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 103:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_BaseInit
 104:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 105:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 106:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 107:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an
 108:Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value.
 109:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Resets to zero CapSense_sensorBaselineLow[sensor] and
 110:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[sensor] array element.
 111:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_rawFilterData2[sensor] and
 112:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[sensor] array element with an
 113:Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value if the raw data filter is enabled.
 114:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 115:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 116:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 117:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 118:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 119:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 120:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 121:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 122:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store the baseline value.
 123:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store the fraction byte of
 124:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the baseline value.
 125:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store a difference between
 126:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and the previous value of the baseline.
 127:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store a previous sample of
 128:Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 129:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before a previous sample
 130:Generated_Source\PSoC4/CapSense_CSHL.c **** *  of the enabled raw data filter. Required only for median or average filters.
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 5


 131:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 132:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 133:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 134:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 135:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 136:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_BaseInit(uint32 sensor)
 137:Generated_Source\PSoC4/CapSense_CSHL.c **** {
  99              		.loc 1 137 0
 100              		.cfi_startproc
 101              		@ args = 0, pretend = 0, frame = 16
 102              		@ frame_needed = 1, uses_anonymous_args = 0
 103 0000 80B5     		push	{r7, lr}
 104              		.cfi_def_cfa_offset 8
 105              		.cfi_offset 7, -8
 106              		.cfi_offset 14, -4
 107 0002 84B0     		sub	sp, sp, #16
 108              		.cfi_def_cfa_offset 24
 109 0004 00AF     		add	r7, sp, #0
 110              		.cfi_def_cfa_register 7
 111 0006 7860     		str	r0, [r7, #4]
 138:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((CapSense_TOTAL_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || \
 139:Generated_Source\PSoC4/CapSense_CSHL.c ****          (CapSense_TOTAL_GENERICS_COUNT))
 140:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 widget = CapSense_widgetNumber[sensor];
 112              		.loc 1 140 0
 113 0008 0F23     		movs	r3, #15
 114 000a FB18     		adds	r3, r7, r3
 115 000c 1649     		ldr	r1, .L2
 116 000e 7A68     		ldr	r2, [r7, #4]
 117 0010 8A18     		adds	r2, r1, r2
 118 0012 1278     		ldrb	r2, [r2]
 119 0014 1A70     		strb	r2, [r3]
 141:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* ((CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
 142:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 143:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)
 144:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 debounceIndex;
 145:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) */
 146:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 147:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 148:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 149:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 150:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 151:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 152:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 153:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline */
 154:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = CapSense_sensorRaw[sensor];
 120              		.loc 1 154 0
 121 0016 154B     		ldr	r3, .L2+4
 122 0018 7A68     		ldr	r2, [r7, #4]
 123 001a 5200     		lsls	r2, r2, #1
 124 001c D15A     		ldrh	r1, [r2, r3]
 125 001e 144B     		ldr	r3, .L2+8
 126 0020 7A68     		ldr	r2, [r7, #4]
 127 0022 5200     		lsls	r2, r2, #1
 128 0024 D152     		strh	r1, [r2, r3]
 155:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaselineLow[sensor] = 0u;
 129              		.loc 1 155 0
 130 0026 134A     		ldr	r2, .L2+12
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 6


 131 0028 7B68     		ldr	r3, [r7, #4]
 132 002a D318     		adds	r3, r2, r3
 133 002c 0022     		movs	r2, #0
 134 002e 1A70     		strb	r2, [r3]
 156:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = 0u;
 135              		.loc 1 156 0
 136 0030 114A     		ldr	r2, .L2+16
 137 0032 7B68     		ldr	r3, [r7, #4]
 138 0034 D318     		adds	r3, r2, r3
 139 0036 0022     		movs	r2, #0
 140 0038 1A70     		strb	r2, [r3]
 157:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 158:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_debounceCounter[widget] =  CapSense_debounce[widget];
 141              		.loc 1 158 0
 142 003a 0F23     		movs	r3, #15
 143 003c FB18     		adds	r3, r7, r3
 144 003e 1B78     		ldrb	r3, [r3]
 145 0040 0F22     		movs	r2, #15
 146 0042 BA18     		adds	r2, r7, r2
 147 0044 1278     		ldrb	r2, [r2]
 148 0046 0D49     		ldr	r1, .L2+20
 149 0048 895C     		ldrb	r1, [r1, r2]
 150 004a 0D4A     		ldr	r2, .L2+24
 151 004c D154     		strb	r1, [r2, r3]
 159:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 160:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 161:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) ||\
 162:Generated_Source\PSoC4/CapSense_CSHL.c ****          (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)))
 163:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 164:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 165:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_sensorRaw[sensor];
 166:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 167:Generated_Source\PSoC4/CapSense_CSHL.c ****     #elif ((CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER) ||\
 168:Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER) ||\
 169:Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER) ||\
 170:Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER) ||\
 171:Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
 172:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 173:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 152              		.loc 1 173 0
 153 004e 074B     		ldr	r3, .L2+4
 154 0050 7A68     		ldr	r2, [r7, #4]
 155 0052 5200     		lsls	r2, r2, #1
 156 0054 D15A     		ldrh	r1, [r2, r3]
 157 0056 0B4B     		ldr	r3, .L2+28
 158 0058 7A68     		ldr	r2, [r7, #4]
 159 005a 5200     		lsls	r2, r2, #1
 160 005c D152     		strh	r1, [r2, r3]
 174:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 175:Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 176:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* No Raw filters */
 177:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* ((CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
 178:Generated_Source\PSoC4/CapSense_CSHL.c ****             *   (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER))
 179:Generated_Source\PSoC4/CapSense_CSHL.c ****             */
 180:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 181:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 182:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 7


 183:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 184:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 185:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 161              		.loc 1 185 0
 162 005e C046     		nop
 163 0060 BD46     		mov	sp, r7
 164 0062 04B0     		add	sp, sp, #16
 165              		@ sp needed
 166 0064 80BD     		pop	{r7, pc}
 167              	.L3:
 168 0066 C046     		.align	2
 169              	.L2:
 170 0068 00000000 		.word	CapSense_widgetNumber
 171 006c 00000000 		.word	CapSense_sensorRaw
 172 0070 00000000 		.word	CapSense_sensorBaseline
 173 0074 00000000 		.word	CapSense_sensorBaselineLow
 174 0078 00000000 		.word	CapSense_sensorSignal
 175 007c 00000000 		.word	CapSense_debounce
 176 0080 10000000 		.word	CapSense_debounceCounter
 177 0084 00000000 		.word	CapSense_rawFilterData1
 178              		.cfi_endproc
 179              	.LFE36:
 180              		.size	CapSense_BaseInit, .-CapSense_BaseInit
 181              		.section	.text.CapSense_InitializeSensorBaseline,"ax",%progbits
 182              		.align	2
 183              		.global	CapSense_InitializeSensorBaseline
 184              		.code	16
 185              		.thumb_func
 186              		.type	CapSense_InitializeSensorBaseline, %function
 187              	CapSense_InitializeSensorBaseline:
 188              	.LFB37:
 186:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 187:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 188:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 189:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeSensorBaseline
 190:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 191:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 192:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 193:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an
 194:Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or a pair
 195:Generated_Source\PSoC4/CapSense_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the
 196:Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if
 197:Generated_Source\PSoC4/CapSense_CSHL.c **** *  enabled.
 198:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 199:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 200:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 201:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 202:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 203:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 204:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 205:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 206:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 207:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 208:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 209:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 210:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 211:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 8


 212:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeSensorBaseline(uint32 sensor)
 213:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 189              		.loc 1 213 0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 8
 192              		@ frame_needed = 1, uses_anonymous_args = 0
 193 0000 80B5     		push	{r7, lr}
 194              		.cfi_def_cfa_offset 8
 195              		.cfi_offset 7, -8
 196              		.cfi_offset 14, -4
 197 0002 82B0     		sub	sp, sp, #8
 198              		.cfi_def_cfa_offset 16
 199 0004 00AF     		add	r7, sp, #0
 200              		.cfi_def_cfa_register 7
 201 0006 7860     		str	r0, [r7, #4]
 214:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Scan sensor */
 215:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanSensor(sensor);
 202              		.loc 1 215 0
 203 0008 7B68     		ldr	r3, [r7, #4]
 204 000a 1800     		movs	r0, r3
 205 000c FFF7FEFF 		bl	CapSense_ScanSensor
 216:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 206              		.loc 1 216 0
 207 0010 C046     		nop
 208              	.L5:
 209              		.loc 1 216 0 is_stmt 0 discriminator 1
 210 0012 FFF7FEFF 		bl	CapSense_IsBusy
 211 0016 031E     		subs	r3, r0, #0
 212 0018 FBD1     		bne	.L5
 217:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 218:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 219:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 220:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 221:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline, Signal and debounce counters */
 222:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_BaseInit(sensor);
 213              		.loc 1 222 0 is_stmt 1
 214 001a 7B68     		ldr	r3, [r7, #4]
 215 001c 1800     		movs	r0, r3
 216 001e FFF7FEFF 		bl	CapSense_BaseInit
 223:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 217              		.loc 1 223 0
 218 0022 C046     		nop
 219 0024 BD46     		mov	sp, r7
 220 0026 02B0     		add	sp, sp, #8
 221              		@ sp needed
 222 0028 80BD     		pop	{r7, pc}
 223              		.cfi_endproc
 224              	.LFE37:
 225              		.size	CapSense_InitializeSensorBaseline, .-CapSense_InitializeSensorBaseline
 226 002a C046     		.section	.text.CapSense_InitializeAllBaselines,"ax",%progbits
 227              		.align	2
 228              		.global	CapSense_InitializeAllBaselines
 229              		.code	16
 230              		.thumb_func
 231              		.type	CapSense_InitializeAllBaselines, %function
 232              	CapSense_InitializeAllBaselines:
 233              	.LFB38:
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 9


 224:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 225:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 226:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 227:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeAllBaselines
 228:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 229:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 230:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 231:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Uses the CapSense_InitializeSensorBaseline function to load the
 232:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] array with an initial values by scanning
 233:Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw count values are copied into the baseline array for
 234:Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw data filters are initialized if enabled.
 235:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 236:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 237:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 238:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 239:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 240:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 241:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 242:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 243:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 244:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 245:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 246:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 247:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 248:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 249:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeAllBaselines(void)
 250:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 234              		.loc 1 250 0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 8
 237              		@ frame_needed = 1, uses_anonymous_args = 0
 238 0000 80B5     		push	{r7, lr}
 239              		.cfi_def_cfa_offset 8
 240              		.cfi_offset 7, -8
 241              		.cfi_offset 14, -4
 242 0002 82B0     		sub	sp, sp, #8
 243              		.cfi_def_cfa_offset 16
 244 0004 00AF     		add	r7, sp, #0
 245              		.cfi_def_cfa_register 7
 251:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 252:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 253:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 246              		.loc 1 253 0
 247 0006 0023     		movs	r3, #0
 248 0008 7B60     		str	r3, [r7, #4]
 249 000a 06E0     		b	.L7
 250              	.L8:
 254:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 255:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_InitializeSensorBaseline(i);
 251              		.loc 1 255 0 discriminator 3
 252 000c 7B68     		ldr	r3, [r7, #4]
 253 000e 1800     		movs	r0, r3
 254 0010 FFF7FEFF 		bl	CapSense_InitializeSensorBaseline
 253:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 255              		.loc 1 253 0 discriminator 3
 256 0014 7B68     		ldr	r3, [r7, #4]
 257 0016 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 10


 258 0018 7B60     		str	r3, [r7, #4]
 259              	.L7:
 253:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 260              		.loc 1 253 0 is_stmt 0 discriminator 1
 261 001a 7B68     		ldr	r3, [r7, #4]
 262 001c 002B     		cmp	r3, #0
 263 001e F5D0     		beq	.L8
 256:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 257:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 264              		.loc 1 257 0 is_stmt 1
 265 0020 C046     		nop
 266 0022 BD46     		mov	sp, r7
 267 0024 02B0     		add	sp, sp, #8
 268              		@ sp needed
 269 0026 80BD     		pop	{r7, pc}
 270              		.cfi_endproc
 271              	.LFE38:
 272              		.size	CapSense_InitializeAllBaselines, .-CapSense_InitializeAllBaselines
 273              		.section	.text.CapSense_InitializeEnabledBaselines,"ax",%progbits
 274              		.align	2
 275              		.global	CapSense_InitializeEnabledBaselines
 276              		.code	16
 277              		.thumb_func
 278              		.type	CapSense_InitializeEnabledBaselines, %function
 279              	CapSense_InitializeEnabledBaselines:
 280              	.LFB39:
 258:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 259:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 260:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 261:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeEnabledBaselines
 262:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 263:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 264:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 265:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Scans all the enabled widgets and the raw count values are copied into the
 266:Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for all the sensors enabled in the scanning process. The baselines
 267:Generated_Source\PSoC4/CapSense_CSHL.c **** *  are initialized with zero values for sensors disabled from the scanning process.
 268:Generated_Source\PSoC4/CapSense_CSHL.c **** *  The raw data filters are initialized if enabled.
 269:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 270:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 271:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 272:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 273:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 274:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 275:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 276:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 277:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorRaw[] - used to store the sensors raw data.
 278:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[ ] - used to store bit masks of the enabled sensors.
 279:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 280:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 281:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 282:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 283:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 284:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeEnabledBaselines(void)
 285:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 281              		.loc 1 285 0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 11


 284              		@ frame_needed = 1, uses_anonymous_args = 0
 285 0000 80B5     		push	{r7, lr}
 286              		.cfi_def_cfa_offset 8
 287              		.cfi_offset 7, -8
 288              		.cfi_offset 14, -4
 289 0002 82B0     		sub	sp, sp, #8
 290              		.cfi_def_cfa_offset 16
 291 0004 00AF     		add	r7, sp, #0
 292              		.cfi_def_cfa_register 7
 286:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 287:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 288:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 289:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanEnabledWidgets();
 293              		.loc 1 289 0
 294 0006 FFF7FEFF 		bl	CapSense_ScanEnabledWidgets
 290:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 295              		.loc 1 290 0
 296 000a C046     		nop
 297              	.L10:
 298              		.loc 1 290 0 is_stmt 0 discriminator 1
 299 000c FFF7FEFF 		bl	CapSense_IsBusy
 300 0010 031E     		subs	r3, r0, #0
 301 0012 FBD1     		bne	.L10
 291:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 292:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 293:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 294:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 295:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 302              		.loc 1 295 0 is_stmt 1
 303 0014 0023     		movs	r3, #0
 304 0016 7B60     		str	r3, [r7, #4]
 305 0018 11E0     		b	.L11
 306              	.L13:
 296:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 297:Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 307              		.loc 1 297 0
 308 001a 7A68     		ldr	r2, [r7, #4]
 309 001c 0B4B     		ldr	r3, .L14
 310 001e 1100     		movs	r1, r2
 311 0020 1800     		movs	r0, r3
 312 0022 FFF7FEFF 		bl	CapSense_GetBitValue
 313 0026 0300     		movs	r3, r0
 314 0028 3B60     		str	r3, [r7]
 298:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 299:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 300:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(isSensorEnabled != 0u)
 315              		.loc 1 300 0
 316 002a 3B68     		ldr	r3, [r7]
 317 002c 002B     		cmp	r3, #0
 318 002e 03D0     		beq	.L12
 301:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 302:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Initialize baselines */
 303:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(i);
 319              		.loc 1 303 0
 320 0030 7B68     		ldr	r3, [r7, #4]
 321 0032 1800     		movs	r0, r3
 322 0034 FFF7FEFF 		bl	CapSense_BaseInit
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 12


 323              	.L12:
 295:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 324              		.loc 1 295 0 discriminator 2
 325 0038 7B68     		ldr	r3, [r7, #4]
 326 003a 0133     		adds	r3, r3, #1
 327 003c 7B60     		str	r3, [r7, #4]
 328              	.L11:
 295:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 329              		.loc 1 295 0 is_stmt 0 discriminator 1
 330 003e 7B68     		ldr	r3, [r7, #4]
 331 0040 002B     		cmp	r3, #0
 332 0042 EAD0     		beq	.L13
 304:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 305:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 306:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 333              		.loc 1 306 0 is_stmt 1
 334 0044 C046     		nop
 335 0046 BD46     		mov	sp, r7
 336 0048 02B0     		add	sp, sp, #8
 337              		@ sp needed
 338 004a 80BD     		pop	{r7, pc}
 339              	.L15:
 340              		.align	2
 341              	.L14:
 342 004c 00000000 		.word	CapSense_sensorEnableMask
 343              		.cfi_endproc
 344              	.LFE39:
 345              		.size	CapSense_InitializeEnabledBaselines, .-CapSense_InitializeEnabledBaselines
 346              		.section	.text.CapSense_UpdateBaselineNoThreshold,"ax",%progbits
 347              		.align	2
 348              		.global	CapSense_UpdateBaselineNoThreshold
 349              		.code	16
 350              		.thumb_func
 351              		.type	CapSense_UpdateBaselineNoThreshold, %function
 352              	CapSense_UpdateBaselineNoThreshold:
 353              	.LFB40:
 307:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 308:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 309:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 310:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateBaselineNoThreshold
 311:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 312:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 313:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 314:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the
 315:Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
 316:Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 317:Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor].
 318:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
 319:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating; baseline is loaded
 320:Generated_Source\PSoC4/CapSense_CSHL.c **** *  with a raw count value if a signal is greater than zero and if signal is less
 321:Generated_Source\PSoC4/CapSense_CSHL.c **** *  than noise threshold.
 322:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 323:Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 324:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 325:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API does not update the thresholds in the Smartsense Mode.
 326:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 327:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 13


 328:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 329:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 330:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 331:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 332:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 333:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 334:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 335:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store baseline value.
 336:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store fraction byte of
 337:Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline value.
 338:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store difference between
 339:Generated_Source\PSoC4/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 340:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store previous sample of
 341:Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 342:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before previous sample
 343:Generated_Source\PSoC4/CapSense_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 344:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 345:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 346:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 347:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 348:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 349:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateBaselineNoThreshold(uint32 sensor)
 350:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 354              		.loc 1 350 0
 355              		.cfi_startproc
 356              		@ args = 0, pretend = 0, frame = 24
 357              		@ frame_needed = 1, uses_anonymous_args = 0
 358 0000 90B5     		push	{r4, r7, lr}
 359              		.cfi_def_cfa_offset 12
 360              		.cfi_offset 4, -12
 361              		.cfi_offset 7, -8
 362              		.cfi_offset 14, -4
 363 0002 87B0     		sub	sp, sp, #28
 364              		.cfi_def_cfa_offset 40
 365 0004 00AF     		add	r7, sp, #0
 366              		.cfi_def_cfa_register 7
 367 0006 7860     		str	r0, [r7, #4]
 351:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 calc;
 352:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sign;
 353:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 tempRaw;
 354:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 filteredRawData;
 355:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 widget = CapSense_widgetNumber[sensor];
 368              		.loc 1 355 0
 369 0008 0F23     		movs	r3, #15
 370 000a FB18     		adds	r3, r7, r3
 371 000c 7D49     		ldr	r1, .L29
 372 000e 7A68     		ldr	r2, [r7, #4]
 373 0010 8A18     		adds	r2, r1, r2
 374 0012 1278     		ldrb	r2, [r2]
 375 0014 1A70     		strb	r2, [r3]
 356:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 noiseThreshold;
 357:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 358:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 359:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 360:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 361:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 362:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 14


 363:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 364:Generated_Source\PSoC4/CapSense_CSHL.c ****     noiseThreshold = CapSense_noiseThreshold[widget];
 376              		.loc 1 364 0
 377 0016 0F23     		movs	r3, #15
 378 0018 FB18     		adds	r3, r7, r3
 379 001a 1A78     		ldrb	r2, [r3]
 380 001c 0E23     		movs	r3, #14
 381 001e FB18     		adds	r3, r7, r3
 382 0020 7949     		ldr	r1, .L29+4
 383 0022 8A5C     		ldrb	r2, [r1, r2]
 384 0024 1A70     		strb	r2, [r3]
 365:Generated_Source\PSoC4/CapSense_CSHL.c ****     filteredRawData = CapSense_sensorRaw[sensor];
 385              		.loc 1 365 0
 386 0026 1023     		movs	r3, #16
 387 0028 FB18     		adds	r3, r7, r3
 388 002a 784A     		ldr	r2, .L29+8
 389 002c 7968     		ldr	r1, [r7, #4]
 390 002e 4900     		lsls	r1, r1, #1
 391 0030 8A5A     		ldrh	r2, [r1, r2]
 392 0032 1A80     		strh	r2, [r3]
 366:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 367:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_RAW_FILTER_MASK != 0u)
 368:Generated_Source\PSoC4/CapSense_CSHL.c ****     if(CapSense_enableRawFilters != 0u)
 393              		.loc 1 368 0
 394 0034 764B     		ldr	r3, .L29+12
 395 0036 1B78     		ldrb	r3, [r3]
 396 0038 002B     		cmp	r3, #0
 397 003a 15D0     		beq	.L17
 369:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 370:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)
 371:Generated_Source\PSoC4/CapSense_CSHL.c ****             tempRaw = filteredRawData;
 372:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_MedianFilter(filteredRawData, CapSense_rawFilterData1[sensor
 373:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                             CapSense_rawFilterData2[sensor]);
 374:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 375:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = tempRaw;
 376:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 377:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)
 378:Generated_Source\PSoC4/CapSense_CSHL.c ****             tempRaw = filteredRawData;
 379:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_AveragingFilter(filteredRawData, CapSense_rawFilterData1[sen
 380:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                CapSense_rawFilterData2[sensor]);
 381:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 382:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = tempRaw;
 383:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 384:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)
 385:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR2Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 386:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 387:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 388:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)
 389:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR4Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 398              		.loc 1 389 0
 399 003c 754B     		ldr	r3, .L29+16
 400 003e 7A68     		ldr	r2, [r7, #4]
 401 0040 5200     		lsls	r2, r2, #1
 402 0042 D25A     		ldrh	r2, [r2, r3]
 403 0044 1023     		movs	r3, #16
 404 0046 FC18     		adds	r4, r7, r3
 405 0048 1023     		movs	r3, #16
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 15


 406 004a FB18     		adds	r3, r7, r3
 407 004c 1B88     		ldrh	r3, [r3]
 408 004e 1100     		movs	r1, r2
 409 0050 1800     		movs	r0, r3
 410 0052 FFF7FEFF 		bl	CapSense_IIR4Filter
 411 0056 0300     		movs	r3, r0
 412 0058 2380     		strh	r3, [r4]
 390:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 413              		.loc 1 390 0
 414 005a 6E4B     		ldr	r3, .L29+16
 415 005c 7A68     		ldr	r2, [r7, #4]
 416 005e 5200     		lsls	r2, r2, #1
 417 0060 1021     		movs	r1, #16
 418 0062 7918     		adds	r1, r7, r1
 419 0064 0988     		ldrh	r1, [r1]
 420 0066 D152     		strh	r1, [r2, r3]
 421              	.L17:
 391:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 392:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)
 393:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_JitterFilter(filteredRawData, CapSense_rawFilterData1[sensor
 394:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 395:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 396:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)
 397:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR8Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 398:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 399:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 400:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)
 401:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR16Filter(filteredRawData, CapSense_rawFilterData1[sensor]
 402:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 403:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 404:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 405:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* No Raw filters */
 406:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) */
 407:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 408:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
 409:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 410:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 411:Generated_Source\PSoC4/CapSense_CSHL.c ****         MeasureNoiseEnvelope_P4_v2_60(&CapSense_config, (uint8)sensor, CapSense_sensorRaw);
 422              		.loc 1 411 0
 423 0068 7B68     		ldr	r3, [r7, #4]
 424 006a D9B2     		uxtb	r1, r3
 425 006c 674A     		ldr	r2, .L29+8
 426 006e 6A4B     		ldr	r3, .L29+20
 427 0070 1800     		movs	r0, r3
 428 0072 FFF7FEFF 		bl	MeasureNoiseEnvelope_P4_v2_60
 412:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 413:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 414:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Baseline calculation */
 415:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 416:Generated_Source\PSoC4/CapSense_CSHL.c ****     if(filteredRawData >= CapSense_sensorBaseline[sensor])
 429              		.loc 1 416 0
 430 0076 694B     		ldr	r3, .L29+24
 431 0078 7A68     		ldr	r2, [r7, #4]
 432 007a 5200     		lsls	r2, r2, #1
 433 007c D35A     		ldrh	r3, [r2, r3]
 434 007e 1022     		movs	r2, #16
 435 0080 BA18     		adds	r2, r7, r2
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 16


 436 0082 1288     		ldrh	r2, [r2]
 437 0084 9A42     		cmp	r2, r3
 438 0086 12D3     		bcc	.L18
 417:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 418:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_lowBaselineResetCnt[sensor] = 0u;
 439              		.loc 1 418 0
 440 0088 654A     		ldr	r2, .L29+28
 441 008a 7B68     		ldr	r3, [r7, #4]
 442 008c D318     		adds	r3, r2, r3
 443 008e 0022     		movs	r2, #0
 444 0090 1A70     		strb	r2, [r3]
 419:Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 445              		.loc 1 419 0
 446 0092 624B     		ldr	r3, .L29+24
 447 0094 7A68     		ldr	r2, [r7, #4]
 448 0096 5200     		lsls	r2, r2, #1
 449 0098 D25A     		ldrh	r2, [r2, r3]
 450 009a 1223     		movs	r3, #18
 451 009c FB18     		adds	r3, r7, r3
 452 009e 1021     		movs	r1, #16
 453 00a0 7918     		adds	r1, r7, r1
 454 00a2 0988     		ldrh	r1, [r1]
 455 00a4 8A1A     		subs	r2, r1, r2
 456 00a6 1A80     		strh	r2, [r3]
 420:Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 457              		.loc 1 420 0
 458 00a8 0123     		movs	r3, #1
 459 00aa 7B61     		str	r3, [r7, #20]
 460 00ac 0CE0     		b	.L19
 461              	.L18:
 421:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 422:Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 423:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 424:Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = CapSense_sensorBaseline[sensor] - filteredRawData;
 462              		.loc 1 424 0
 463 00ae 5B4B     		ldr	r3, .L29+24
 464 00b0 7A68     		ldr	r2, [r7, #4]
 465 00b2 5200     		lsls	r2, r2, #1
 466 00b4 D15A     		ldrh	r1, [r2, r3]
 467 00b6 1223     		movs	r3, #18
 468 00b8 FB18     		adds	r3, r7, r3
 469 00ba 1022     		movs	r2, #16
 470 00bc BA18     		adds	r2, r7, r2
 471 00be 1288     		ldrh	r2, [r2]
 472 00c0 8A1A     		subs	r2, r1, r2
 473 00c2 1A80     		strh	r2, [r3]
 425:Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 474              		.loc 1 425 0
 475 00c4 0023     		movs	r3, #0
 476 00c6 7B61     		str	r3, [r7, #20]
 477              	.L19:
 426:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 427:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 428:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 429:Generated_Source\PSoC4/CapSense_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_negativeNoiseThreshold[widget]))
 478              		.loc 1 429 0
 479 00c8 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 17


 480 00ca 002B     		cmp	r3, #0
 481 00cc 2AD1     		bne	.L20
 482              		.loc 1 429 0 is_stmt 0 discriminator 1
 483 00ce 0F23     		movs	r3, #15
 484 00d0 FB18     		adds	r3, r7, r3
 485 00d2 1B78     		ldrb	r3, [r3]
 486 00d4 534A     		ldr	r2, .L29+32
 487 00d6 D35C     		ldrb	r3, [r2, r3]
 488 00d8 9BB2     		uxth	r3, r3
 489 00da 1222     		movs	r2, #18
 490 00dc BA18     		adds	r2, r7, r2
 491 00de 1288     		ldrh	r2, [r2]
 492 00e0 9A42     		cmp	r2, r3
 493 00e2 1FD9     		bls	.L20
 430:Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 431:Generated_Source\PSoC4/CapSense_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD))
 432:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 433:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 434:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_lowBaselineResetCnt[sensor] >= CapSense_lowBaselineReset[sensor])
 494              		.loc 1 434 0 is_stmt 1
 495 00e4 4E4A     		ldr	r2, .L29+28
 496 00e6 7B68     		ldr	r3, [r7, #4]
 497 00e8 D318     		adds	r3, r2, r3
 498 00ea 1A78     		ldrb	r2, [r3]
 499 00ec 4E49     		ldr	r1, .L29+36
 500 00ee 7B68     		ldr	r3, [r7, #4]
 501 00f0 CB18     		adds	r3, r1, r3
 502 00f2 1B78     		ldrb	r3, [r3]
 503 00f4 9A42     		cmp	r2, r3
 504 00f6 09D3     		bcc	.L21
 435:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 436:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(sensor);
 505              		.loc 1 436 0
 506 00f8 7B68     		ldr	r3, [r7, #4]
 507 00fa 1800     		movs	r0, r3
 508 00fc FFF7FEFF 		bl	CapSense_BaseInit
 437:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 509              		.loc 1 437 0
 510 0100 474A     		ldr	r2, .L29+28
 511 0102 7B68     		ldr	r3, [r7, #4]
 512 0104 D318     		adds	r3, r2, r3
 513 0106 0022     		movs	r2, #0
 514 0108 1A70     		strb	r2, [r3]
 434:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 515              		.loc 1 434 0
 516 010a 51E0     		b	.L23
 517              	.L21:
 438:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 439:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
 440:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 441:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor]++;
 518              		.loc 1 441 0
 519 010c 444A     		ldr	r2, .L29+28
 520 010e 7B68     		ldr	r3, [r7, #4]
 521 0110 D318     		adds	r3, r2, r3
 522 0112 1B78     		ldrb	r3, [r3]
 523 0114 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 18


 524 0116 D9B2     		uxtb	r1, r3
 525 0118 414A     		ldr	r2, .L29+28
 526 011a 7B68     		ldr	r3, [r7, #4]
 527 011c D318     		adds	r3, r2, r3
 528 011e 0A1C     		adds	r2, r1, #0
 529 0120 1A70     		strb	r2, [r3]
 434:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 530              		.loc 1 434 0
 531 0122 45E0     		b	.L23
 532              	.L20:
 442:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 443:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 444:Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 445:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 446:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 447:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 448:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 449:Generated_Source\PSoC4/CapSense_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 533              		.loc 1 449 0
 534 0124 0E23     		movs	r3, #14
 535 0126 FB18     		adds	r3, r7, r3
 536 0128 1B78     		ldrb	r3, [r3]
 537 012a 9BB2     		uxth	r3, r3
 538 012c 1222     		movs	r2, #18
 539 012e BA18     		adds	r2, r7, r2
 540 0130 1288     		ldrh	r2, [r2]
 541 0132 9A42     		cmp	r2, r3
 542 0134 0DD9     		bls	.L24
 450:Generated_Source\PSoC4/CapSense_CSHL.c ****              ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 543              		.loc 1 450 0 discriminator 1
 544 0136 0F23     		movs	r3, #15
 545 0138 FB18     		adds	r3, r7, r3
 546 013a 1B78     		ldrb	r3, [r3]
 547 013c 394A     		ldr	r2, .L29+32
 548 013e D35C     		ldrb	r3, [r2, r3]
 549 0140 9BB2     		uxth	r3, r3
 449:Generated_Source\PSoC4/CapSense_CSHL.c ****              ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 550              		.loc 1 449 0 discriminator 1
 551 0142 1222     		movs	r2, #18
 552 0144 BA18     		adds	r2, r7, r2
 553 0146 1288     		ldrh	r2, [r2]
 554 0148 9A42     		cmp	r2, r3
 555 014a 31D2     		bcs	.L23
 451:Generated_Source\PSoC4/CapSense_CSHL.c ****                && (sign == 0u)))
 556              		.loc 1 451 0
 557 014c 7B69     		ldr	r3, [r7, #20]
 558 014e 002B     		cmp	r3, #0
 559 0150 2ED1     		bne	.L23
 560              	.L24:
 452:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 453:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 454:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 455:Generated_Source\PSoC4/CapSense_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 456:Generated_Source\PSoC4/CapSense_CSHL.c ****                  ((tempRaw < (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD)
 457:Generated_Source\PSoC4/CapSense_CSHL.c ****                    && (sign == 0u)))
 458:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 459:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 19


 460:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 461:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make full Baseline 23 bits */
 462:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc = (uint32) CapSense_sensorBaseline[sensor] << 8u;
 561              		.loc 1 462 0
 562 0152 324B     		ldr	r3, .L29+24
 563 0154 7A68     		ldr	r2, [r7, #4]
 564 0156 5200     		lsls	r2, r2, #1
 565 0158 D35A     		ldrh	r3, [r2, r3]
 566 015a 1B02     		lsls	r3, r3, #8
 567 015c BB60     		str	r3, [r7, #8]
 463:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
 568              		.loc 1 463 0
 569 015e 334A     		ldr	r2, .L29+40
 570 0160 7B68     		ldr	r3, [r7, #4]
 571 0162 D318     		adds	r3, r2, r3
 572 0164 1B78     		ldrb	r3, [r3]
 573 0166 1A00     		movs	r2, r3
 574 0168 BB68     		ldr	r3, [r7, #8]
 575 016a 1343     		orrs	r3, r2
 576 016c BB60     		str	r3, [r7, #8]
 464:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 465:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Add Raw Data to Baseline */
 466:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc += filteredRawData;
 577              		.loc 1 466 0
 578 016e 1023     		movs	r3, #16
 579 0170 FB18     		adds	r3, r7, r3
 580 0172 1B88     		ldrh	r3, [r3]
 581 0174 BA68     		ldr	r2, [r7, #8]
 582 0176 D318     		adds	r3, r2, r3
 583 0178 BB60     		str	r3, [r7, #8]
 467:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 468:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Sub the high Baseline */
 469:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc -= CapSense_sensorBaseline[sensor];
 584              		.loc 1 469 0
 585 017a 284B     		ldr	r3, .L29+24
 586 017c 7A68     		ldr	r2, [r7, #4]
 587 017e 5200     		lsls	r2, r2, #1
 588 0180 D35A     		ldrh	r3, [r2, r3]
 589 0182 1A00     		movs	r2, r3
 590 0184 BB68     		ldr	r3, [r7, #8]
 591 0186 9B1A     		subs	r3, r3, r2
 592 0188 BB60     		str	r3, [r7, #8]
 470:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 471:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Put Baseline and BaselineLow */
 472:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 593              		.loc 1 472 0
 594 018a BB68     		ldr	r3, [r7, #8]
 595 018c 1B0A     		lsrs	r3, r3, #8
 596 018e 99B2     		uxth	r1, r3
 597 0190 224B     		ldr	r3, .L29+24
 598 0192 7A68     		ldr	r2, [r7, #4]
 599 0194 5200     		lsls	r2, r2, #1
 600 0196 D152     		strh	r1, [r2, r3]
 473:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 601              		.loc 1 473 0
 602 0198 BB68     		ldr	r3, [r7, #8]
 603 019a D9B2     		uxtb	r1, r3
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 20


 604 019c 234A     		ldr	r2, .L29+40
 605 019e 7B68     		ldr	r3, [r7, #4]
 606 01a0 D318     		adds	r3, r2, r3
 607 01a2 0A1C     		adds	r2, r1, #0
 608 01a4 1A70     		strb	r2, [r3]
 474:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 475:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_lowBaselineResetCnt[sensor] = 0u;
 609              		.loc 1 475 0
 610 01a6 1E4A     		ldr	r2, .L29+28
 611 01a8 7B68     		ldr	r3, [r7, #4]
 612 01aa D318     		adds	r3, r2, r3
 613 01ac 0022     		movs	r2, #0
 614 01ae 1A70     		strb	r2, [r3]
 615              	.L23:
 476:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 477:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 478:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 479:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 480:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 481:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate Signal if positive difference > noiseThreshold */
 482:Generated_Source\PSoC4/CapSense_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (sign != 0u))
 616              		.loc 1 482 0
 617 01b0 0E23     		movs	r3, #14
 618 01b2 FB18     		adds	r3, r7, r3
 619 01b4 1B78     		ldrb	r3, [r3]
 620 01b6 9BB2     		uxth	r3, r3
 621 01b8 1222     		movs	r2, #18
 622 01ba BA18     		adds	r2, r7, r2
 623 01bc 1288     		ldrh	r2, [r2]
 624 01be 9A42     		cmp	r2, r3
 625 01c0 17D9     		bls	.L25
 626              		.loc 1 482 0 is_stmt 0 discriminator 1
 627 01c2 7B69     		ldr	r3, [r7, #20]
 628 01c4 002B     		cmp	r3, #0
 629 01c6 14D0     		beq	.L25
 483:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 484:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8)
 485:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Over flow defence for uint8 */
 486:Generated_Source\PSoC4/CapSense_CSHL.c ****             if (tempRaw > 0xFFu)
 630              		.loc 1 486 0 is_stmt 1
 631 01c8 1223     		movs	r3, #18
 632 01ca FB18     		adds	r3, r7, r3
 633 01cc 1B88     		ldrh	r3, [r3]
 634 01ce FF2B     		cmp	r3, #255
 635 01d0 05D9     		bls	.L26
 487:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 488:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = 0xFFu;
 636              		.loc 1 488 0
 637 01d2 174A     		ldr	r2, .L29+44
 638 01d4 7B68     		ldr	r3, [r7, #4]
 639 01d6 D318     		adds	r3, r2, r3
 640 01d8 FF22     		movs	r2, #255
 641 01da 1A70     		strb	r2, [r3]
 486:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 642              		.loc 1 486 0
 643 01dc 0EE0     		b	.L28
 644              	.L26:
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 21


 489:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 490:Generated_Source\PSoC4/CapSense_CSHL.c ****             else
 491:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 492:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = ((uint8) tempRaw);
 645              		.loc 1 492 0
 646 01de 1223     		movs	r3, #18
 647 01e0 FB18     		adds	r3, r7, r3
 648 01e2 1B88     		ldrh	r3, [r3]
 649 01e4 D9B2     		uxtb	r1, r3
 650 01e6 124A     		ldr	r2, .L29+44
 651 01e8 7B68     		ldr	r3, [r7, #4]
 652 01ea D318     		adds	r3, r2, r3
 653 01ec 0A1C     		adds	r2, r1, #0
 654 01ee 1A70     		strb	r2, [r3]
 486:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 655              		.loc 1 486 0
 656 01f0 04E0     		b	.L28
 657              	.L25:
 493:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 494:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 495:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_sensorSignal[sensor] = ((uint16) tempRaw);
 496:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8) */
 497:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 498:Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 499:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 500:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Signal is zero */
 501:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_sensorSignal[sensor] = 0u;
 658              		.loc 1 501 0
 659 01f2 0F4A     		ldr	r2, .L29+44
 660 01f4 7B68     		ldr	r3, [r7, #4]
 661 01f6 D318     		adds	r3, r2, r3
 662 01f8 0022     		movs	r2, #0
 663 01fa 1A70     		strb	r2, [r3]
 664              	.L28:
 502:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 503:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 504:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 505:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 506:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 507:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 508:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 665              		.loc 1 508 0
 666 01fc C046     		nop
 667 01fe BD46     		mov	sp, r7
 668 0200 07B0     		add	sp, sp, #28
 669              		@ sp needed
 670 0202 90BD     		pop	{r4, r7, pc}
 671              	.L30:
 672              		.align	2
 673              	.L29:
 674 0204 00000000 		.word	CapSense_widgetNumber
 675 0208 00000000 		.word	CapSense_noiseThreshold
 676 020c 00000000 		.word	CapSense_sensorRaw
 677 0210 00000000 		.word	CapSense_enableRawFilters
 678 0214 00000000 		.word	CapSense_rawFilterData1
 679 0218 00000000 		.word	CapSense_config
 680 021c 00000000 		.word	CapSense_sensorBaseline
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 22


 681 0220 00000000 		.word	CapSense_lowBaselineResetCnt
 682 0224 00000000 		.word	CapSense_negativeNoiseThreshold
 683 0228 00000000 		.word	CapSense_lowBaselineReset
 684 022c 00000000 		.word	CapSense_sensorBaselineLow
 685 0230 00000000 		.word	CapSense_sensorSignal
 686              		.cfi_endproc
 687              	.LFE40:
 688              		.size	CapSense_UpdateBaselineNoThreshold, .-CapSense_UpdateBaselineNoThreshold
 689              		.section	.text.CapSense_UpdateSensorBaseline,"ax",%progbits
 690              		.align	2
 691              		.global	CapSense_UpdateSensorBaseline
 692              		.code	16
 693              		.thumb_func
 694              		.type	CapSense_UpdateSensorBaseline, %function
 695              	CapSense_UpdateSensorBaseline:
 696              	.LFB41:
 509:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 510:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 511:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 512:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateSensorBaseline
 513:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 514:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 515:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 516:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the
 517:Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
 518:Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 519:Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor].
 520:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
 521:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating.
 522:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Baseline is loaded with raw count value if a signal is greater than zero and
 523:Generated_Source\PSoC4/CapSense_CSHL.c **** *  if signal is less than noise threshold.
 524:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 525:Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 526:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API updates the thresholds in the Smartsense Mode.
 527:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 528:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 529:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 530:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 531:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 532:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 533:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 534:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 535:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 536:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 537:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 538:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 539:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 540:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 541:Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateSensorBaseline(uint32 sensor)
 542:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 697              		.loc 1 542 0
 698              		.cfi_startproc
 699              		@ args = 0, pretend = 0, frame = 8
 700              		@ frame_needed = 1, uses_anonymous_args = 0
 701 0000 80B5     		push	{r7, lr}
 702              		.cfi_def_cfa_offset 8
 703              		.cfi_offset 7, -8
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 23


 704              		.cfi_offset 14, -4
 705 0002 82B0     		sub	sp, sp, #8
 706              		.cfi_def_cfa_offset 16
 707 0004 00AF     		add	r7, sp, #0
 708              		.cfi_def_cfa_register 7
 709 0006 7860     		str	r0, [r7, #4]
 543:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 544:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 widget;
 545:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 546:Generated_Source\PSoC4/CapSense_CSHL.c ****         widget = CapSense_widgetNumber[sensor];
 547:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 548:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 549:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 550:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 551:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 552:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 553:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 554:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_UpdateThresholds(sensor);
 710              		.loc 1 554 0
 711 0008 7B68     		ldr	r3, [r7, #4]
 712 000a 1800     		movs	r0, r3
 713 000c FFF7FEFF 		bl	CapSense_UpdateThresholds
 555:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 556:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 557:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_UpdateBaselineNoThreshold(sensor);
 714              		.loc 1 557 0
 715 0010 7B68     		ldr	r3, [r7, #4]
 716 0012 1800     		movs	r0, r3
 717 0014 FFF7FEFF 		bl	CapSense_UpdateBaselineNoThreshold
 558:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 559:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 560:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 561:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 562:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 563:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 718              		.loc 1 563 0
 719 0018 C046     		nop
 720 001a BD46     		mov	sp, r7
 721 001c 02B0     		add	sp, sp, #8
 722              		@ sp needed
 723 001e 80BD     		pop	{r7, pc}
 724              		.cfi_endproc
 725              	.LFE41:
 726              		.size	CapSense_UpdateSensorBaseline, .-CapSense_UpdateSensorBaseline
 727              		.section	.text.CapSense_UpdateEnabledBaselines,"ax",%progbits
 728              		.align	2
 729              		.global	CapSense_UpdateEnabledBaselines
 730              		.code	16
 731              		.thumb_func
 732              		.type	CapSense_UpdateEnabledBaselines, %function
 733              	CapSense_UpdateEnabledBaselines:
 734              	.LFB42:
 564:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 565:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 566:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 567:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateEnabledBaselines
 568:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 24


 569:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 570:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 571:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the
 572:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines
 573:Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors.
 574:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 575:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 576:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 577:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 578:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 579:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 580:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 581:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 582:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
 583:Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 584:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
 585:Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 586:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
 587:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 588:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 589:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 590:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 591:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 592:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 593:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 594:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 595:Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateEnabledBaselines(void)
 596:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 735              		.loc 1 596 0
 736              		.cfi_startproc
 737              		@ args = 0, pretend = 0, frame = 8
 738              		@ frame_needed = 1, uses_anonymous_args = 0
 739 0000 80B5     		push	{r7, lr}
 740              		.cfi_def_cfa_offset 8
 741              		.cfi_offset 7, -8
 742              		.cfi_offset 14, -4
 743 0002 82B0     		sub	sp, sp, #8
 744              		.cfi_def_cfa_offset 16
 745 0004 00AF     		add	r7, sp, #0
 746              		.cfi_def_cfa_register 7
 597:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 598:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 599:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 600:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 747              		.loc 1 600 0
 748 0006 0023     		movs	r3, #0
 749 0008 7B60     		str	r3, [r7, #4]
 750 000a 11E0     		b	.L33
 751              	.L35:
 601:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 602:Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 752              		.loc 1 602 0
 753 000c 7A68     		ldr	r2, [r7, #4]
 754 000e 0C4B     		ldr	r3, .L36
 755 0010 1100     		movs	r1, r2
 756 0012 1800     		movs	r0, r3
 757 0014 FFF7FEFF 		bl	CapSense_GetBitValue
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 25


 758 0018 0300     		movs	r3, r0
 759 001a 3B60     		str	r3, [r7]
 603:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 604:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 760              		.loc 1 604 0
 761 001c 3B68     		ldr	r3, [r7]
 762 001e 002B     		cmp	r3, #0
 763 0020 03D0     		beq	.L34
 605:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 606:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 764              		.loc 1 606 0
 765 0022 7B68     		ldr	r3, [r7, #4]
 766 0024 1800     		movs	r0, r3
 767 0026 FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 768              	.L34:
 600:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 769              		.loc 1 600 0 discriminator 2
 770 002a 7B68     		ldr	r3, [r7, #4]
 771 002c 0133     		adds	r3, r3, #1
 772 002e 7B60     		str	r3, [r7, #4]
 773              	.L33:
 600:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 774              		.loc 1 600 0 is_stmt 0 discriminator 1
 775 0030 7B68     		ldr	r3, [r7, #4]
 776 0032 002B     		cmp	r3, #0
 777 0034 EAD0     		beq	.L35
 607:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 608:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 609:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 778              		.loc 1 609 0 is_stmt 1
 779 0036 C046     		nop
 780 0038 BD46     		mov	sp, r7
 781 003a 02B0     		add	sp, sp, #8
 782              		@ sp needed
 783 003c 80BD     		pop	{r7, pc}
 784              	.L37:
 785 003e C046     		.align	2
 786              	.L36:
 787 0040 00000000 		.word	CapSense_sensorEnableMask
 788              		.cfi_endproc
 789              	.LFE42:
 790              		.size	CapSense_UpdateEnabledBaselines, .-CapSense_UpdateEnabledBaselines
 791              		.section	.text.CapSense_UpdateWidgetBaseline,"ax",%progbits
 792              		.align	2
 793              		.global	CapSense_UpdateWidgetBaseline
 794              		.code	16
 795              		.thumb_func
 796              		.type	CapSense_UpdateWidgetBaseline, %function
 797              	CapSense_UpdateWidgetBaseline:
 798              	.LFB43:
 610:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 611:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 612:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateWidgetBaseline
 613:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 614:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 615:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 616:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 26


 617:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines
 618:Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors that belong to widget.
 619:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 620:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 621:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  Widget number.
 622:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 623:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 624:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 625:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 626:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 627:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
 628:Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 629:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
 630:Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 631:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
 632:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 633:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 634:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 635:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 636:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 637:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 638:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 639:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 640:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateWidgetBaseline(uint32 widget)
 641:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 799              		.loc 1 641 0
 800              		.cfi_startproc
 801              		@ args = 0, pretend = 0, frame = 32
 802              		@ frame_needed = 1, uses_anonymous_args = 0
 803 0000 80B5     		push	{r7, lr}
 804              		.cfi_def_cfa_offset 8
 805              		.cfi_offset 7, -8
 806              		.cfi_offset 14, -4
 807 0002 88B0     		sub	sp, sp, #32
 808              		.cfi_def_cfa_offset 40
 809 0004 00AF     		add	r7, sp, #0
 810              		.cfi_def_cfa_register 7
 811 0006 7860     		str	r0, [r7, #4]
 642:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sensorsPerWidget;
 643:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 firstSensor;
 644:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 lastSensor;
 645:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 646:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 647:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 648:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get number of sensors in widget */
 649:Generated_Source\PSoC4/CapSense_CSHL.c ****     sensorsPerWidget = CapSense_numberOfSensors[widget];
 812              		.loc 1 649 0
 813 0008 0123     		movs	r3, #1
 814 000a BB61     		str	r3, [r7, #24]
 650:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 651:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get first sensor in widget */
 652:Generated_Source\PSoC4/CapSense_CSHL.c ****     firstSensor = CapSense_rawDataIndex[widget];
 815              		.loc 1 652 0
 816 000c 0023     		movs	r3, #0
 817 000e 7B61     		str	r3, [r7, #20]
 653:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 654:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get last sensor in widget */
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 27


 655:Generated_Source\PSoC4/CapSense_CSHL.c ****     lastSensor = (CapSense_rawDataIndex[widget] + sensorsPerWidget);
 818              		.loc 1 655 0
 819 0010 0023     		movs	r3, #0
 820 0012 1A00     		movs	r2, r3
 821 0014 BB69     		ldr	r3, [r7, #24]
 822 0016 D318     		adds	r3, r2, r3
 823 0018 3B61     		str	r3, [r7, #16]
 656:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 657:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 824              		.loc 1 657 0
 825 001a 7B69     		ldr	r3, [r7, #20]
 826 001c FB61     		str	r3, [r7, #28]
 827 001e 11E0     		b	.L39
 828              	.L41:
 658:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 659:Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 829              		.loc 1 659 0
 830 0020 FA69     		ldr	r2, [r7, #28]
 831 0022 0C4B     		ldr	r3, .L42
 832 0024 1100     		movs	r1, r2
 833 0026 1800     		movs	r0, r3
 834 0028 FFF7FEFF 		bl	CapSense_GetBitValue
 835 002c 0300     		movs	r3, r0
 836 002e FB60     		str	r3, [r7, #12]
 660:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 661:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 837              		.loc 1 661 0
 838 0030 FB68     		ldr	r3, [r7, #12]
 839 0032 002B     		cmp	r3, #0
 840 0034 03D0     		beq	.L40
 662:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 663:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 841              		.loc 1 663 0
 842 0036 FB69     		ldr	r3, [r7, #28]
 843 0038 1800     		movs	r0, r3
 844 003a FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 845              	.L40:
 657:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 846              		.loc 1 657 0 discriminator 2
 847 003e FB69     		ldr	r3, [r7, #28]
 848 0040 0133     		adds	r3, r3, #1
 849 0042 FB61     		str	r3, [r7, #28]
 850              	.L39:
 657:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 851              		.loc 1 657 0 is_stmt 0 discriminator 1
 852 0044 FA69     		ldr	r2, [r7, #28]
 853 0046 3B69     		ldr	r3, [r7, #16]
 854 0048 9A42     		cmp	r2, r3
 855 004a E9D3     		bcc	.L41
 664:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 665:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 666:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 856              		.loc 1 666 0 is_stmt 1
 857 004c C046     		nop
 858 004e BD46     		mov	sp, r7
 859 0050 08B0     		add	sp, sp, #32
 860              		@ sp needed
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 28


 861 0052 80BD     		pop	{r7, pc}
 862              	.L43:
 863              		.align	2
 864              	.L42:
 865 0054 00000000 		.word	CapSense_sensorEnableMask
 866              		.cfi_endproc
 867              	.LFE43:
 868              		.size	CapSense_UpdateWidgetBaseline, .-CapSense_UpdateWidgetBaseline
 869              		.section	.text.CapSense_GetBaselineData,"ax",%progbits
 870              		.align	2
 871              		.global	CapSense_GetBaselineData
 872              		.code	16
 873              		.thumb_func
 874              		.type	CapSense_GetBaselineData, %function
 875              	CapSense_GetBaselineData:
 876              	.LFB44:
 667:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 668:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 669:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 670:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetBaselineData
 671:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 672:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 673:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 674:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the sensor baseline from the component.
 675:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 676:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 677:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 678:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 679:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 680:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the baseline value of the sensor indicated by an argument.
 681:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 682:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 683:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with an initial values by scanning
 684:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 685:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 686:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 687:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 688:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 689:Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_GetBaselineData(uint32 sensor)
 690:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 877              		.loc 1 690 0
 878              		.cfi_startproc
 879              		@ args = 0, pretend = 0, frame = 8
 880              		@ frame_needed = 1, uses_anonymous_args = 0
 881 0000 80B5     		push	{r7, lr}
 882              		.cfi_def_cfa_offset 8
 883              		.cfi_offset 7, -8
 884              		.cfi_offset 14, -4
 885 0002 82B0     		sub	sp, sp, #8
 886              		.cfi_def_cfa_offset 16
 887 0004 00AF     		add	r7, sp, #0
 888              		.cfi_def_cfa_register 7
 889 0006 7860     		str	r0, [r7, #4]
 691:Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_sensorBaseline[sensor]);
 890              		.loc 1 691 0
 891 0008 034B     		ldr	r3, .L46
 892 000a 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 29


 893 000c 5200     		lsls	r2, r2, #1
 894 000e D35A     		ldrh	r3, [r2, r3]
 692:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 895              		.loc 1 692 0
 896 0010 1800     		movs	r0, r3
 897 0012 BD46     		mov	sp, r7
 898 0014 02B0     		add	sp, sp, #8
 899              		@ sp needed
 900 0016 80BD     		pop	{r7, pc}
 901              	.L47:
 902              		.align	2
 903              	.L46:
 904 0018 00000000 		.word	CapSense_sensorBaseline
 905              		.cfi_endproc
 906              	.LFE44:
 907              		.size	CapSense_GetBaselineData, .-CapSense_GetBaselineData
 908              		.section	.text.CapSense_SetBaselineData,"ax",%progbits
 909              		.align	2
 910              		.global	CapSense_SetBaselineData
 911              		.code	16
 912              		.thumb_func
 913              		.type	CapSense_SetBaselineData, %function
 914              	CapSense_SetBaselineData:
 915              	.LFB45:
 693:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 694:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 695:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 696:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetBaselineData
 697:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 698:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 699:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 700:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor baseline array.
 701:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 702:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 703:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 704:Generated_Source\PSoC4/CapSense_CSHL.c **** *  data:    Sensor baseline.
 705:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 706:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 707:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 708:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 709:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 710:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with initial values by scanning
 711:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 712:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 713:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 714:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 715:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 716:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetBaselineData(uint32 sensor, uint16 data)
 717:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 916              		.loc 1 717 0
 917              		.cfi_startproc
 918              		@ args = 0, pretend = 0, frame = 8
 919              		@ frame_needed = 1, uses_anonymous_args = 0
 920 0000 80B5     		push	{r7, lr}
 921              		.cfi_def_cfa_offset 8
 922              		.cfi_offset 7, -8
 923              		.cfi_offset 14, -4
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 30


 924 0002 82B0     		sub	sp, sp, #8
 925              		.cfi_def_cfa_offset 16
 926 0004 00AF     		add	r7, sp, #0
 927              		.cfi_def_cfa_register 7
 928 0006 7860     		str	r0, [r7, #4]
 929 0008 0A00     		movs	r2, r1
 930 000a BB1C     		adds	r3, r7, #2
 931 000c 1A80     		strh	r2, [r3]
 718:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = data;
 932              		.loc 1 718 0
 933 000e 054B     		ldr	r3, .L49
 934 0010 7A68     		ldr	r2, [r7, #4]
 935 0012 5200     		lsls	r2, r2, #1
 936 0014 B91C     		adds	r1, r7, #2
 937 0016 0988     		ldrh	r1, [r1]
 938 0018 D152     		strh	r1, [r2, r3]
 719:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 939              		.loc 1 719 0
 940 001a C046     		nop
 941 001c BD46     		mov	sp, r7
 942 001e 02B0     		add	sp, sp, #8
 943              		@ sp needed
 944 0020 80BD     		pop	{r7, pc}
 945              	.L50:
 946 0022 C046     		.align	2
 947              	.L49:
 948 0024 00000000 		.word	CapSense_sensorBaseline
 949              		.cfi_endproc
 950              	.LFE45:
 951              		.size	CapSense_SetBaselineData, .-CapSense_SetBaselineData
 952              		.section	.text.CapSense_GetDiffCountData,"ax",%progbits
 953              		.align	2
 954              		.global	CapSense_GetDiffCountData
 955              		.code	16
 956              		.thumb_func
 957              		.type	CapSense_GetDiffCountData, %function
 958              	CapSense_GetDiffCountData:
 959              	.LFB46:
 720:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 721:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 722:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 723:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDiffCountData
 724:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 725:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 726:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 727:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function returns the Sensor Signal from the component.
 728:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 729:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 730:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 731:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 732:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 733:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the difference count value of the sensor indicated by the
 734:Generated_Source\PSoC4/CapSense_CSHL.c **** *  argument.
 735:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 736:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 737:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 738:Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 31


 739:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 740:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 741:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 742:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 743:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDiffCountData(uint32 sensor)
 744:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 960              		.loc 1 744 0
 961              		.cfi_startproc
 962              		@ args = 0, pretend = 0, frame = 8
 963              		@ frame_needed = 1, uses_anonymous_args = 0
 964 0000 80B5     		push	{r7, lr}
 965              		.cfi_def_cfa_offset 8
 966              		.cfi_offset 7, -8
 967              		.cfi_offset 14, -4
 968 0002 82B0     		sub	sp, sp, #8
 969              		.cfi_def_cfa_offset 16
 970 0004 00AF     		add	r7, sp, #0
 971              		.cfi_def_cfa_register 7
 972 0006 7860     		str	r0, [r7, #4]
 745:Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_sensorSignal[sensor]);
 973              		.loc 1 745 0
 974 0008 034A     		ldr	r2, .L53
 975 000a 7B68     		ldr	r3, [r7, #4]
 976 000c D318     		adds	r3, r2, r3
 977 000e 1B78     		ldrb	r3, [r3]
 746:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 978              		.loc 1 746 0
 979 0010 1800     		movs	r0, r3
 980 0012 BD46     		mov	sp, r7
 981 0014 02B0     		add	sp, sp, #8
 982              		@ sp needed
 983 0016 80BD     		pop	{r7, pc}
 984              	.L54:
 985              		.align	2
 986              	.L53:
 987 0018 00000000 		.word	CapSense_sensorSignal
 988              		.cfi_endproc
 989              	.LFE46:
 990              		.size	CapSense_GetDiffCountData, .-CapSense_GetDiffCountData
 991              		.section	.text.CapSense_SetDiffCountData,"ax",%progbits
 992              		.align	2
 993              		.global	CapSense_SetDiffCountData
 994              		.code	16
 995              		.thumb_func
 996              		.type	CapSense_SetDiffCountData, %function
 997              	CapSense_SetDiffCountData:
 998              	.LFB47:
 747:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 748:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 749:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 750:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetDiffCountData
 751:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 752:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 753:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 754:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor signal array.
 755:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 756:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 32


 757:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 758:Generated_Source\PSoC4/CapSense_CSHL.c **** *  value:   Sensor signal.
 759:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 760:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 761:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 762:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 763:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 764:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 765:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 766:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 767:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 768:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 769:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 770:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetDiffCountData(uint32 sensor, uint8 value)
 771:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 999              		.loc 1 771 0
 1000              		.cfi_startproc
 1001              		@ args = 0, pretend = 0, frame = 8
 1002              		@ frame_needed = 1, uses_anonymous_args = 0
 1003 0000 80B5     		push	{r7, lr}
 1004              		.cfi_def_cfa_offset 8
 1005              		.cfi_offset 7, -8
 1006              		.cfi_offset 14, -4
 1007 0002 82B0     		sub	sp, sp, #8
 1008              		.cfi_def_cfa_offset 16
 1009 0004 00AF     		add	r7, sp, #0
 1010              		.cfi_def_cfa_register 7
 1011 0006 7860     		str	r0, [r7, #4]
 1012 0008 0A00     		movs	r2, r1
 1013 000a FB1C     		adds	r3, r7, #3
 1014 000c 1A70     		strb	r2, [r3]
 772:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = value;
 1015              		.loc 1 772 0
 1016 000e 054A     		ldr	r2, .L56
 1017 0010 7B68     		ldr	r3, [r7, #4]
 1018 0012 D318     		adds	r3, r2, r3
 1019 0014 FA1C     		adds	r2, r7, #3
 1020 0016 1278     		ldrb	r2, [r2]
 1021 0018 1A70     		strb	r2, [r3]
 773:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1022              		.loc 1 773 0
 1023 001a C046     		nop
 1024 001c BD46     		mov	sp, r7
 1025 001e 02B0     		add	sp, sp, #8
 1026              		@ sp needed
 1027 0020 80BD     		pop	{r7, pc}
 1028              	.L57:
 1029 0022 C046     		.align	2
 1030              	.L56:
 1031 0024 00000000 		.word	CapSense_sensorSignal
 1032              		.cfi_endproc
 1033              	.LFE47:
 1034              		.size	CapSense_SetDiffCountData, .-CapSense_SetDiffCountData
 1035              		.section	.text.CapSense_GetFingerThreshold,"ax",%progbits
 1036              		.align	2
 1037              		.global	CapSense_GetFingerThreshold
 1038              		.code	16
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 33


 1039              		.thumb_func
 1040              		.type	CapSense_GetFingerThreshold, %function
 1041              	CapSense_GetFingerThreshold:
 1042              	.LFB48:
 774:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 775:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 776:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 777:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerThreshold
 778:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 779:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 780:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 781:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the finger threshold from the component.
 782:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 783:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 784:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 785:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 786:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 787:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the finger threshold of the widget indicated by the argument.
 788:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 789:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 790:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_fingerThreshold[] - This array contains the level of signal
 791:Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that is determined if a finger is present on the widget.
 792:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 793:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 794:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 795:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 796:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 797:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetFingerThreshold(uint32 widget)
 798:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1043              		.loc 1 798 0
 1044              		.cfi_startproc
 1045              		@ args = 0, pretend = 0, frame = 8
 1046              		@ frame_needed = 1, uses_anonymous_args = 0
 1047 0000 80B5     		push	{r7, lr}
 1048              		.cfi_def_cfa_offset 8
 1049              		.cfi_offset 7, -8
 1050              		.cfi_offset 14, -4
 1051 0002 82B0     		sub	sp, sp, #8
 1052              		.cfi_def_cfa_offset 16
 1053 0004 00AF     		add	r7, sp, #0
 1054              		.cfi_def_cfa_register 7
 1055 0006 7860     		str	r0, [r7, #4]
 799:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_fingerThreshold[widget]);
 1056              		.loc 1 799 0
 1057 0008 034A     		ldr	r2, .L60
 1058 000a 7B68     		ldr	r3, [r7, #4]
 1059 000c D318     		adds	r3, r2, r3
 1060 000e 1B78     		ldrb	r3, [r3]
 800:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1061              		.loc 1 800 0
 1062 0010 1800     		movs	r0, r3
 1063 0012 BD46     		mov	sp, r7
 1064 0014 02B0     		add	sp, sp, #8
 1065              		@ sp needed
 1066 0016 80BD     		pop	{r7, pc}
 1067              	.L61:
 1068              		.align	2
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 34


 1069              	.L60:
 1070 0018 00000000 		.word	CapSense_fingerThreshold
 1071              		.cfi_endproc
 1072              	.LFE48:
 1073              		.size	CapSense_GetFingerThreshold, .-CapSense_GetFingerThreshold
 1074              		.section	.text.CapSense_GetNoiseThreshold,"ax",%progbits
 1075              		.align	2
 1076              		.global	CapSense_GetNoiseThreshold
 1077              		.code	16
 1078              		.thumb_func
 1079              		.type	CapSense_GetNoiseThreshold, %function
 1080              	CapSense_GetNoiseThreshold:
 1081              	.LFB49:
 801:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 802:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 803:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 804:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNoiseThreshold
 805:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 806:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 807:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 808:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the noise threshold from the component.
 809:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 810:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 811:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 812:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 813:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 814:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the noise threshold of the widget indicated by the argument.
 815:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 816:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 817:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_noiseThreshold[] - This array contains the level of signal
 818:Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that determines the level of noise in the capacitive scan.
 819:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 820:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 821:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 822:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 823:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 824:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetNoiseThreshold(uint32 widget)
 825:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1082              		.loc 1 825 0
 1083              		.cfi_startproc
 1084              		@ args = 0, pretend = 0, frame = 8
 1085              		@ frame_needed = 1, uses_anonymous_args = 0
 1086 0000 80B5     		push	{r7, lr}
 1087              		.cfi_def_cfa_offset 8
 1088              		.cfi_offset 7, -8
 1089              		.cfi_offset 14, -4
 1090 0002 82B0     		sub	sp, sp, #8
 1091              		.cfi_def_cfa_offset 16
 1092 0004 00AF     		add	r7, sp, #0
 1093              		.cfi_def_cfa_register 7
 1094 0006 7860     		str	r0, [r7, #4]
 826:Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_noiseThreshold[widget]);
 1095              		.loc 1 826 0
 1096 0008 034A     		ldr	r2, .L64
 1097 000a 7B68     		ldr	r3, [r7, #4]
 1098 000c D318     		adds	r3, r2, r3
 1099 000e 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 35


 827:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1100              		.loc 1 827 0
 1101 0010 1800     		movs	r0, r3
 1102 0012 BD46     		mov	sp, r7
 1103 0014 02B0     		add	sp, sp, #8
 1104              		@ sp needed
 1105 0016 80BD     		pop	{r7, pc}
 1106              	.L65:
 1107              		.align	2
 1108              	.L64:
 1109 0018 00000000 		.word	CapSense_noiseThreshold
 1110              		.cfi_endproc
 1111              	.LFE49:
 1112              		.size	CapSense_GetNoiseThreshold, .-CapSense_GetNoiseThreshold
 1113              		.section	.text.CapSense_GetFingerHysteresis,"ax",%progbits
 1114              		.align	2
 1115              		.global	CapSense_GetFingerHysteresis
 1116              		.code	16
 1117              		.thumb_func
 1118              		.type	CapSense_GetFingerHysteresis, %function
 1119              	CapSense_GetFingerHysteresis:
 1120              	.LFB50:
 828:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 829:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 830:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 831:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerHysteresis
 832:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 833:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 834:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 835:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the Hysteresis value from the component.
 836:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 837:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 838:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 839:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 840:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 841:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the Hysteresis of the widget indicated by the argument.
 842:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 843:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 844:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_hysteresis[] - This array contains the hysteresis value
 845:Generated_Source\PSoC4/CapSense_CSHL.c **** *   for each widget.
 846:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 847:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 848:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 849:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 850:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 851:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 852:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetFingerHysteresis(uint32 widget)
 853:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1121              		.loc 1 853 0
 1122              		.cfi_startproc
 1123              		@ args = 0, pretend = 0, frame = 8
 1124              		@ frame_needed = 1, uses_anonymous_args = 0
 1125 0000 80B5     		push	{r7, lr}
 1126              		.cfi_def_cfa_offset 8
 1127              		.cfi_offset 7, -8
 1128              		.cfi_offset 14, -4
 1129 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 36


 1130              		.cfi_def_cfa_offset 16
 1131 0004 00AF     		add	r7, sp, #0
 1132              		.cfi_def_cfa_register 7
 1133 0006 7860     		str	r0, [r7, #4]
 854:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_hysteresis[widget]);
 1134              		.loc 1 854 0
 1135 0008 034A     		ldr	r2, .L68
 1136 000a 7B68     		ldr	r3, [r7, #4]
 1137 000c D318     		adds	r3, r2, r3
 1138 000e 1B78     		ldrb	r3, [r3]
 855:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1139              		.loc 1 855 0
 1140 0010 1800     		movs	r0, r3
 1141 0012 BD46     		mov	sp, r7
 1142 0014 02B0     		add	sp, sp, #8
 1143              		@ sp needed
 1144 0016 80BD     		pop	{r7, pc}
 1145              	.L69:
 1146              		.align	2
 1147              	.L68:
 1148 0018 00000000 		.word	CapSense_hysteresis
 1149              		.cfi_endproc
 1150              	.LFE50:
 1151              		.size	CapSense_GetFingerHysteresis, .-CapSense_GetFingerHysteresis
 1152              		.section	.text.CapSense_GetNegativeNoiseThreshold,"ax",%progbits
 1153              		.align	2
 1154              		.global	CapSense_GetNegativeNoiseThreshold
 1155              		.code	16
 1156              		.thumb_func
 1157              		.type	CapSense_GetNegativeNoiseThreshold, %function
 1158              	CapSense_GetNegativeNoiseThreshold:
 1159              	.LFB51:
 856:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 857:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 858:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 859:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNegativeNoiseThreshold
 860:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 861:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 862:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 863:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the negative noise threshold from the component.
 864:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 865:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 866:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 867:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 868:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return Value:
 869:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the negative noise threshold
 870:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 871:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 872:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_negativeNoiseThreshold - This variable specifies the negative
 873:Generated_Source\PSoC4/CapSense_CSHL.c **** *   difference between the raw count and baseline levels for Baseline resetting
 874:Generated_Source\PSoC4/CapSense_CSHL.c **** *   to the raw count level.
 875:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 876:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 877:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 878:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 879:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 880:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetNegativeNoiseThreshold(uint32 widget)
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 37


 881:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1160              		.loc 1 881 0
 1161              		.cfi_startproc
 1162              		@ args = 0, pretend = 0, frame = 8
 1163              		@ frame_needed = 1, uses_anonymous_args = 0
 1164 0000 80B5     		push	{r7, lr}
 1165              		.cfi_def_cfa_offset 8
 1166              		.cfi_offset 7, -8
 1167              		.cfi_offset 14, -4
 1168 0002 82B0     		sub	sp, sp, #8
 1169              		.cfi_def_cfa_offset 16
 1170 0004 00AF     		add	r7, sp, #0
 1171              		.cfi_def_cfa_register 7
 1172 0006 7860     		str	r0, [r7, #4]
 882:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 883:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_negativeNoiseThreshold[widget]);
 1173              		.loc 1 883 0
 1174 0008 034A     		ldr	r2, .L72
 1175 000a 7B68     		ldr	r3, [r7, #4]
 1176 000c D318     		adds	r3, r2, r3
 1177 000e 1B78     		ldrb	r3, [r3]
 884:Generated_Source\PSoC4/CapSense_CSHL.c **** #else
 885:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_NEGATIVE_NOISE_THRESHOLD);
 886:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 887:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1178              		.loc 1 887 0
 1179 0010 1800     		movs	r0, r3
 1180 0012 BD46     		mov	sp, r7
 1181 0014 02B0     		add	sp, sp, #8
 1182              		@ sp needed
 1183 0016 80BD     		pop	{r7, pc}
 1184              	.L73:
 1185              		.align	2
 1186              	.L72:
 1187 0018 00000000 		.word	CapSense_negativeNoiseThreshold
 1188              		.cfi_endproc
 1189              	.LFE51:
 1190              		.size	CapSense_GetNegativeNoiseThreshold, .-CapSense_GetNegativeNoiseThreshold
 1191              		.section	.text.CapSense_SetFingerThreshold,"ax",%progbits
 1192              		.align	2
 1193              		.global	CapSense_SetFingerThreshold
 1194              		.code	16
 1195              		.thumb_func
 1196              		.type	CapSense_SetFingerThreshold, %function
 1197              	CapSense_SetFingerThreshold:
 1198              	.LFB52:
 888:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 889:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 890:Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 891:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 892:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetFingerThreshold
 893:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 894:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 895:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 896:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the finger threshold value for a widget.
 897:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 898:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 38


 899:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensorNumber:  widget index.
 900:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Finger threshold value for the widget.
 901:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 902:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 903:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 904:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 905:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 906:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_fingerThreshold[] - This array contains the level of signal
 907:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   for each widget that determines if a finger is present on the widget.
 908:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 909:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 910:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 911:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 912:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 913:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetFingerThreshold(uint32 widget, uint8 value)
 914:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1199              		.loc 1 914 0
 1200              		.cfi_startproc
 1201              		@ args = 0, pretend = 0, frame = 8
 1202              		@ frame_needed = 1, uses_anonymous_args = 0
 1203 0000 80B5     		push	{r7, lr}
 1204              		.cfi_def_cfa_offset 8
 1205              		.cfi_offset 7, -8
 1206              		.cfi_offset 14, -4
 1207 0002 82B0     		sub	sp, sp, #8
 1208              		.cfi_def_cfa_offset 16
 1209 0004 00AF     		add	r7, sp, #0
 1210              		.cfi_def_cfa_register 7
 1211 0006 7860     		str	r0, [r7, #4]
 1212 0008 0A00     		movs	r2, r1
 1213 000a FB1C     		adds	r3, r7, #3
 1214 000c 1A70     		strb	r2, [r3]
 915:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_fingerThreshold[widget] = value;
 1215              		.loc 1 915 0
 1216 000e 054A     		ldr	r2, .L75
 1217 0010 7B68     		ldr	r3, [r7, #4]
 1218 0012 D318     		adds	r3, r2, r3
 1219 0014 FA1C     		adds	r2, r7, #3
 1220 0016 1278     		ldrb	r2, [r2]
 1221 0018 1A70     		strb	r2, [r3]
 916:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1222              		.loc 1 916 0
 1223 001a C046     		nop
 1224 001c BD46     		mov	sp, r7
 1225 001e 02B0     		add	sp, sp, #8
 1226              		@ sp needed
 1227 0020 80BD     		pop	{r7, pc}
 1228              	.L76:
 1229 0022 C046     		.align	2
 1230              	.L75:
 1231 0024 00000000 		.word	CapSense_fingerThreshold
 1232              		.cfi_endproc
 1233              	.LFE52:
 1234              		.size	CapSense_SetFingerThreshold, .-CapSense_SetFingerThreshold
 1235              		.section	.text.CapSense_SetNoiseThreshold,"ax",%progbits
 1236              		.align	2
 1237              		.global	CapSense_SetNoiseThreshold
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 39


 1238              		.code	16
 1239              		.thumb_func
 1240              		.type	CapSense_SetNoiseThreshold, %function
 1241              	CapSense_SetNoiseThreshold:
 1242              	.LFB53:
 917:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 918:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 919:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 920:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetNoiseThreshold
 921:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 922:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 923:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 924:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Noise Threshold value for each widget.
 925:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 926:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 927:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Sensor index number.
 928:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:   Noise Threshold value for widget.
 929:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 930:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 931:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 932:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 933:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 934:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_noiseThreshold[] - This array contains the level of signal
 935:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   for each widget that determines the level of noise in the capacitive scan.
 936:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 937:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 938:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 939:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 940:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 941:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetNoiseThreshold(uint32 widget, uint8 value)
 942:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1243              		.loc 1 942 0
 1244              		.cfi_startproc
 1245              		@ args = 0, pretend = 0, frame = 8
 1246              		@ frame_needed = 1, uses_anonymous_args = 0
 1247 0000 80B5     		push	{r7, lr}
 1248              		.cfi_def_cfa_offset 8
 1249              		.cfi_offset 7, -8
 1250              		.cfi_offset 14, -4
 1251 0002 82B0     		sub	sp, sp, #8
 1252              		.cfi_def_cfa_offset 16
 1253 0004 00AF     		add	r7, sp, #0
 1254              		.cfi_def_cfa_register 7
 1255 0006 7860     		str	r0, [r7, #4]
 1256 0008 0A00     		movs	r2, r1
 1257 000a FB1C     		adds	r3, r7, #3
 1258 000c 1A70     		strb	r2, [r3]
 943:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_noiseThreshold[widget] = value;
 1259              		.loc 1 943 0
 1260 000e 054A     		ldr	r2, .L78
 1261 0010 7B68     		ldr	r3, [r7, #4]
 1262 0012 D318     		adds	r3, r2, r3
 1263 0014 FA1C     		adds	r2, r7, #3
 1264 0016 1278     		ldrb	r2, [r2]
 1265 0018 1A70     		strb	r2, [r3]
 944:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1266              		.loc 1 944 0
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 40


 1267 001a C046     		nop
 1268 001c BD46     		mov	sp, r7
 1269 001e 02B0     		add	sp, sp, #8
 1270              		@ sp needed
 1271 0020 80BD     		pop	{r7, pc}
 1272              	.L79:
 1273 0022 C046     		.align	2
 1274              	.L78:
 1275 0024 00000000 		.word	CapSense_noiseThreshold
 1276              		.cfi_endproc
 1277              	.LFE53:
 1278              		.size	CapSense_SetNoiseThreshold, .-CapSense_SetNoiseThreshold
 1279              		.section	.text.CapSense_SetFingerHysteresis,"ax",%progbits
 1280              		.align	2
 1281              		.global	CapSense_SetFingerHysteresis
 1282              		.code	16
 1283              		.thumb_func
 1284              		.type	CapSense_SetFingerHysteresis, %function
 1285              	CapSense_SetFingerHysteresis:
 1286              	.LFB54:
 945:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 946:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 947:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 948:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetFingerHysteresis
 949:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 950:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 951:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 952:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Hysteresis value of a widget
 953:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 954:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 955:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Hysteresis value for widgets.
 956:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  widget number
 957:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 958:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 959:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 960:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 961:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 962:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_hysteresis[] - This array contains the hysteresis value for each widget.
 963:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 964:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 965:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 966:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 967:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 968:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 969:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetFingerHysteresis(uint32 widget, uint8 value)
 970:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1287              		.loc 1 970 0
 1288              		.cfi_startproc
 1289              		@ args = 0, pretend = 0, frame = 8
 1290              		@ frame_needed = 1, uses_anonymous_args = 0
 1291 0000 80B5     		push	{r7, lr}
 1292              		.cfi_def_cfa_offset 8
 1293              		.cfi_offset 7, -8
 1294              		.cfi_offset 14, -4
 1295 0002 82B0     		sub	sp, sp, #8
 1296              		.cfi_def_cfa_offset 16
 1297 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 41


 1298              		.cfi_def_cfa_register 7
 1299 0006 7860     		str	r0, [r7, #4]
 1300 0008 0A00     		movs	r2, r1
 1301 000a FB1C     		adds	r3, r7, #3
 1302 000c 1A70     		strb	r2, [r3]
 971:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_hysteresis[widget] = value;
 1303              		.loc 1 971 0
 1304 000e 054A     		ldr	r2, .L81
 1305 0010 7B68     		ldr	r3, [r7, #4]
 1306 0012 D318     		adds	r3, r2, r3
 1307 0014 FA1C     		adds	r2, r7, #3
 1308 0016 1278     		ldrb	r2, [r2]
 1309 0018 1A70     		strb	r2, [r3]
 972:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1310              		.loc 1 972 0
 1311 001a C046     		nop
 1312 001c BD46     		mov	sp, r7
 1313 001e 02B0     		add	sp, sp, #8
 1314              		@ sp needed
 1315 0020 80BD     		pop	{r7, pc}
 1316              	.L82:
 1317 0022 C046     		.align	2
 1318              	.L81:
 1319 0024 00000000 		.word	CapSense_hysteresis
 1320              		.cfi_endproc
 1321              	.LFE54:
 1322              		.size	CapSense_SetFingerHysteresis, .-CapSense_SetFingerHysteresis
 1323              		.section	.text.CapSense_SetNegativeNoiseThreshold,"ax",%progbits
 1324              		.align	2
 1325              		.global	CapSense_SetNegativeNoiseThreshold
 1326              		.code	16
 1327              		.thumb_func
 1328              		.type	CapSense_SetNegativeNoiseThreshold, %function
 1329              	CapSense_SetNegativeNoiseThreshold:
 1330              	.LFB55:
 973:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 974:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 975:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 976:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetNegativeNoiseThreshold
 977:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 978:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 979:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 980:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Negative Noise Threshold value of a widget
 981:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 982:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 983:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Negative Noise Threshold value for widgets.
 984:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget: widget number
 985:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 986:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 987:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 988:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 989:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 990:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_negativeNoiseThreshold  - This parameter specifies the negative
 991:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   difference between the raw count and baseline levels for Baseline resetting to
 992:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   the raw count level.
 993:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 994:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 42


 995:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 996:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 997:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 998:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetNegativeNoiseThreshold(uint32 widget, uint8 value)
 999:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1331              		.loc 1 999 0
 1332              		.cfi_startproc
 1333              		@ args = 0, pretend = 0, frame = 8
 1334              		@ frame_needed = 1, uses_anonymous_args = 0
 1335 0000 80B5     		push	{r7, lr}
 1336              		.cfi_def_cfa_offset 8
 1337              		.cfi_offset 7, -8
 1338              		.cfi_offset 14, -4
 1339 0002 82B0     		sub	sp, sp, #8
 1340              		.cfi_def_cfa_offset 16
 1341 0004 00AF     		add	r7, sp, #0
 1342              		.cfi_def_cfa_register 7
 1343 0006 7860     		str	r0, [r7, #4]
 1344 0008 0A00     		movs	r2, r1
 1345 000a FB1C     		adds	r3, r7, #3
 1346 000c 1A70     		strb	r2, [r3]
1000:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_negativeNoiseThreshold[widget] = value;
 1347              		.loc 1 1000 0
 1348 000e 054A     		ldr	r2, .L84
 1349 0010 7B68     		ldr	r3, [r7, #4]
 1350 0012 D318     		adds	r3, r2, r3
 1351 0014 FA1C     		adds	r2, r7, #3
 1352 0016 1278     		ldrb	r2, [r2]
 1353 0018 1A70     		strb	r2, [r3]
1001:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1354              		.loc 1 1001 0
 1355 001a C046     		nop
 1356 001c BD46     		mov	sp, r7
 1357 001e 02B0     		add	sp, sp, #8
 1358              		@ sp needed
 1359 0020 80BD     		pop	{r7, pc}
 1360              	.L85:
 1361 0022 C046     		.align	2
 1362              	.L84:
 1363 0024 00000000 		.word	CapSense_negativeNoiseThreshold
 1364              		.cfi_endproc
 1365              	.LFE55:
 1366              		.size	CapSense_SetNegativeNoiseThreshold, .-CapSense_SetNegativeNoiseThreshold
 1367              		.section	.text.CapSense_SetDebounce,"ax",%progbits
 1368              		.align	2
 1369              		.global	CapSense_SetDebounce
 1370              		.code	16
 1371              		.thumb_func
 1372              		.type	CapSense_SetDebounce, %function
 1373              	CapSense_SetDebounce:
 1374              	.LFB56:
1002:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1003:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1004:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1005:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetDebounce
1006:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1007:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 43


1008:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1009:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the debounce value for a widget.
1010:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1011:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1012:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Debounce value for widget.
1013:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget: widget index.
1014:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1015:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
1016:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1017:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1018:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1019:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_debounce[] - This array contains the debounce value for each widget.
1020:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
1021:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1022:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1023:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1024:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1025:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1026:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetDebounce(uint32 widget, uint8 value)
1027:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1375              		.loc 1 1027 0
 1376              		.cfi_startproc
 1377              		@ args = 0, pretend = 0, frame = 8
 1378              		@ frame_needed = 1, uses_anonymous_args = 0
 1379 0000 80B5     		push	{r7, lr}
 1380              		.cfi_def_cfa_offset 8
 1381              		.cfi_offset 7, -8
 1382              		.cfi_offset 14, -4
 1383 0002 82B0     		sub	sp, sp, #8
 1384              		.cfi_def_cfa_offset 16
 1385 0004 00AF     		add	r7, sp, #0
 1386              		.cfi_def_cfa_register 7
 1387 0006 7860     		str	r0, [r7, #4]
 1388 0008 0A00     		movs	r2, r1
 1389 000a FB1C     		adds	r3, r7, #3
 1390 000c 1A70     		strb	r2, [r3]
1028:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_debounce[widget] = value;
 1391              		.loc 1 1028 0
 1392 000e 054A     		ldr	r2, .L87
 1393 0010 7B68     		ldr	r3, [r7, #4]
 1394 0012 D318     		adds	r3, r2, r3
 1395 0014 FA1C     		adds	r2, r7, #3
 1396 0016 1278     		ldrb	r2, [r2]
 1397 0018 1A70     		strb	r2, [r3]
1029:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1398              		.loc 1 1029 0
 1399 001a C046     		nop
 1400 001c BD46     		mov	sp, r7
 1401 001e 02B0     		add	sp, sp, #8
 1402              		@ sp needed
 1403 0020 80BD     		pop	{r7, pc}
 1404              	.L88:
 1405 0022 C046     		.align	2
 1406              	.L87:
 1407 0024 00000000 		.word	CapSense_debounce
 1408              		.cfi_endproc
 1409              	.LFE56:
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 44


 1410              		.size	CapSense_SetDebounce, .-CapSense_SetDebounce
 1411              		.section	.text.CapSense_SetLowBaselineReset,"ax",%progbits
 1412              		.align	2
 1413              		.global	CapSense_SetLowBaselineReset
 1414              		.code	16
 1415              		.thumb_func
 1416              		.type	CapSense_SetLowBaselineReset, %function
 1417              	CapSense_SetLowBaselineReset:
 1418              	.LFB57:
1030:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1031:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1032:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1033:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetLowBaselineReset
1034:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1035:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1036:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1037:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the low baseline reset threshold value for the sensor.
1038:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1039:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1040:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value: low baseline reset threshold value.
1041:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensor: Sensor index.
1042:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1043:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
1044:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1045:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1046:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1047:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_lowBaselineReset[] - This array contains the Baseline update
1048:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold value for each sensor.
1049:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1050:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1051:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1052:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1053:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1054:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetLowBaselineReset(uint32 sensor, uint8 value)
1055:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1419              		.loc 1 1055 0
 1420              		.cfi_startproc
 1421              		@ args = 0, pretend = 0, frame = 8
 1422              		@ frame_needed = 1, uses_anonymous_args = 0
 1423 0000 80B5     		push	{r7, lr}
 1424              		.cfi_def_cfa_offset 8
 1425              		.cfi_offset 7, -8
 1426              		.cfi_offset 14, -4
 1427 0002 82B0     		sub	sp, sp, #8
 1428              		.cfi_def_cfa_offset 16
 1429 0004 00AF     		add	r7, sp, #0
 1430              		.cfi_def_cfa_register 7
 1431 0006 7860     		str	r0, [r7, #4]
 1432 0008 0A00     		movs	r2, r1
 1433 000a FB1C     		adds	r3, r7, #3
 1434 000c 1A70     		strb	r2, [r3]
1056:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_lowBaselineReset[sensor] = value;
 1435              		.loc 1 1056 0
 1436 000e 054A     		ldr	r2, .L90
 1437 0010 7B68     		ldr	r3, [r7, #4]
 1438 0012 D318     		adds	r3, r2, r3
 1439 0014 FA1C     		adds	r2, r7, #3
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 45


 1440 0016 1278     		ldrb	r2, [r2]
 1441 0018 1A70     		strb	r2, [r3]
1057:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1442              		.loc 1 1057 0
 1443 001a C046     		nop
 1444 001c BD46     		mov	sp, r7
 1445 001e 02B0     		add	sp, sp, #8
 1446              		@ sp needed
 1447 0020 80BD     		pop	{r7, pc}
 1448              	.L91:
 1449 0022 C046     		.align	2
 1450              	.L90:
 1451 0024 00000000 		.word	CapSense_lowBaselineReset
 1452              		.cfi_endproc
 1453              	.LFE57:
 1454              		.size	CapSense_SetLowBaselineReset, .-CapSense_SetLowBaselineReset
 1455              		.section	.text.CapSense_CheckIsSensorActive,"ax",%progbits
 1456              		.align	2
 1457              		.global	CapSense_CheckIsSensorActive
 1458              		.code	16
 1459              		.thumb_func
 1460              		.type	CapSense_CheckIsSensorActive, %function
 1461              	CapSense_CheckIsSensorActive:
 1462              	.LFB58:
1058:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
1059:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1060:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1061:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1062:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsSensorActive
1063:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1064:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1065:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1066:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[sensor] array element to the finger
1067:Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold of the widget it belongs to. The hysteresis and debounce are taken into
1068:Generated_Source\PSoC4/CapSense_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold
1069:Generated_Source\PSoC4/CapSense_CSHL.c **** *  based on whether the sensor is currently active.
1070:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
1071:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
1072:Generated_Source\PSoC4/CapSense_CSHL.c **** *  The debounce counter is added to the sensor active transition.
1073:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function updates the CapSense_sensorOnMask[] array element.
1074:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1075:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1076:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
1077:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1078:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1079:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
1080:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1081:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1082:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - used to store the difference between
1083:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and a previous value of the baseline.
1084:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounceCounter[]   - used to store the current debounce
1085:Generated_Source\PSoC4/CapSense_CSHL.c **** *  counter of the sensor. the widget which have this parameter are buttons, matrix
1086:Generated_Source\PSoC4/CapSense_CSHL.c **** *  buttons, proximity, and guard. All other widgets don't have the  debounce parameter
1087:Generated_Source\PSoC4/CapSense_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
1088:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[] - used to store the sensors on/off state.
1089:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[0] contains the masked bits for sensors
1090:Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 46


1091:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1092:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1093:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor is inactive.
1094:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is active.
1095:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1096:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1097:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1098:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1099:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1100:Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsSensorActive(uint32 sensor)
1101:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1463              		.loc 1 1101 0
 1464              		.cfi_startproc
 1465              		@ args = 0, pretend = 0, frame = 16
 1466              		@ frame_needed = 1, uses_anonymous_args = 0
 1467 0000 80B5     		push	{r7, lr}
 1468              		.cfi_def_cfa_offset 8
 1469              		.cfi_offset 7, -8
 1470              		.cfi_offset 14, -4
 1471 0002 84B0     		sub	sp, sp, #16
 1472              		.cfi_def_cfa_offset 24
 1473 0004 00AF     		add	r7, sp, #0
 1474              		.cfi_def_cfa_register 7
 1475 0006 7860     		str	r0, [r7, #4]
1102:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 widget;
1103:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 debounce;
1104:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 debounceIndex;
1105:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1106:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 fingerThreshold;
1107:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 hysteresis;
1108:Generated_Source\PSoC4/CapSense_CSHL.c ****     
1109:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1110:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Prepare to find debounce counter index */
1111:Generated_Source\PSoC4/CapSense_CSHL.c ****     widget = CapSense_widgetNumber[sensor];
 1476              		.loc 1 1111 0
 1477 0008 0F23     		movs	r3, #15
 1478 000a FB18     		adds	r3, r7, r3
 1479 000c 4149     		ldr	r1, .L101
 1480 000e 7A68     		ldr	r2, [r7, #4]
 1481 0010 8A18     		adds	r2, r1, r2
 1482 0012 1278     		ldrb	r2, [r2]
 1483 0014 1A70     		strb	r2, [r3]
1112:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1113:Generated_Source\PSoC4/CapSense_CSHL.c ****     fingerThreshold = CapSense_fingerThreshold[widget];
 1484              		.loc 1 1113 0
 1485 0016 0F23     		movs	r3, #15
 1486 0018 FB18     		adds	r3, r7, r3
 1487 001a 1A78     		ldrb	r2, [r3]
 1488 001c 0E23     		movs	r3, #14
 1489 001e FB18     		adds	r3, r7, r3
 1490 0020 3D49     		ldr	r1, .L101+4
 1491 0022 8A5C     		ldrb	r2, [r1, r2]
 1492 0024 1A70     		strb	r2, [r3]
1114:Generated_Source\PSoC4/CapSense_CSHL.c ****     hysteresis = CapSense_hysteresis[widget];
 1493              		.loc 1 1114 0
 1494 0026 0F23     		movs	r3, #15
 1495 0028 FB18     		adds	r3, r7, r3
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 47


 1496 002a 1A78     		ldrb	r2, [r3]
 1497 002c 0D23     		movs	r3, #13
 1498 002e FB18     		adds	r3, r7, r3
 1499 0030 3A49     		ldr	r1, .L101+8
 1500 0032 8A5C     		ldrb	r2, [r1, r2]
 1501 0034 1A70     		strb	r2, [r3]
1115:Generated_Source\PSoC4/CapSense_CSHL.c ****     debounce = CapSense_debounce[widget];
 1502              		.loc 1 1115 0
 1503 0036 0F23     		movs	r3, #15
 1504 0038 FB18     		adds	r3, r7, r3
 1505 003a 1A78     		ldrb	r2, [r3]
 1506 003c 0C23     		movs	r3, #12
 1507 003e FB18     		adds	r3, r7, r3
 1508 0040 3749     		ldr	r1, .L101+12
 1509 0042 8A5C     		ldrb	r2, [r1, r2]
 1510 0044 1A70     		strb	r2, [r3]
1116:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1117:Generated_Source\PSoC4/CapSense_CSHL.c ****         debounceIndex = widget;
 1511              		.loc 1 1117 0
 1512 0046 0B23     		movs	r3, #11
 1513 0048 FB18     		adds	r3, r7, r3
 1514 004a 0F22     		movs	r2, #15
 1515 004c BA18     		adds	r2, r7, r2
 1516 004e 1278     		ldrb	r2, [r2]
 1517 0050 1A70     		strb	r2, [r3]
1118:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1119:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1120:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Was on */
1121:Generated_Source\PSoC4/CapSense_CSHL.c ****     if (0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor))
 1518              		.loc 1 1121 0
 1519 0052 7A68     		ldr	r2, [r7, #4]
 1520 0054 334B     		ldr	r3, .L101+16
 1521 0056 1100     		movs	r1, r2
 1522 0058 1800     		movs	r0, r3
 1523 005a FFF7FEFF 		bl	CapSense_GetBitValue
 1524 005e 031E     		subs	r3, r0, #0
 1525 0060 1CD0     		beq	.L93
1122:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1123:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis minus */
1124:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 1526              		.loc 1 1124 0
 1527 0062 314A     		ldr	r2, .L101+20
 1528 0064 7B68     		ldr	r3, [r7, #4]
 1529 0066 D318     		adds	r3, r2, r3
 1530 0068 1B78     		ldrb	r3, [r3]
 1531 006a 1900     		movs	r1, r3
 1532 006c 0E23     		movs	r3, #14
 1533 006e FB18     		adds	r3, r7, r3
 1534 0070 1A78     		ldrb	r2, [r3]
 1535 0072 0D23     		movs	r3, #13
 1536 0074 FB18     		adds	r3, r7, r3
 1537 0076 1B78     		ldrb	r3, [r3]
 1538 0078 D31A     		subs	r3, r2, r3
 1539 007a 9942     		cmp	r1, r3
 1540 007c 3BDA     		bge	.L95
1125:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1126:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 0u);
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 48


 1541              		.loc 1 1126 0
 1542 007e 7968     		ldr	r1, [r7, #4]
 1543 0080 284B     		ldr	r3, .L101+16
 1544 0082 0022     		movs	r2, #0
 1545 0084 1800     		movs	r0, r3
 1546 0086 FFF7FEFF 		bl	CapSense_SetBitValue
1127:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1128:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 1547              		.loc 1 1128 0
 1548 008a 0B23     		movs	r3, #11
 1549 008c FB18     		adds	r3, r7, r3
 1550 008e 1B78     		ldrb	r3, [r3]
 1551 0090 264A     		ldr	r2, .L101+24
 1552 0092 0C21     		movs	r1, #12
 1553 0094 7918     		adds	r1, r7, r1
 1554 0096 0978     		ldrb	r1, [r1]
 1555 0098 D154     		strb	r1, [r2, r3]
 1556 009a 2CE0     		b	.L95
 1557              	.L93:
1129:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1130:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1131:Generated_Source\PSoC4/CapSense_CSHL.c ****     else    /* Was off */
1132:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1133:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis plus */
1134:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] >= (fingerThreshold + hysteresis))
 1558              		.loc 1 1134 0
 1559 009c 224A     		ldr	r2, .L101+20
 1560 009e 7B68     		ldr	r3, [r7, #4]
 1561 00a0 D318     		adds	r3, r2, r3
 1562 00a2 1B78     		ldrb	r3, [r3]
 1563 00a4 1900     		movs	r1, r3
 1564 00a6 0E23     		movs	r3, #14
 1565 00a8 FB18     		adds	r3, r7, r3
 1566 00aa 1A78     		ldrb	r2, [r3]
 1567 00ac 0D23     		movs	r3, #13
 1568 00ae FB18     		adds	r3, r7, r3
 1569 00b0 1B78     		ldrb	r3, [r3]
 1570 00b2 D318     		adds	r3, r2, r3
 1571 00b4 9942     		cmp	r1, r3
 1572 00b6 16DB     		blt	.L96
1135:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1136:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex]--;
 1573              		.loc 1 1136 0
 1574 00b8 0B23     		movs	r3, #11
 1575 00ba FB18     		adds	r3, r7, r3
 1576 00bc 1B78     		ldrb	r3, [r3]
 1577 00be 1B4A     		ldr	r2, .L101+24
 1578 00c0 D25C     		ldrb	r2, [r2, r3]
 1579 00c2 013A     		subs	r2, r2, #1
 1580 00c4 D1B2     		uxtb	r1, r2
 1581 00c6 194A     		ldr	r2, .L101+24
 1582 00c8 D154     		strb	r1, [r2, r3]
1137:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor active, decrement debounce counter */
1138:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(CapSense_debounceCounter[debounceIndex] == 0u)
 1583              		.loc 1 1138 0
 1584 00ca 0B23     		movs	r3, #11
 1585 00cc FB18     		adds	r3, r7, r3
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 49


 1586 00ce 1B78     		ldrb	r3, [r3]
 1587 00d0 164A     		ldr	r2, .L101+24
 1588 00d2 D35C     		ldrb	r3, [r2, r3]
 1589 00d4 002B     		cmp	r3, #0
 1590 00d6 0ED1     		bne	.L95
1139:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1140:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 1u);
 1591              		.loc 1 1140 0
 1592 00d8 7968     		ldr	r1, [r7, #4]
 1593 00da 124B     		ldr	r3, .L101+16
 1594 00dc 0122     		movs	r2, #1
 1595 00de 1800     		movs	r0, r3
 1596 00e0 FFF7FEFF 		bl	CapSense_SetBitValue
 1597 00e4 07E0     		b	.L95
 1598              	.L96:
1141:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1142:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1143:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1144:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1145:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1146:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 1599              		.loc 1 1146 0
 1600 00e6 0B23     		movs	r3, #11
 1601 00e8 FB18     		adds	r3, r7, r3
 1602 00ea 1B78     		ldrb	r3, [r3]
 1603 00ec 0F4A     		ldr	r2, .L101+24
 1604 00ee 0C21     		movs	r1, #12
 1605 00f0 7918     		adds	r1, r7, r1
 1606 00f2 0978     		ldrb	r1, [r1]
 1607 00f4 D154     		strb	r1, [r2, r3]
 1608              	.L95:
1147:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1148:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1149:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1150:Generated_Source\PSoC4/CapSense_CSHL.c ****     return ((uint32)((0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor)) ? 1u : 0u));
 1609              		.loc 1 1150 0
 1610 00f6 7A68     		ldr	r2, [r7, #4]
 1611 00f8 0A4B     		ldr	r3, .L101+16
 1612 00fa 1100     		movs	r1, r2
 1613 00fc 1800     		movs	r0, r3
 1614 00fe FFF7FEFF 		bl	CapSense_GetBitValue
 1615 0102 031E     		subs	r3, r0, #0
 1616 0104 01D0     		beq	.L98
 1617              		.loc 1 1150 0 is_stmt 0 discriminator 1
 1618 0106 0123     		movs	r3, #1
 1619 0108 00E0     		b	.L100
 1620              	.L98:
 1621              		.loc 1 1150 0 discriminator 2
 1622 010a 0023     		movs	r3, #0
 1623              	.L100:
1151:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1624              		.loc 1 1151 0 is_stmt 1 discriminator 5
 1625 010c 1800     		movs	r0, r3
 1626 010e BD46     		mov	sp, r7
 1627 0110 04B0     		add	sp, sp, #16
 1628              		@ sp needed
 1629 0112 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 50


 1630              	.L102:
 1631              		.align	2
 1632              	.L101:
 1633 0114 00000000 		.word	CapSense_widgetNumber
 1634 0118 00000000 		.word	CapSense_fingerThreshold
 1635 011c 00000000 		.word	CapSense_hysteresis
 1636 0120 00000000 		.word	CapSense_debounce
 1637 0124 00000000 		.word	CapSense_sensorOnMask
 1638 0128 00000000 		.word	CapSense_sensorSignal
 1639 012c 10000000 		.word	CapSense_debounceCounter
 1640              		.cfi_endproc
 1641              	.LFE58:
 1642              		.size	CapSense_CheckIsSensorActive, .-CapSense_CheckIsSensorActive
 1643              		.section	.text.CapSense_CheckIsWidgetActive,"ax",%progbits
 1644              		.align	2
 1645              		.global	CapSense_CheckIsWidgetActive
 1646              		.code	16
 1647              		.thumb_func
 1648              		.type	CapSense_CheckIsWidgetActive, %function
 1649              	CapSense_CheckIsWidgetActive:
 1650              	.LFB59:
1152:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1153:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1154:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1155:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsWidgetActive
1156:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1157:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1158:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1159:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[] array element to the finger threshold of
1160:Generated_Source\PSoC4/CapSense_CSHL.c **** * the widget it belongs to. The hysteresis and debounce are taken into account.
1161:Generated_Source\PSoC4/CapSense_CSHL.c **** * The hysteresis is added or subtracted from the finger threshold based on whether
1162:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the sensor is currently active. If the sensor is active, the threshold is
1163:Generated_Source\PSoC4/CapSense_CSHL.c **** *  lowered by the hysteresis amount. If the sensor is inactive, the threshold
1164:Generated_Source\PSoC4/CapSense_CSHL.c **** *  is raised by the hysteresis amount.
1165:Generated_Source\PSoC4/CapSense_CSHL.c **** * The debounce counter added to the sensor active transition.
1166:Generated_Source\PSoC4/CapSense_CSHL.c **** * This function updates CapSense_sensorOnMask[] array element
1167:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1168:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1169:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1170:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1171:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1172:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are
1173:Generated_Source\PSoC4/CapSense_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
1174:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1175:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1176:Generated_Source\PSoC4/CapSense_CSHL.c **** *  rawDataIndex[]: Contains the  1st sensor position in the widget
1177:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1178:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1179:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1180:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1181:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1182:Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsWidgetActive(uint32 widget)
1183:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1651              		.loc 1 1183 0
 1652              		.cfi_startproc
 1653              		@ args = 0, pretend = 0, frame = 24
 1654              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 51


 1655 0000 80B5     		push	{r7, lr}
 1656              		.cfi_def_cfa_offset 8
 1657              		.cfi_offset 7, -8
 1658              		.cfi_offset 14, -4
 1659 0002 86B0     		sub	sp, sp, #24
 1660              		.cfi_def_cfa_offset 32
 1661 0004 00AF     		add	r7, sp, #0
 1662              		.cfi_def_cfa_register 7
 1663 0006 7860     		str	r0, [r7, #4]
1184:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 rawIndex = (uint32)CapSense_rawDataIndex[widget];
 1664              		.loc 1 1184 0
 1665 0008 0023     		movs	r3, #0
 1666 000a 7B61     		str	r3, [r7, #20]
1185:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 numOfSensors = (uint32)CapSense_numberOfSensors[widget] + rawIndex;
 1667              		.loc 1 1185 0
 1668 000c 0123     		movs	r3, #1
 1669 000e 1A00     		movs	r2, r3
 1670 0010 7B69     		ldr	r3, [r7, #20]
 1671 0012 D318     		adds	r3, r2, r3
 1672 0014 FB60     		str	r3, [r7, #12]
1186:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 1673              		.loc 1 1186 0
 1674 0016 0023     		movs	r3, #0
 1675 0018 3B61     		str	r3, [r7, #16]
 1676              	.L105:
1187:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1188:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Check all sensors of widget */
1189:Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1190:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1191:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_CheckIsSensorActive((uint32)rawIndex) != 0u)
 1677              		.loc 1 1191 0
 1678 001a 7B69     		ldr	r3, [r7, #20]
 1679 001c 1800     		movs	r0, r3
 1680 001e FFF7FEFF 		bl	CapSense_CheckIsSensorActive
 1681 0022 031E     		subs	r3, r0, #0
 1682 0024 01D0     		beq	.L104
1192:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1193:Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_SENSOR_IS_ACTIVE;
 1683              		.loc 1 1193 0
 1684 0026 0123     		movs	r3, #1
 1685 0028 3B61     		str	r3, [r7, #16]
 1686              	.L104:
1194:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1195:Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 1687              		.loc 1 1195 0
 1688 002a 7B69     		ldr	r3, [r7, #20]
 1689 002c 0133     		adds	r3, r3, #1
 1690 002e 7B61     		str	r3, [r7, #20]
1196:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1197:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 1691              		.loc 1 1197 0
 1692 0030 7A69     		ldr	r2, [r7, #20]
 1693 0032 FB68     		ldr	r3, [r7, #12]
 1694 0034 9A42     		cmp	r2, r3
 1695 0036 F0D3     		bcc	.L105
1198:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1199:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 52


1200:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1201:Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
 1696              		.loc 1 1201 0
 1697 0038 3B69     		ldr	r3, [r7, #16]
1202:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1698              		.loc 1 1202 0
 1699 003a 1800     		movs	r0, r3
 1700 003c BD46     		mov	sp, r7
 1701 003e 06B0     		add	sp, sp, #24
 1702              		@ sp needed
 1703 0040 80BD     		pop	{r7, pc}
 1704              		.cfi_endproc
 1705              	.LFE59:
 1706              		.size	CapSense_CheckIsWidgetActive, .-CapSense_CheckIsWidgetActive
 1707 0042 C046     		.section	.text.CapSense_CheckIsAnyWidgetActive,"ax",%progbits
 1708              		.align	2
 1709              		.global	CapSense_CheckIsAnyWidgetActive
 1710              		.code	16
 1711              		.thumb_func
 1712              		.type	CapSense_CheckIsAnyWidgetActive, %function
 1713              	CapSense_CheckIsAnyWidgetActive:
 1714              	.LFB60:
1203:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1204:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1205:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1206:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsAnyWidgetActive
1207:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1208:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1209:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1210:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares all the sensors of the CapSense_Signal[] array to their finger
1211:Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold. Calls CapSense_CheckIsWidgetActive() for each widget so
1212:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the CapSense_sensorOnMask[] array is up to date after calling this
1213:Generated_Source\PSoC4/CapSense_CSHL.c **** *  function.
1214:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1215:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1216:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1217:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1218:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1219:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
1220:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1221:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1222:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1223:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1224:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1225:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1226:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1227:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1228:Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsAnyWidgetActive(void)
1229:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1715              		.loc 1 1229 0
 1716              		.cfi_startproc
 1717              		@ args = 0, pretend = 0, frame = 8
 1718              		@ frame_needed = 1, uses_anonymous_args = 0
 1719 0000 80B5     		push	{r7, lr}
 1720              		.cfi_def_cfa_offset 8
 1721              		.cfi_offset 7, -8
 1722              		.cfi_offset 14, -4
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 53


 1723 0002 82B0     		sub	sp, sp, #8
 1724              		.cfi_def_cfa_offset 16
 1725 0004 00AF     		add	r7, sp, #0
 1726              		.cfi_def_cfa_register 7
1230:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1231:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 i;
1232:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 1727              		.loc 1 1232 0
 1728 0006 0023     		movs	r3, #0
 1729 0008 3B60     		str	r3, [r7]
1233:Generated_Source\PSoC4/CapSense_CSHL.c ****     
1234:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 1730              		.loc 1 1234 0
 1731 000a 0023     		movs	r3, #0
 1732 000c 7B60     		str	r3, [r7, #4]
 1733 000e 0AE0     		b	.L108
 1734              	.L110:
1235:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1236:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(i) != 0u)
 1735              		.loc 1 1236 0
 1736 0010 7B68     		ldr	r3, [r7, #4]
 1737 0012 1800     		movs	r0, r3
 1738 0014 FFF7FEFF 		bl	CapSense_CheckIsWidgetActive
 1739 0018 031E     		subs	r3, r0, #0
 1740 001a 01D0     		beq	.L109
1237:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1238:Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_WIDGET_IS_ACTIVE;
 1741              		.loc 1 1238 0
 1742 001c 0123     		movs	r3, #1
 1743 001e 3B60     		str	r3, [r7]
 1744              	.L109:
1234:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1745              		.loc 1 1234 0 discriminator 2
 1746 0020 7B68     		ldr	r3, [r7, #4]
 1747 0022 0133     		adds	r3, r3, #1
 1748 0024 7B60     		str	r3, [r7, #4]
 1749              	.L108:
1234:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1750              		.loc 1 1234 0 is_stmt 0 discriminator 1
 1751 0026 7B68     		ldr	r3, [r7, #4]
 1752 0028 002B     		cmp	r3, #0
 1753 002a F1D0     		beq	.L110
1239:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1240:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1241:Generated_Source\PSoC4/CapSense_CSHL.c ****     
1242:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1243:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1244:Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
 1754              		.loc 1 1244 0 is_stmt 1
 1755 002c 3B68     		ldr	r3, [r7]
1245:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1756              		.loc 1 1245 0
 1757 002e 1800     		movs	r0, r3
 1758 0030 BD46     		mov	sp, r7
 1759 0032 02B0     		add	sp, sp, #8
 1760              		@ sp needed
 1761 0034 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 54


 1762              		.cfi_endproc
 1763              	.LFE60:
 1764              		.size	CapSense_CheckIsAnyWidgetActive, .-CapSense_CheckIsAnyWidgetActive
 1765 0036 C046     		.section	.text.CapSense_EnableWidget,"ax",%progbits
 1766              		.align	2
 1767              		.global	CapSense_EnableWidget
 1768              		.code	16
 1769              		.thumb_func
 1770              		.type	CapSense_EnableWidget, %function
 1771              	CapSense_EnableWidget:
 1772              	.LFB61:
1246:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1247:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1248:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1249:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_EnableWidget
1250:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1251:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1252:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1253:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Enables all the widget elements (sensors) to the scanning process.
1254:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1255:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1256:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1257:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1258:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1259:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1260:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1261:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1262:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
1263:Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1264:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
1265:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1266:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1267:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1268:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
1269:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
1270:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1271:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1272:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1273:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1274:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1275:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_EnableWidget(uint32 widget)
1276:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1773              		.loc 1 1276 0
 1774              		.cfi_startproc
 1775              		@ args = 0, pretend = 0, frame = 16
 1776              		@ frame_needed = 1, uses_anonymous_args = 0
 1777 0000 80B5     		push	{r7, lr}
 1778              		.cfi_def_cfa_offset 8
 1779              		.cfi_offset 7, -8
 1780              		.cfi_offset 14, -4
 1781 0002 84B0     		sub	sp, sp, #16
 1782              		.cfi_def_cfa_offset 24
 1783 0004 00AF     		add	r7, sp, #0
 1784              		.cfi_def_cfa_register 7
 1785 0006 7860     		str	r0, [r7, #4]
1277:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1278:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 55


 1786              		.loc 1 1278 0
 1787 0008 0F23     		movs	r3, #15
 1788 000a FB18     		adds	r3, r7, r3
 1789 000c 0022     		movs	r2, #0
 1790 000e 1A70     		strb	r2, [r3]
1279:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 1791              		.loc 1 1279 0
 1792 0010 0121     		movs	r1, #1
 1793 0012 0E23     		movs	r3, #14
 1794 0014 FB18     		adds	r3, r7, r3
 1795 0016 0F22     		movs	r2, #15
 1796 0018 BA18     		adds	r2, r7, r2
 1797 001a 1278     		ldrb	r2, [r2]
 1798 001c 8A18     		adds	r2, r1, r2
 1799 001e 1A70     		strb	r2, [r3]
 1800              	.L113:
1280:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1281:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Enable all sensors of widget */
1282:Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1283:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1284:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 1u);
 1801              		.loc 1 1284 0 discriminator 1
 1802 0020 0F23     		movs	r3, #15
 1803 0022 FB18     		adds	r3, r7, r3
 1804 0024 1978     		ldrb	r1, [r3]
 1805 0026 0C4B     		ldr	r3, .L114
 1806 0028 0122     		movs	r2, #1
 1807 002a 1800     		movs	r0, r3
 1808 002c FFF7FEFF 		bl	CapSense_SetBitValue
1285:Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 1809              		.loc 1 1285 0 discriminator 1
 1810 0030 0F23     		movs	r3, #15
 1811 0032 FB18     		adds	r3, r7, r3
 1812 0034 1A78     		ldrb	r2, [r3]
 1813 0036 0F23     		movs	r3, #15
 1814 0038 FB18     		adds	r3, r7, r3
 1815 003a 0132     		adds	r2, r2, #1
 1816 003c 1A70     		strb	r2, [r3]
1286:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1287:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 1817              		.loc 1 1287 0 discriminator 1
 1818 003e 0F23     		movs	r3, #15
 1819 0040 FA18     		adds	r2, r7, r3
 1820 0042 0E23     		movs	r3, #14
 1821 0044 FB18     		adds	r3, r7, r3
 1822 0046 1278     		ldrb	r2, [r2]
 1823 0048 1B78     		ldrb	r3, [r3]
 1824 004a 9A42     		cmp	r2, r3
 1825 004c E8D3     		bcc	.L113
1288:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1826              		.loc 1 1288 0
 1827 004e C046     		nop
 1828 0050 BD46     		mov	sp, r7
 1829 0052 04B0     		add	sp, sp, #16
 1830              		@ sp needed
 1831 0054 80BD     		pop	{r7, pc}
 1832              	.L115:
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 56


 1833 0056 C046     		.align	2
 1834              	.L114:
 1835 0058 00000000 		.word	CapSense_sensorEnableMask
 1836              		.cfi_endproc
 1837              	.LFE61:
 1838              		.size	CapSense_EnableWidget, .-CapSense_EnableWidget
 1839              		.section	.text.CapSense_DisableWidget,"ax",%progbits
 1840              		.align	2
 1841              		.global	CapSense_DisableWidget
 1842              		.code	16
 1843              		.thumb_func
 1844              		.type	CapSense_DisableWidget, %function
 1845              	CapSense_DisableWidget:
 1846              	.LFB62:
1289:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1290:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1291:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1292:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_DisableWidget
1293:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1294:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1295:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1296:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Disables all the widget elements (sensors) from the scanning process.
1297:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1298:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1299:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1300:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1301:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1302:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1303:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1304:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1305:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
1306:Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1307:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
1308:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1309:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1310:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1311:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor isn't scanned by CapSense_ScanEnabledWidgets().
1312:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is scanned by CapSense_ScanEnabledWidgets().
1313:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1314:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1315:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1316:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1317:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1318:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_DisableWidget(uint32 widget)
1319:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1847              		.loc 1 1319 0
 1848              		.cfi_startproc
 1849              		@ args = 0, pretend = 0, frame = 16
 1850              		@ frame_needed = 1, uses_anonymous_args = 0
 1851 0000 80B5     		push	{r7, lr}
 1852              		.cfi_def_cfa_offset 8
 1853              		.cfi_offset 7, -8
 1854              		.cfi_offset 14, -4
 1855 0002 84B0     		sub	sp, sp, #16
 1856              		.cfi_def_cfa_offset 24
 1857 0004 00AF     		add	r7, sp, #0
 1858              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 57


 1859 0006 7860     		str	r0, [r7, #4]
1320:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 1860              		.loc 1 1320 0
 1861 0008 0F23     		movs	r3, #15
 1862 000a FB18     		adds	r3, r7, r3
 1863 000c 0022     		movs	r2, #0
 1864 000e 1A70     		strb	r2, [r3]
1321:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 1865              		.loc 1 1321 0
 1866 0010 0121     		movs	r1, #1
 1867 0012 0E23     		movs	r3, #14
 1868 0014 FB18     		adds	r3, r7, r3
 1869 0016 0F22     		movs	r2, #15
 1870 0018 BA18     		adds	r2, r7, r2
 1871 001a 1278     		ldrb	r2, [r2]
 1872 001c 8A18     		adds	r2, r1, r2
 1873 001e 1A70     		strb	r2, [r3]
 1874              	.L117:
1322:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1323:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Disable all sensors of widget */
1324:Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1325:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1326:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1327:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 0u);
 1875              		.loc 1 1327 0 discriminator 1
 1876 0020 0F23     		movs	r3, #15
 1877 0022 FB18     		adds	r3, r7, r3
 1878 0024 1978     		ldrb	r1, [r3]
 1879 0026 0C4B     		ldr	r3, .L118
 1880 0028 0022     		movs	r2, #0
 1881 002a 1800     		movs	r0, r3
 1882 002c FFF7FEFF 		bl	CapSense_SetBitValue
1328:Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 1883              		.loc 1 1328 0 discriminator 1
 1884 0030 0F23     		movs	r3, #15
 1885 0032 FB18     		adds	r3, r7, r3
 1886 0034 1A78     		ldrb	r2, [r3]
 1887 0036 0F23     		movs	r3, #15
 1888 0038 FB18     		adds	r3, r7, r3
 1889 003a 0132     		adds	r2, r2, #1
 1890 003c 1A70     		strb	r2, [r3]
1329:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1330:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 1891              		.loc 1 1330 0 discriminator 1
 1892 003e 0F23     		movs	r3, #15
 1893 0040 FA18     		adds	r2, r7, r3
 1894 0042 0E23     		movs	r3, #14
 1895 0044 FB18     		adds	r3, r7, r3
 1896 0046 1278     		ldrb	r2, [r2]
 1897 0048 1B78     		ldrb	r3, [r3]
 1898 004a 9A42     		cmp	r2, r3
 1899 004c E8D3     		bcc	.L117
1331:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1900              		.loc 1 1331 0
 1901 004e C046     		nop
 1902 0050 BD46     		mov	sp, r7
 1903 0052 04B0     		add	sp, sp, #16
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 58


 1904              		@ sp needed
 1905 0054 80BD     		pop	{r7, pc}
 1906              	.L119:
 1907 0056 C046     		.align	2
 1908              	.L118:
 1909 0058 00000000 		.word	CapSense_sensorEnableMask
 1910              		.cfi_endproc
 1911              	.LFE62:
 1912              		.size	CapSense_DisableWidget, .-CapSense_DisableWidget
 1913              		.section	.text.CapSense_MedianFilter,"ax",%progbits
 1914              		.align	2
 1915              		.global	CapSense_MedianFilter
 1916              		.code	16
 1917              		.thumb_func
 1918              		.type	CapSense_MedianFilter, %function
 1919              	CapSense_MedianFilter:
 1920              	.LFB63:
1332:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1333:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1334:Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1335:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1336:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_FindMaximum
1337:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1338:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1339:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1340:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Finds the index of the maximum element within a defined centroid. Checks
1341:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_sensorSignal[] within a defined centroid and
1342:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  returns the index of the maximum element. The values below the finger threshold are
1343:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  ignored.
1344:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The centroid is defined by offset of the first element and a number of elements - count.
1345:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The diplexed centroid requires at least two consecutive elements above
1346:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  FingerThreshold to find the index of the maximum element.
1347:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1348:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1349:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:  Start index of centroid in CapSense_sensorSignal[] array.
1350:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:   number of elements within centroid.
1351:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  fingerThreshold:  Finger threshold.
1352:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:   pointer to diplex table.
1353:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1354:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1355:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns the index of the maximum element within a defined centroid.
1356:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If the index of the maximum element isn't found it returns 0xFF.
1357:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1358:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1359:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_startOfSlider[] - contains the index of the first slider element
1360:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1361:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1362:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1363:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1364:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1365:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_IS_DIPLEX_SLIDER)
1366:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold, const uint8 *d
1367:Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
1368:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold)
1369:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1370:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1371:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 59


1372:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1373:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curPos = 0u;
1374:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* No centroid at Start */
1375:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCntrdSize = 0u;
1376:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1377:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Biggest centroid is zero */
1378:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdSize = 0u;
1379:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
1380:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1381:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum = CapSense_MAXIMUM_CENTROID;
1382:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1383:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 temp = 0u;
1384:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 *startOfSlider = &CapSense_sensorSignal[offset];
1385:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1386:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1387:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(diplex != 0u)
1388:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1389:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Initialize */
1390:Generated_Source\PSoC4/CapSense_CSHL.c ****                 i = 0u;
1391:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1392:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make slider x2 as Diplexed */
1393:Generated_Source\PSoC4/CapSense_CSHL.c ****                 count <<= 1u;
1394:Generated_Source\PSoC4/CapSense_CSHL.c ****                 while(1u)
1395:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1396:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
1397:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1398:Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (curCtrdStartPos == CapSense_MAXIMUM_CENTROID)
1399:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1400:Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Start of centroid */
1401:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = i;
1402:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1403:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1404:Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
1405:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1406:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1407:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1408:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1409:Generated_Source\PSoC4/CapSense_CSHL.c ****                     else   /* Select biggest and indicate zero start */
1410:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1411:Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(curCntrdSize > 0u)
1412:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1413:Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* We are at the end of current */
1414:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
1415:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1416:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
1417:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
1418:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1419:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1420:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize = 0u;
1421:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1422:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1423:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1424:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1425:Generated_Source\PSoC4/CapSense_CSHL.c ****                     i++;
1426:Generated_Source\PSoC4/CapSense_CSHL.c ****                     curPos = diplex[i];
1427:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(i == count)
1428:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 60


1429:Generated_Source\PSoC4/CapSense_CSHL.c ****                         break;
1430:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1431:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1432:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1433:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Find biggest centroid if two are same size, last one wins
1434:Generated_Source\PSoC4/CapSense_CSHL.c ****                        We are at the end of current */
1435:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize)
1436:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1437:Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
1438:Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
1439:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1440:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1441:Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1442:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1443:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Without diplexing */
1444:Generated_Source\PSoC4/CapSense_CSHL.c ****                 biggestCtrdSize = count;
1445:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1446:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1447:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1448:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Check centroid size */
1449:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_NON_DIPLEX_SLIDER)
1450:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
1451:Generated_Source\PSoC4/CapSense_CSHL.c ****             #else
1452:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(biggestCtrdSize >= 2u)
1453:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_NON_DIPLEX_SLIDER) */
1454:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1455:Generated_Source\PSoC4/CapSense_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
1456:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1457:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
1458:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (diplex == 0u)
1459:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1460:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = i;
1461:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1462:Generated_Source\PSoC4/CapSense_CSHL.c ****                             else
1463:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1464:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = diplex[i];
1465:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1466:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #elif (CapSense_IS_DIPLEX_SLIDER)
1467:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curPos = diplex[i];
1468:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1469:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Looking for greater element within centroid */
1470:Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
1471:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1472:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(startOfSlider[curPos] > temp)
1473:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1474:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 maximum = i;
1475:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 temp = startOfSlider[curPos];
1476:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1477:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1478:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1479:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1480:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1481:Generated_Source\PSoC4/CapSense_CSHL.c ****             for (i = 0u; i < count; i++)
1482:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1483:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Looking for greater element within centroid */
1484:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
1485:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 61


1486:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(startOfSlider[i] > temp)
1487:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1488:Generated_Source\PSoC4/CapSense_CSHL.c ****                         maximum = i;
1489:Generated_Source\PSoC4/CapSense_CSHL.c ****                         temp = startOfSlider[i];
1490:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1491:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1492:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1493:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1494:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (maximum);
1495:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1496:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1497:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1498:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1499:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_CalcCentroid
1500:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1501:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1502:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1503:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value calculated according to the index of the maximum element and API
1504:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution.
1505:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1506:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1507:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  type:  widget type.
1508:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:  pointer to diplex table.
1509:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
1510:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:   Start index of centroid in CapSense_sensorSignal[] array.
1511:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:    Number of elements within centroid.
1512:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
1513:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  API resolution.
1514:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  noiseThreshold:  Noise threshold.
1515:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1516:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1517:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the slider.
1518:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1519:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1520:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1521:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1522:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1523:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u)
1524:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset,
1525:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint32 resolution, uint8 noiseThreshold)
1526:Generated_Source\PSoC4/CapSense_CSHL.c **** #else
1527:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset,
1528:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint16 resolution, uint8 noiseThreshold)
1529:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u) */
1530:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1531:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1532:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posPrev;
1533:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posNext;
1534:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1535:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1536:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Helps during centroid calculation */
1537:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1538:Generated_Source\PSoC4/CapSense_CSHL.c ****             static uint8 CapSense_centroid[3u];
1539:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1540:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1541:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1542:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 pos;
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 62


1543:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1544:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1545:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 position;
1546:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 numerator;
1547:Generated_Source\PSoC4/CapSense_CSHL.c ****         int32 denominator;
1548:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1549:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8  *startOfSlider = &CapSense_sensorSignal[offset];
1550:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1551:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1552:Generated_Source\PSoC4/CapSense_CSHL.c ****             posPrev = 0u;
1553:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1554:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1555:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1556:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(type == CapSense_TYPE_RADIAL_SLIDER)
1557:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1558:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1559:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1560:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1561:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1562:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1563:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1564:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for ROTARY Slider */
1565:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1566:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1567:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[count - 1u];
1568:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[1u];
1569:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1570:Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1571:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1572:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1573:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[0u];
1574:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1575:Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1576:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1577:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1578:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[maximum + 1u];
1579:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1580:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1581:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1582:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1583:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1584:Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1585:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1586:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1587:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1588:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1589:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
1590:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1591:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(diplex == 0u)
1592:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1593:Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = maximum;
1594:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1595:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = maximum + 1u;
1596:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1597:Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1598:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1599:Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = diplex[maximum];
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 63


1600:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1601:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = diplex[maximum + 1u];
1602:Generated_Source\PSoC4/CapSense_CSHL.c ****                         count <<= 1u;
1603:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1604:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #elif (CapSense_IS_DIPLEX_SLIDER)
1605:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1606:Generated_Source\PSoC4/CapSense_CSHL.c ****                     pos     = diplex[maximum];
1607:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1608:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = diplex[maximum + 1u];
1609:Generated_Source\PSoC4/CapSense_CSHL.c ****                     count <<= 1u;
1610:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else
1611:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1612:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (maximum >= 1u)
1613:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1614:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1615:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1616:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = maximum + 1u;
1617:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1618:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1619:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1620:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER)
1621:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[pos];
1622:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else
1623:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1624:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1625:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1626:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for LINEAR Slider */
1627:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1628:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1629:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = 0u;
1630:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
1631:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1632:Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
1633:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1634:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
1635:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = 0u;
1636:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1637:Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1638:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1639:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
1640:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
1641:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1642:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_TOTAL_TOUCH_PADS_BASIC_C
1643:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1644:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1645:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1646:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1647:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1648:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1649:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_PREV] > noiseThreshold)
1650:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1651:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] -= noiseThreshold;
1652:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1653:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1654:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1655:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] = 0u;
1656:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 64


1657:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1658:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Maximum always greater than fingerThreshold, so greater than noiseThreshold */
1659:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_centroid[CapSense_POS] -= noiseThreshold;
1660:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1661:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1662:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_NEXT] > noiseThreshold)
1663:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1664:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] -= noiseThreshold;
1665:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1666:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1667:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1668:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] = 0u;
1669:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1670:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1671:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1672:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 - Si-1 */
1673:Generated_Source\PSoC4/CapSense_CSHL.c ****         numerator = (uint32) CapSense_centroid[CapSense_POS_NEXT] -
1674:Generated_Source\PSoC4/CapSense_CSHL.c ****                     (uint32) CapSense_centroid[CapSense_POS_PREV];
1675:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1676:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 + Si + Si-1 */
1677:Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (int32) CapSense_centroid[CapSense_POS_PREV] +
1678:Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] +
1679:Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS_NEXT];
1680:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1681:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* (numerator/denominator) + maximum */
1682:Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
1683:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1684:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if(CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1685:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Only required for RADIAL Slider */
1686:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(denominator < 0)
1687:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1688:Generated_Source\PSoC4/CapSense_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1689:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1690:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1691:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1692:Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator *= (int16)resolution;
1693:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1694:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Round result and put it to uint8 */
1695:Generated_Source\PSoC4/CapSense_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_CENTROID_ROUND_VALUE));
1696:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1697:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
1698:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1699:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1700:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1701:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1702:Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1703:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1704:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetCentroidPos
1705:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1706:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1707:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1708:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1709:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1710:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1711:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1712:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1713:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 65


1714:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1715:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1716:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__LS           5
1717:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1718:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1719:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the linear slider.
1720:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1721:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1722:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1723:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1724:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1725:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1726:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1727:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1728:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1729:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1730:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1731:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1732:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1733:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1734:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1735:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1736:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1737:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1738:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_GetCentroidPos(uint32 widget)
1739:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1740:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1741:Generated_Source\PSoC4/CapSense_CSHL.c ****             const uint8 *diplex;
1742:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1743:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1744:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1745:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1746:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1747:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
1748:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1749:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1750:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1751:Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1752:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1753:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1754:Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1755:Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1756:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1757:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1758:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1759:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1760:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1761:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1762:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1763:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(widget < CapSense_TOTAL_DIPLEXED_SLIDERS_COUNT)
1764:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1765:Generated_Source\PSoC4/CapSense_CSHL.c ****                 maximum = CapSense_diplexTable[widget];
1766:Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = &CapSense_diplexTable[maximum];
1767:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1768:Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1769:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1770:Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = 0u;
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 66


1771:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1772:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1773:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1774:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within centroid */
1775:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1776:Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget], 
1777:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1778:Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget]);
1779:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1780:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1781:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != 0xFFu)
1782:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1783:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1784:Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum,
1785:Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1786:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1787:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1788:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1789:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1790:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1791:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1792:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1793:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1794:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1795:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1796:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1797:Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1798:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1799:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1800:Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1801:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1802:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1803:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) ||
1804:Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1805:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1806:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1807:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1808:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1809:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1810:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
1811:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1812:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1813:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1814:Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
1815:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1816:Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1817:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1818:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
1819:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1820:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
1821:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1822:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1823:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
1824:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1825:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1826:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
1827:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 67


1828:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1829:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1830:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /*(0u != (CapSense_MEDIAN_FILTER &
1831:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *         CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1832:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1833:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1834:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if(0u!=(CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1835:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
1836:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1837:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1838:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
1839:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1840:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1841:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]=CapSense_posFiltersData[posInd
1842:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1843:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1844:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
1845:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1846:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1847:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1848:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1849:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
1850:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1851:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
1852:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1853:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1854:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1855:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & \
1856:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1857:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1858:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1859:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1860:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
1861:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1862:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
1863:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1864:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1865:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1866:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & \
1867:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1868:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1869:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1870:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1871:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
1872:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1873:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
1874:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1875:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1876:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1877:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER & \
1878:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1879:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1880:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1881:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1882:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1883:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1884:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 68


1885:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1886:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1887:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum wasn't found */
1888:Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
1889:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1890:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if(0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1891:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
1892:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1893:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1894:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
1895:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1896:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1897:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1898:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1899:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1900:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
1901:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1902:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
1903:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1904:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1905:Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1906:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1907:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetRadialCentroidPos
1908:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1909:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1910:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1911:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1912:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1913:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1914:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1915:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1916:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1917:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1918:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1919:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__RS           5
1920:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1921:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1922:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the radial slider.
1923:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1924:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1925:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
1926:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1927:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1928:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1929:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1930:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1931:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1932:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1933:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1934:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1935:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1936:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1937:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1938:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1939:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1940:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1941:Generated_Source\PSoC4/CapSense_CSHL.c ****      uint16 CapSense_GetRadialCentroidPos(uint32 widget)
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 69


1942:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1943:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1944:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1945:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1946:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
1947:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1948:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1949:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1950:Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1951:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1952:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1953:Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1954:Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1955:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1956:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1957:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1958:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1959:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1960:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1961:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within centroid */
1962:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1963:Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget], 
1964:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1965:Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget]);
1966:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1967:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1968:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != CapSense_MAXIMUM_CENTROID)
1969:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1970:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1971:Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum,
1972:Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1973:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1974:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1975:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
1976:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1977:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1978:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1979:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1980:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1981:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1982:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1983:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1984:Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1985:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1986:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1987:Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1988:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1989:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1990:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))  ||
1991:Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1992:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1993:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1994:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1995:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1996:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1997:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
1998:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 70


1999:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2000:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2001:Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
2002:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2003:Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
2004:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2005:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
2006:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2007:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2008:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2009:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2010:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
2011:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2012:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2013:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
2014:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                               CapSense_posFiltersDa
2015:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2016:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2017:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_MEDIAN_FILTER &
2018:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2019:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2020:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2021:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_AVERAGING_FILTER & \
2022:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2023:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2024:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2025:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2026:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
2027:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2028:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2029:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]= CapSense_posFiltersData[posIn
2030:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2031:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2032:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2033:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2034:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2035:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2036:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2037:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2038:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2039:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
2040:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2041:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2042:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2043:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER &
2044:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2045:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2046:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2047:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2048:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2049:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2050:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
2051:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2052:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2053:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2054:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER &
2055:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 71


2056:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2057:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2058:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2059:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2060:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2061:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
2062:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                          CapSense_posFiltersData[po
2063:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2064:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2065:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER &
2066:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2067:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2068:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2069:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2070:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2071:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2072:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2073:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2074:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2075:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum was not found */
2076:Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
2077:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2078:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
2079:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2080:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2081:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2082:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2083:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2084:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2085:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2086:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2087:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
2088:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2089:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
2090:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2091:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2092:Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u)
2093:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2094:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetTouchCentroidPos
2095:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2096:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2097:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2098:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If a finger is present on a touchpad, this function calculates the X and Y
2099:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  position of the finger by calculating the centroids within touchpad specified
2100:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  range. The X and Y positions are calculated according to the API resolutions set in the
2101:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense customizer. Returns 1 if a finger is on the touchpad.
2102:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The position filter is applied to the result if enabled.
2103:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
2104:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  customizer.
2105:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2106:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2107:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
2108:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every touchpad widget there are defines in this format:
2109:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__TP            5
2110:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2111:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
2112:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result of calculation of X and Y position are stored.
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 72


2113:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[0u]  - position of X
2114:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[1u]  - position of Y
2115:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2116:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2117:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
2118:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2119:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2120:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2121:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2122:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2123:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   There are no checks of the widget type argument provided to this function.
2124:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
2125:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   calculations.
2126:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2127:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2128:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetTouchCentroidPos(uint32 widget, uint16* pos)
2129:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2130:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2131:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posXIndex;
2132:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posYIndex;
2133:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
2134:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
2135:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2136:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2137:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2138:Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2139:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint16 tempPos;
2140:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2141:Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2142:Generated_Source\PSoC4/CapSense_CSHL.c ****                */
2143:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2144:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxX;
2145:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxY;
2146:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posX;
2147:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posY;
2148:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 touch = 0u;
2149:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
2150:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
2151:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2152:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within X centroid */
2153:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
2154:Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget], 0u);
2155:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
2156:Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget]);
2157:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2158:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2159:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (MaxX != CapSense_MAXIMUM_CENTROID)
2160:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2161:Generated_Source\PSoC4/CapSense_CSHL.c ****             offset = CapSense_rawDataIndex[widget + 1u];
2162:Generated_Source\PSoC4/CapSense_CSHL.c ****             count = CapSense_numberOfSensors[widget + 1u];
2163:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2164:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find Maximum within Y centroid */
2165:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_DIPLEX_SLIDER)
2166:Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u], 0
2167:Generated_Source\PSoC4/CapSense_CSHL.c ****             #else
2168:Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u]);
2169:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_DIPLEX_SLIDER) */
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 73


2170:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2171:Generated_Source\PSoC4/CapSense_CSHL.c ****             if (MaxY != CapSense_MAXIMUM_CENTROID)
2172:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2173:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* X and Y maximums are found = true touch */
2174:Generated_Source\PSoC4/CapSense_CSHL.c ****                 touch = 1u;
2175:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2176:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate Y centroid */
2177:Generated_Source\PSoC4/CapSense_CSHL.c ****                 posY = CapSense_CalcCentroid(MaxY, offset, count,
2178:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget + 1u], CapSense_noiseThreshold[widget + 1u
2179:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2180:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate X centroid */
2181:Generated_Source\PSoC4/CapSense_CSHL.c ****                 offset = CapSense_rawDataIndex[widget];
2182:Generated_Source\PSoC4/CapSense_CSHL.c ****                 count = CapSense_numberOfSensors[widget];
2183:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2184:Generated_Source\PSoC4/CapSense_CSHL.c ****                 posX = CapSense_CalcCentroid(MaxX, offset, count,
2185:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget],CapSense_noiseThreshold[widget]);
2186:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2187:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2188:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Check if this TP has enabled filters */
2189:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
2190:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2191:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Calculate position to store filters data */
2192:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
2193:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posYIndex  = CapSense_posFiltersData[widget + 1u];
2194:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2195:Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (0u == CapSense_posFiltersData[firstTimeIndex])
2196:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2197:Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Init filters */
2198:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posXIndex] = posX;
2199:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posYIndex] = posY;
2200:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2201:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if((0u != (CapSense_MEDIAN_FILTER & \
2202:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK))|| \
2203:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 (0u != (CapSense_AVERAGING_FILTER & \
2204:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2205:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2206:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) ||
2207:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
2208:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2209:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = posX;
2210:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = posY;
2211:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2212:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
2213:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2214:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *    (0u != (CapSense_AVERAGING_FILTER & \
2215:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *            CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2216:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2217:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2218:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[firstTimeIndex] = 1u;
2219:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2220:Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
2221:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2222:Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Do filtering */
2223:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2224:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2225:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2226:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 74


2227:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_MedianFilter(posX,
2228:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2229:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2230:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] =
2231:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2232:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2233:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2234:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2235:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_MedianFilter(posY,
2236:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2237:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2238:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] =
2239:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2240:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2241:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2242:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2243:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_MEDIAN_FILTER & \
2244:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2245:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2246:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2247:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if(0u !=(CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_M
2248:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2249:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2250:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2251:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_AveragingFilter(posX,
2252:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2253:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2254:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] =
2255:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2256:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2257:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2258:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2259:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_AveragingFilter(posY,
2260:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2261:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2262:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] =
2263:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2264:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2265:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2266:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2267:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2268:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2269:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2270:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2271:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR2_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2272:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2273:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2274:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR2Filter(posX,
2275:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                            CapSense_posFiltersData[
2276:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2277:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2278:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR2Filter(posY,
2279:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2280:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2281:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2282:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2283:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR2_FILTER & \
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 75


2284:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2285:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2286:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2287:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR4_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2288:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2289:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2290:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR4Filter((uint16)posX,
2291:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2292:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2293:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2294:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR4Filter((uint16)posY,
2295:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2296:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2297:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2298:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2299:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR4_FILTER & \
2300:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2301:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2302:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2303:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_JITTER_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2304:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2305:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     {
2306:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posX = (uint8) CapSense_JitterFilter(posX,
2307:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2308:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posXIndex] = posX;
2309:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2310:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posY = (uint8) CapSense_JitterFilter(posY,
2311:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2312:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posYIndex] = posY;
2313:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     }
2314:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_JITTER_FILTER & \
2315:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2316:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2317:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2318:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2319:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2320:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2321:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Save positions */
2322:Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = posX;
2323:Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = posY;
2324:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2325:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2326:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2327:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2328:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(touch == 0u)
2329:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2330:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2331:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if ((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2332:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2333:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2334:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2335:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2336:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2337:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2338:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (touch);
2339:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2340:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u) */
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 76


2341:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2342:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2343:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2344:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2345:Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) )
2346:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2347:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_MedianFilter
2348:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2349:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2350:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2351:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Median filter function.
2352:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the
2353:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  median value.
2354:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2355:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2356:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2357:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2358:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2359:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2360:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2361:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2362:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2363:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2364:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2365:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2366:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2367:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2368:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2369:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2370:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
2371:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1921              		.loc 1 2371 0
 1922              		.cfi_startproc
 1923              		@ args = 0, pretend = 0, frame = 16
 1924              		@ frame_needed = 1, uses_anonymous_args = 0
 1925 0000 90B5     		push	{r4, r7, lr}
 1926              		.cfi_def_cfa_offset 12
 1927              		.cfi_offset 4, -12
 1928              		.cfi_offset 7, -8
 1929              		.cfi_offset 14, -4
 1930 0002 85B0     		sub	sp, sp, #20
 1931              		.cfi_def_cfa_offset 32
 1932 0004 00AF     		add	r7, sp, #0
 1933              		.cfi_def_cfa_register 7
 1934 0006 0400     		movs	r4, r0
 1935 0008 0800     		movs	r0, r1
 1936 000a 1100     		movs	r1, r2
 1937 000c BB1D     		adds	r3, r7, #6
 1938 000e 221C     		adds	r2, r4, #0
 1939 0010 1A80     		strh	r2, [r3]
 1940 0012 3B1D     		adds	r3, r7, #4
 1941 0014 021C     		adds	r2, r0, #0
 1942 0016 1A80     		strh	r2, [r3]
 1943 0018 BB1C     		adds	r3, r7, #2
 1944 001a 0A1C     		adds	r2, r1, #0
 1945 001c 1A80     		strh	r2, [r3]
2372:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 tmp;
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 77


2373:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2374:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
 1946              		.loc 1 2374 0
 1947 001e BA1D     		adds	r2, r7, #6
 1948 0020 3B1D     		adds	r3, r7, #4
 1949 0022 1288     		ldrh	r2, [r2]
 1950 0024 1B88     		ldrh	r3, [r3]
 1951 0026 9A42     		cmp	r2, r3
 1952 0028 0DD9     		bls	.L121
2375:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2376:Generated_Source\PSoC4/CapSense_CSHL.c ****             tmp = x2;
 1953              		.loc 1 2376 0
 1954 002a 0E23     		movs	r3, #14
 1955 002c FB18     		adds	r3, r7, r3
 1956 002e 3A1D     		adds	r2, r7, #4
 1957 0030 1288     		ldrh	r2, [r2]
 1958 0032 1A80     		strh	r2, [r3]
2377:Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x1;
 1959              		.loc 1 2377 0
 1960 0034 3B1D     		adds	r3, r7, #4
 1961 0036 BA1D     		adds	r2, r7, #6
 1962 0038 1288     		ldrh	r2, [r2]
 1963 003a 1A80     		strh	r2, [r3]
2378:Generated_Source\PSoC4/CapSense_CSHL.c ****             x1 = tmp;
 1964              		.loc 1 2378 0
 1965 003c BB1D     		adds	r3, r7, #6
 1966 003e 0E22     		movs	r2, #14
 1967 0040 BA18     		adds	r2, r7, r2
 1968 0042 1288     		ldrh	r2, [r2]
 1969 0044 1A80     		strh	r2, [r3]
 1970              	.L121:
2379:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2380:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2381:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x2 > x3)
 1971              		.loc 1 2381 0
 1972 0046 3A1D     		adds	r2, r7, #4
 1973 0048 BB1C     		adds	r3, r7, #2
 1974 004a 1288     		ldrh	r2, [r2]
 1975 004c 1B88     		ldrh	r3, [r3]
 1976 004e 9A42     		cmp	r2, r3
 1977 0050 03D9     		bls	.L122
2382:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2383:Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x3;
 1978              		.loc 1 2383 0
 1979 0052 3B1D     		adds	r3, r7, #4
 1980 0054 BA1C     		adds	r2, r7, #2
 1981 0056 1288     		ldrh	r2, [r2]
 1982 0058 1A80     		strh	r2, [r3]
 1983              	.L122:
2384:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2385:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2386:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
 1984              		.loc 1 2386 0
 1985 005a 3B1D     		adds	r3, r7, #4
 1986 005c BA1D     		adds	r2, r7, #6
 1987 005e 1088     		ldrh	r0, [r2]
 1988 0060 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 78


 1989 0062 99B2     		uxth	r1, r3
 1990 0064 82B2     		uxth	r2, r0
 1991 0066 9142     		cmp	r1, r2
 1992 0068 00D2     		bcs	.L123
 1993 006a 031C     		adds	r3, r0, #0
 1994              	.L123:
 1995 006c 9BB2     		uxth	r3, r3
2387:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1996              		.loc 1 2387 0
 1997 006e 1800     		movs	r0, r3
 1998 0070 BD46     		mov	sp, r7
 1999 0072 05B0     		add	sp, sp, #20
 2000              		@ sp needed
 2001 0074 90BD     		pop	{r4, r7, pc}
 2002              		.cfi_endproc
 2003              	.LFE63:
 2004              		.size	CapSense_MedianFilter, .-CapSense_MedianFilter
 2005 0076 C046     		.section	.text.CapSense_IIR4Filter,"ax",%progbits
 2006              		.align	2
 2007              		.global	CapSense_IIR4Filter
 2008              		.code	16
 2009              		.thumb_func
 2010              		.type	CapSense_IIR4Filter, %function
 2011              	CapSense_IIR4Filter:
 2012              	.LFB64:
2388:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2389:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2390:Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) ) */
2391:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2392:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2393:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) || \
2394:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER)) )
2395:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2396:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_AveragingFilter
2397:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2398:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2399:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2400:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Averaging filter function.
2401:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The averaging filter looks at the three most recent samples of a position and
2402:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  reports the averaging value.
2403:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2404:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2405:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2406:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2407:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2408:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2409:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2410:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2411:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2412:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2413:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2414:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2415:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2416:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2417:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2418:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2419:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 79


2420:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2421:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
2422:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2423:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2424:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2425:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) || \
2426:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER) ) */
2427:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2428:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2429:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2430:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2431:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2432:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR2Filter
2433:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2434:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2435:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2436:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
2437:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2438:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2439:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2440:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2441:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2442:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2443:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2444:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2445:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2446:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2447:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2448:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2449:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2450:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2451:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2452:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR2Filter(uint16 x1, uint16 x2)
2453:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2454:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2455:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2456:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
2457:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
2458:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 1u;
2459:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2460:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2461:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2462:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2463:Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2464:Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2465:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2466:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2467:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2468:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2469:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2470:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR4Filter
2471:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2472:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2473:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2474:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
2475:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2476:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 80


2477:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2478:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2479:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2480:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2481:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a filtered value.
2482:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2483:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2484:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2485:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2486:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2487:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2488:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2489:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2490:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR4Filter(uint16 x1, uint16 x2)
2491:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2013              		.loc 1 2491 0
 2014              		.cfi_startproc
 2015              		@ args = 0, pretend = 0, frame = 16
 2016              		@ frame_needed = 1, uses_anonymous_args = 0
 2017 0000 80B5     		push	{r7, lr}
 2018              		.cfi_def_cfa_offset 8
 2019              		.cfi_offset 7, -8
 2020              		.cfi_offset 14, -4
 2021 0002 84B0     		sub	sp, sp, #16
 2022              		.cfi_def_cfa_offset 24
 2023 0004 00AF     		add	r7, sp, #0
 2024              		.cfi_def_cfa_register 7
 2025 0006 0200     		movs	r2, r0
 2026 0008 BB1D     		adds	r3, r7, #6
 2027 000a 1A80     		strh	r2, [r3]
 2028 000c 3B1D     		adds	r3, r7, #4
 2029 000e 0A1C     		adds	r2, r1, #0
 2030 0010 1A80     		strh	r2, [r3]
2492:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2493:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2494:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
2495:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
 2031              		.loc 1 2495 0
 2032 0012 BB1D     		adds	r3, r7, #6
 2033 0014 1A88     		ldrh	r2, [r3]
 2034 0016 3B1D     		adds	r3, r7, #4
 2035 0018 1B88     		ldrh	r3, [r3]
 2036 001a D318     		adds	r3, r2, r3
 2037 001c FB60     		str	r3, [r7, #12]
2496:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += ((uint32)x2 << 1u);
 2038              		.loc 1 2496 0
 2039 001e 3B1D     		adds	r3, r7, #4
 2040 0020 1B88     		ldrh	r3, [r3]
 2041 0022 5B00     		lsls	r3, r3, #1
 2042 0024 FA68     		ldr	r2, [r7, #12]
 2043 0026 D318     		adds	r3, r2, r3
 2044 0028 FB60     		str	r3, [r7, #12]
2497:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 2u;
 2045              		.loc 1 2497 0
 2046 002a FB68     		ldr	r3, [r7, #12]
 2047 002c 9B08     		lsrs	r3, r3, #2
 2048 002e FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 81


2498:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2499:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
 2049              		.loc 1 2499 0
 2050 0030 FB68     		ldr	r3, [r7, #12]
 2051 0032 9BB2     		uxth	r3, r3
2500:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2052              		.loc 1 2500 0
 2053 0034 1800     		movs	r0, r3
 2054 0036 BD46     		mov	sp, r7
 2055 0038 04B0     		add	sp, sp, #16
 2056              		@ sp needed
 2057 003a 80BD     		pop	{r7, pc}
 2058              		.cfi_endproc
 2059              	.LFE64:
 2060              		.size	CapSense_IIR4Filter, .-CapSense_IIR4Filter
 2061              		.section	.text.CapSense_GetWidgetNumber,"ax",%progbits
 2062              		.align	2
 2063              		.global	CapSense_GetWidgetNumber
 2064              		.code	16
 2065              		.thumb_func
 2066              		.type	CapSense_GetWidgetNumber, %function
 2067              	CapSense_GetWidgetNumber:
 2068              	.LFB65:
2501:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2502:Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2503:Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2504:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2505:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2506:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2507:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) || \
2508:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)))
2509:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2510:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: uint16 CapSense_JitterFilter
2511:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2512:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2513:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2514:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Jitter filter function.
2515:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2516:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2517:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2518:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2519:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2520:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2521:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2522:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2523:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2524:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2525:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2526:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2527:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2528:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2529:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2530:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_JitterFilter(uint16 x1, uint16 x2)
2531:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2532:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
2533:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2534:Generated_Source\PSoC4/CapSense_CSHL.c ****             x1--;
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 82


2535:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2536:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2537:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2538:Generated_Source\PSoC4/CapSense_CSHL.c ****             if (x1 < x2)
2539:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2540:Generated_Source\PSoC4/CapSense_CSHL.c ****                 x1++;
2541:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2542:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2543:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2544:Generated_Source\PSoC4/CapSense_CSHL.c ****         return x1;
2545:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2546:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2547:Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2548:Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2549:Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2550:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2551:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2552:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))
2553:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2554:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR8Filter
2555:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2556:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2557:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2558:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/8 filter function. IIR1/8 = 1/8current + 7/8previous.
2559:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2560:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2561:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2562:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2563:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2564:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2565:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2566:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2567:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2568:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2569:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2570:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2571:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2572:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2573:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2574:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2575:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR8Filter(uint16 x1, uint16 x2)
2576:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2577:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2578:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2579:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/8 Current Value + 7/8 Previous Value */
2580:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2581:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 3u) - ((uint32)x2));
2582:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 3u;
2583:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2584:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2585:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2586:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)) */
2587:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2588:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2589:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
2590:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2591:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR16Filter
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 83


2592:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2593:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2594:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2595:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/16 filter function. IIR1/16 = 1/16current + 15/16previous.
2596:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2597:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2598:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2599:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2600:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2601:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2602:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2603:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2604:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2605:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2606:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2607:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2608:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2609:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2610:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2611:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2612:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR16Filter(uint16 x1, uint16 x2)
2613:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2614:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2615:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2616:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/16 Current Value + 15/16 Previous Value */
2617:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2618:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 4u) - ((uint32)x2));
2619:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 4u;
2620:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2621:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2622:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2623:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER) */
2624:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2625:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2626:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT))
2627:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2628:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2629:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetMatrixButtonPos
2630:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2631:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2632:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2633:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Function calculates and returns a touch position (column and row) for the matrix
2634:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  button widget.
2635:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2636:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2637:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  widget number;
2638:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     pointer to an array of two uint8, where touch position will be
2639:Generated_Source\PSoC4/CapSense_CSHL.c ****     *           stored:
2640:Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[0] - column position;
2641:Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[1] - raw position.
2642:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2643:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2644:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns 1 if row and column sensors of matrix button are active, 0 - in other
2645:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  cases.
2646:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2647:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2648:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_fingerThreshold[ ] - used to store the finger threshold for all widgets.
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 84


2649:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_sensorSignal[ ] - used to store a difference between the current value of
2650:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  raw data and a previous value of the baseline.
2651:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2652:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2653:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2654:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2655:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2656:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetMatrixButtonPos(uint32 widget, uint8* pos)
2657:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2658:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
2659:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 retVal = 0u;
2660:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 row_sig_max = 0u;
2661:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 col_sig_max = 0u;
2662:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 row_ind = 0u;
2663:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 col_ind = 0u;
2664:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2665:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(widget) == 1u)
2666:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2667:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2668:Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget]; i < (CapSense_rawDataIndex[widget] + \
2669:Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget]); i++)
2670:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2671:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > col_sig_max)
2672:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2673:Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_ind = i;
2674:Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_sig_max = CapSense_sensorSignal[i];
2675:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2676:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2677:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2678:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2679:Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget+1u]; i < (CapSense_rawDataIndex[widget+1u] + \
2680:Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget+1u]); i++)
2681:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2682:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > row_sig_max)
2683:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2684:Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_ind = i;
2685:Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_sig_max = CapSense_sensorSignal[i];
2686:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2687:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2688:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2689:Generated_Source\PSoC4/CapSense_CSHL.c ****             if((col_sig_max >= CapSense_fingerThreshold[widget]) && \
2690:Generated_Source\PSoC4/CapSense_CSHL.c ****                (row_sig_max >= CapSense_fingerThreshold[widget+1u]))
2691:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2692:Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = col_ind - CapSense_rawDataIndex[widget];
2693:Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = row_ind - CapSense_rawDataIndex[widget+1u];
2694:Generated_Source\PSoC4/CapSense_CSHL.c ****                 retVal = 1u;
2695:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2696:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2697:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (retVal);
2698:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2699:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2700:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
2701:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2702:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2703:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetWidgetNumber
2704:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2705:Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 85


2706:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2707:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor.
2708:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2709:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2710:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2711:Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2712:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2713:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2714:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor.
2715:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2716:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2717:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
2718:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2719:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2720:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2721:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2722:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2723:Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_GetWidgetNumber(uint32 sensor)
2724:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 2069              		.loc 1 2724 0
 2070              		.cfi_startproc
 2071              		@ args = 0, pretend = 0, frame = 8
 2072              		@ frame_needed = 1, uses_anonymous_args = 0
 2073 0000 80B5     		push	{r7, lr}
 2074              		.cfi_def_cfa_offset 8
 2075              		.cfi_offset 7, -8
 2076              		.cfi_offset 14, -4
 2077 0002 82B0     		sub	sp, sp, #8
 2078              		.cfi_def_cfa_offset 16
 2079 0004 00AF     		add	r7, sp, #0
 2080              		.cfi_def_cfa_register 7
 2081 0006 7860     		str	r0, [r7, #4]
2725:Generated_Source\PSoC4/CapSense_CSHL.c ****     return((uint32)CapSense_widgetNumber[sensor]);
 2082              		.loc 1 2725 0
 2083 0008 034A     		ldr	r2, .L129
 2084 000a 7B68     		ldr	r3, [r7, #4]
 2085 000c D318     		adds	r3, r2, r3
 2086 000e 1B78     		ldrb	r3, [r3]
2726:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 2087              		.loc 1 2726 0
 2088 0010 1800     		movs	r0, r3
 2089 0012 BD46     		mov	sp, r7
 2090 0014 02B0     		add	sp, sp, #8
 2091              		@ sp needed
 2092 0016 80BD     		pop	{r7, pc}
 2093              	.L130:
 2094              		.align	2
 2095              	.L129:
 2096 0018 00000000 		.word	CapSense_widgetNumber
 2097              		.cfi_endproc
 2098              	.LFE65:
 2099              		.size	CapSense_GetWidgetNumber, .-CapSense_GetWidgetNumber
 2100              		.section	.text.CapSense_GetLowBaselineReset,"ax",%progbits
 2101              		.align	2
 2102              		.global	CapSense_GetLowBaselineReset
 2103              		.code	16
 2104              		.thumb_func
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 86


 2105              		.type	CapSense_GetLowBaselineReset, %function
 2106              	CapSense_GetLowBaselineReset:
 2107              	.LFB66:
2727:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2728:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2729:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetLowBaselineReset
2730:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2731:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2732:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2733:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the low baseline reset threshold value for the  sensor.
2734:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2735:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2736:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2737:Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2738:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2739:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2740:Generated_Source\PSoC4/CapSense_CSHL.c **** *  low baseline reset threshold value a sensor.
2741:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2742:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2743:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_lowBaselineReset[]  - stores low baseline reset values.
2744:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2745:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2746:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2747:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2748:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2749:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetLowBaselineReset(uint32 sensor)
2750:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 2108              		.loc 1 2750 0
 2109              		.cfi_startproc
 2110              		@ args = 0, pretend = 0, frame = 8
 2111              		@ frame_needed = 1, uses_anonymous_args = 0
 2112 0000 80B5     		push	{r7, lr}
 2113              		.cfi_def_cfa_offset 8
 2114              		.cfi_offset 7, -8
 2115              		.cfi_offset 14, -4
 2116 0002 82B0     		sub	sp, sp, #8
 2117              		.cfi_def_cfa_offset 16
 2118 0004 00AF     		add	r7, sp, #0
 2119              		.cfi_def_cfa_register 7
 2120 0006 7860     		str	r0, [r7, #4]
2751:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_lowBaselineReset[sensor]);
 2121              		.loc 1 2751 0
 2122 0008 034A     		ldr	r2, .L133
 2123 000a 7B68     		ldr	r3, [r7, #4]
 2124 000c D318     		adds	r3, r2, r3
 2125 000e 1B78     		ldrb	r3, [r3]
2752:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 2126              		.loc 1 2752 0
 2127 0010 1800     		movs	r0, r3
 2128 0012 BD46     		mov	sp, r7
 2129 0014 02B0     		add	sp, sp, #8
 2130              		@ sp needed
 2131 0016 80BD     		pop	{r7, pc}
 2132              	.L134:
 2133              		.align	2
 2134              	.L133:
 2135 0018 00000000 		.word	CapSense_lowBaselineReset
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 87


 2136              		.cfi_endproc
 2137              	.LFE66:
 2138              		.size	CapSense_GetLowBaselineReset, .-CapSense_GetLowBaselineReset
 2139              		.section	.text.CapSense_GetDebounce,"ax",%progbits
 2140              		.align	2
 2141              		.global	CapSense_GetDebounce
 2142              		.code	16
 2143              		.thumb_func
 2144              		.type	CapSense_GetDebounce, %function
 2145              	CapSense_GetDebounce:
 2146              	.LFB67:
2753:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2754:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2755:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDebounce
2756:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2757:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2758:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2759:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns a debounce value.
2760:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2761:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2762:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2763:Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2764:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2765:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2766:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Debounce value
2767:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2768:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2769:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounce[]  - stores the debounce value.
2770:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2771:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2772:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2773:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2774:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2775:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDebounce(uint32 widget)
2776:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 2147              		.loc 1 2776 0
 2148              		.cfi_startproc
 2149              		@ args = 0, pretend = 0, frame = 8
 2150              		@ frame_needed = 1, uses_anonymous_args = 0
 2151 0000 80B5     		push	{r7, lr}
 2152              		.cfi_def_cfa_offset 8
 2153              		.cfi_offset 7, -8
 2154              		.cfi_offset 14, -4
 2155 0002 82B0     		sub	sp, sp, #8
 2156              		.cfi_def_cfa_offset 16
 2157 0004 00AF     		add	r7, sp, #0
 2158              		.cfi_def_cfa_register 7
 2159 0006 7860     		str	r0, [r7, #4]
2777:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_debounce[widget]);
 2160              		.loc 1 2777 0
 2161 0008 034A     		ldr	r2, .L137
 2162 000a 7B68     		ldr	r3, [r7, #4]
 2163 000c D318     		adds	r3, r2, r3
 2164 000e 1B78     		ldrb	r3, [r3]
2778:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 2165              		.loc 1 2778 0
 2166 0010 1800     		movs	r0, r3
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 88


 2167 0012 BD46     		mov	sp, r7
 2168 0014 02B0     		add	sp, sp, #8
 2169              		@ sp needed
 2170 0016 80BD     		pop	{r7, pc}
 2171              	.L138:
 2172              		.align	2
 2173              	.L137:
 2174 0018 00000000 		.word	CapSense_debounce
 2175              		.cfi_endproc
 2176              	.LFE67:
 2177              		.size	CapSense_GetDebounce, .-CapSense_GetDebounce
 2178              		.section	.text.CapSense_EnableRawDataFilters,"ax",%progbits
 2179              		.align	2
 2180              		.global	CapSense_EnableRawDataFilters
 2181              		.code	16
 2182              		.thumb_func
 2183              		.type	CapSense_EnableRawDataFilters, %function
 2184              	CapSense_EnableRawDataFilters:
 2185              	.LFB68:
2779:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2780:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
2781:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2782:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_EnableRawDataFilters
2783:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2784:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2785:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2786:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Enables the rawdata filters for the sensor signals.
2787:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2788:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2789:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2790:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2791:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2792:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2793:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2794:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2795:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_enableRawFilters defines if the filters are enabled or not.
2796:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2797:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2798:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2799:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2800:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2801:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_EnableRawDataFilters(void)
2802:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2186              		.loc 1 2802 0
 2187              		.cfi_startproc
 2188              		@ args = 0, pretend = 0, frame = 0
 2189              		@ frame_needed = 1, uses_anonymous_args = 0
 2190 0000 80B5     		push	{r7, lr}
 2191              		.cfi_def_cfa_offset 8
 2192              		.cfi_offset 7, -8
 2193              		.cfi_offset 14, -4
 2194 0002 00AF     		add	r7, sp, #0
 2195              		.cfi_def_cfa_register 7
2803:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
 2196              		.loc 1 2803 0
 2197 0004 024B     		ldr	r3, .L140
 2198 0006 0122     		movs	r2, #1
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 89


 2199 0008 1A70     		strb	r2, [r3]
2804:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2200              		.loc 1 2804 0
 2201 000a C046     		nop
 2202 000c BD46     		mov	sp, r7
 2203              		@ sp needed
 2204 000e 80BD     		pop	{r7, pc}
 2205              	.L141:
 2206              		.align	2
 2207              	.L140:
 2208 0010 00000000 		.word	CapSense_enableRawFilters
 2209              		.cfi_endproc
 2210              	.LFE68:
 2211              		.size	CapSense_EnableRawDataFilters, .-CapSense_EnableRawDataFilters
 2212              		.section	.text.CapSense_DisableRawDataFilters,"ax",%progbits
 2213              		.align	2
 2214              		.global	CapSense_DisableRawDataFilters
 2215              		.code	16
 2216              		.thumb_func
 2217              		.type	CapSense_DisableRawDataFilters, %function
 2218              	CapSense_DisableRawDataFilters:
 2219              	.LFB69:
2805:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2806:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2807:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_DisableRawDataFilters
2808:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2809:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2810:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2811:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Disables the rawdata filters for the sensor signals.
2812:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2813:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2814:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2815:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2816:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2817:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2818:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2819:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2820:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_enableRawFilters defines if the filters are enabled or not.
2821:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2822:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2823:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2824:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2825:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2826:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_DisableRawDataFilters(void)
2827:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2220              		.loc 1 2827 0
 2221              		.cfi_startproc
 2222              		@ args = 0, pretend = 0, frame = 0
 2223              		@ frame_needed = 1, uses_anonymous_args = 0
 2224 0000 80B5     		push	{r7, lr}
 2225              		.cfi_def_cfa_offset 8
 2226              		.cfi_offset 7, -8
 2227              		.cfi_offset 14, -4
 2228 0002 00AF     		add	r7, sp, #0
 2229              		.cfi_def_cfa_register 7
2828:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_enableRawFilters = CapSense_RAW_FILTERS_DISABLED;
 2230              		.loc 1 2828 0
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 90


 2231 0004 024B     		ldr	r3, .L143
 2232 0006 0022     		movs	r2, #0
 2233 0008 1A70     		strb	r2, [r3]
2829:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2234              		.loc 1 2829 0
 2235 000a C046     		nop
 2236 000c BD46     		mov	sp, r7
 2237              		@ sp needed
 2238 000e 80BD     		pop	{r7, pc}
 2239              	.L144:
 2240              		.align	2
 2241              	.L143:
 2242 0010 00000000 		.word	CapSense_enableRawFilters
 2243              		.cfi_endproc
 2244              	.LFE69:
 2245              		.size	CapSense_DisableRawDataFilters, .-CapSense_DisableRawDataFilters
 2246              		.text
 2247              	.Letext0:
 2248              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2249              		.file 3 "Generated_Source\\PSoC4\\CapSense_PVT.h"
 2250              		.section	.debug_info,"",%progbits
 2251              	.Ldebug_info0:
 2252 0000 9F0B0000 		.4byte	0xb9f
 2253 0004 0400     		.2byte	0x4
 2254 0006 00000000 		.4byte	.Ldebug_abbrev0
 2255 000a 04       		.byte	0x4
 2256 000b 01       		.uleb128 0x1
 2257 000c 5C010000 		.4byte	.LASF122
 2258 0010 0C       		.byte	0xc
 2259 0011 D6080000 		.4byte	.LASF123
 2260 0015 8C030000 		.4byte	.LASF124
 2261 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2262 001d 00000000 		.4byte	0
 2263 0021 00000000 		.4byte	.Ldebug_line0
 2264 0025 02       		.uleb128 0x2
 2265 0026 01       		.byte	0x1
 2266 0027 06       		.byte	0x6
 2267 0028 27090000 		.4byte	.LASF0
 2268 002c 02       		.uleb128 0x2
 2269 002d 01       		.byte	0x1
 2270 002e 08       		.byte	0x8
 2271 002f 3D080000 		.4byte	.LASF1
 2272 0033 02       		.uleb128 0x2
 2273 0034 02       		.byte	0x2
 2274 0035 05       		.byte	0x5
 2275 0036 2A070000 		.4byte	.LASF2
 2276 003a 02       		.uleb128 0x2
 2277 003b 02       		.byte	0x2
 2278 003c 07       		.byte	0x7
 2279 003d 33090000 		.4byte	.LASF3
 2280 0041 02       		.uleb128 0x2
 2281 0042 04       		.byte	0x4
 2282 0043 05       		.byte	0x5
 2283 0044 34070000 		.4byte	.LASF4
 2284 0048 02       		.uleb128 0x2
 2285 0049 04       		.byte	0x4
 2286 004a 07       		.byte	0x7
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 91


 2287 004b CF070000 		.4byte	.LASF5
 2288 004f 02       		.uleb128 0x2
 2289 0050 08       		.byte	0x8
 2290 0051 05       		.byte	0x5
 2291 0052 C4050000 		.4byte	.LASF6
 2292 0056 02       		.uleb128 0x2
 2293 0057 08       		.byte	0x8
 2294 0058 07       		.byte	0x7
 2295 0059 5B030000 		.4byte	.LASF7
 2296 005d 03       		.uleb128 0x3
 2297 005e 04       		.byte	0x4
 2298 005f 05       		.byte	0x5
 2299 0060 696E7400 		.ascii	"int\000"
 2300 0064 02       		.uleb128 0x2
 2301 0065 04       		.byte	0x4
 2302 0066 07       		.byte	0x7
 2303 0067 3F010000 		.4byte	.LASF8
 2304 006b 04       		.uleb128 0x4
 2305 006c A5090000 		.4byte	.LASF9
 2306 0070 02       		.byte	0x2
 2307 0071 B901     		.2byte	0x1b9
 2308 0073 2C000000 		.4byte	0x2c
 2309 0077 04       		.uleb128 0x4
 2310 0078 A0050000 		.4byte	.LASF10
 2311 007c 02       		.byte	0x2
 2312 007d BA01     		.2byte	0x1ba
 2313 007f 3A000000 		.4byte	0x3a
 2314 0083 04       		.uleb128 0x4
 2315 0084 B6060000 		.4byte	.LASF11
 2316 0088 02       		.byte	0x2
 2317 0089 BB01     		.2byte	0x1bb
 2318 008b 48000000 		.4byte	0x48
 2319 008f 02       		.uleb128 0x2
 2320 0090 04       		.byte	0x4
 2321 0091 04       		.byte	0x4
 2322 0092 16030000 		.4byte	.LASF12
 2323 0096 02       		.uleb128 0x2
 2324 0097 08       		.byte	0x8
 2325 0098 04       		.byte	0x4
 2326 0099 AB090000 		.4byte	.LASF13
 2327 009d 02       		.uleb128 0x2
 2328 009e 01       		.byte	0x1
 2329 009f 08       		.byte	0x8
 2330 00a0 69050000 		.4byte	.LASF14
 2331 00a4 02       		.uleb128 0x2
 2332 00a5 04       		.byte	0x4
 2333 00a6 07       		.byte	0x7
 2334 00a7 C6070000 		.4byte	.LASF15
 2335 00ab 02       		.uleb128 0x2
 2336 00ac 08       		.byte	0x8
 2337 00ad 04       		.byte	0x4
 2338 00ae F6060000 		.4byte	.LASF16
 2339 00b2 05       		.uleb128 0x5
 2340 00b3 5C       		.byte	0x5c
 2341 00b4 03       		.byte	0x3
 2342 00b5 2F       		.byte	0x2f
 2343 00b6 CF010000 		.4byte	0x1cf
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 92


 2344 00ba 06       		.uleb128 0x6
 2345 00bb AC050000 		.4byte	.LASF17
 2346 00bf 03       		.byte	0x3
 2347 00c0 31       		.byte	0x31
 2348 00c1 CF010000 		.4byte	0x1cf
 2349 00c5 00       		.byte	0
 2350 00c6 06       		.uleb128 0x6
 2351 00c7 1B070000 		.4byte	.LASF18
 2352 00cb 03       		.byte	0x3
 2353 00cc 32       		.byte	0x32
 2354 00cd CF010000 		.4byte	0x1cf
 2355 00d1 04       		.byte	0x4
 2356 00d2 06       		.uleb128 0x6
 2357 00d3 C7080000 		.4byte	.LASF19
 2358 00d7 03       		.byte	0x3
 2359 00d8 33       		.byte	0x33
 2360 00d9 CF010000 		.4byte	0x1cf
 2361 00dd 08       		.byte	0x8
 2362 00de 06       		.uleb128 0x6
 2363 00df 30080000 		.4byte	.LASF20
 2364 00e3 03       		.byte	0x3
 2365 00e4 34       		.byte	0x34
 2366 00e5 CF010000 		.4byte	0x1cf
 2367 00e9 0C       		.byte	0xc
 2368 00ea 06       		.uleb128 0x6
 2369 00eb 1D090000 		.4byte	.LASF21
 2370 00ef 03       		.byte	0x3
 2371 00f0 35       		.byte	0x35
 2372 00f1 CF010000 		.4byte	0x1cf
 2373 00f5 10       		.byte	0x10
 2374 00f6 06       		.uleb128 0x6
 2375 00f7 5B070000 		.4byte	.LASF22
 2376 00fb 03       		.byte	0x3
 2377 00fc 36       		.byte	0x36
 2378 00fd D5010000 		.4byte	0x1d5
 2379 0101 14       		.byte	0x14
 2380 0102 06       		.uleb128 0x6
 2381 0103 1C030000 		.4byte	.LASF23
 2382 0107 03       		.byte	0x3
 2383 0108 37       		.byte	0x37
 2384 0109 E0010000 		.4byte	0x1e0
 2385 010d 18       		.byte	0x18
 2386 010e 06       		.uleb128 0x6
 2387 010f 7E040000 		.4byte	.LASF24
 2388 0113 03       		.byte	0x3
 2389 0114 38       		.byte	0x38
 2390 0115 CF010000 		.4byte	0x1cf
 2391 0119 1C       		.byte	0x1c
 2392 011a 06       		.uleb128 0x6
 2393 011b 46030000 		.4byte	.LASF25
 2394 011f 03       		.byte	0x3
 2395 0120 39       		.byte	0x39
 2396 0121 CF010000 		.4byte	0x1cf
 2397 0125 20       		.byte	0x20
 2398 0126 06       		.uleb128 0x6
 2399 0127 1B020000 		.4byte	.LASF26
 2400 012b 03       		.byte	0x3
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 93


 2401 012c 3A       		.byte	0x3a
 2402 012d CF010000 		.4byte	0x1cf
 2403 0131 24       		.byte	0x24
 2404 0132 06       		.uleb128 0x6
 2405 0133 56060000 		.4byte	.LASF27
 2406 0137 03       		.byte	0x3
 2407 0138 3B       		.byte	0x3b
 2408 0139 E6010000 		.4byte	0x1e6
 2409 013d 28       		.byte	0x28
 2410 013e 06       		.uleb128 0x6
 2411 013f EA010000 		.4byte	.LASF28
 2412 0143 03       		.byte	0x3
 2413 0144 3C       		.byte	0x3c
 2414 0145 E6010000 		.4byte	0x1e6
 2415 0149 2C       		.byte	0x2c
 2416 014a 06       		.uleb128 0x6
 2417 014b F9070000 		.4byte	.LASF29
 2418 014f 03       		.byte	0x3
 2419 0150 3D       		.byte	0x3d
 2420 0151 E6010000 		.4byte	0x1e6
 2421 0155 30       		.byte	0x30
 2422 0156 06       		.uleb128 0x6
 2423 0157 A4070000 		.4byte	.LASF30
 2424 015b 03       		.byte	0x3
 2425 015c 3E       		.byte	0x3e
 2426 015d CF010000 		.4byte	0x1cf
 2427 0161 34       		.byte	0x34
 2428 0162 06       		.uleb128 0x6
 2429 0163 48000000 		.4byte	.LASF31
 2430 0167 03       		.byte	0x3
 2431 0168 3F       		.byte	0x3f
 2432 0169 CF010000 		.4byte	0x1cf
 2433 016d 38       		.byte	0x38
 2434 016e 06       		.uleb128 0x6
 2435 016f 91050000 		.4byte	.LASF32
 2436 0173 03       		.byte	0x3
 2437 0174 40       		.byte	0x40
 2438 0175 D5010000 		.4byte	0x1d5
 2439 0179 3C       		.byte	0x3c
 2440 017a 06       		.uleb128 0x6
 2441 017b 66020000 		.4byte	.LASF33
 2442 017f 03       		.byte	0x3
 2443 0180 41       		.byte	0x41
 2444 0181 D5010000 		.4byte	0x1d5
 2445 0185 40       		.byte	0x40
 2446 0186 06       		.uleb128 0x6
 2447 0187 95000000 		.4byte	.LASF34
 2448 018b 03       		.byte	0x3
 2449 018c 42       		.byte	0x42
 2450 018d D5010000 		.4byte	0x1d5
 2451 0191 44       		.byte	0x44
 2452 0192 06       		.uleb128 0x6
 2453 0193 1C060000 		.4byte	.LASF35
 2454 0197 03       		.byte	0x3
 2455 0198 43       		.byte	0x43
 2456 0199 FB010000 		.4byte	0x1fb
 2457 019d 48       		.byte	0x48
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 94


 2458 019e 06       		.uleb128 0x6
 2459 019f F4050000 		.4byte	.LASF36
 2460 01a3 03       		.byte	0x3
 2461 01a4 44       		.byte	0x44
 2462 01a5 0C020000 		.4byte	0x20c
 2463 01a9 4C       		.byte	0x4c
 2464 01aa 06       		.uleb128 0x6
 2465 01ab 94040000 		.4byte	.LASF37
 2466 01af 03       		.byte	0x3
 2467 01b0 45       		.byte	0x45
 2468 01b1 FB010000 		.4byte	0x1fb
 2469 01b5 50       		.byte	0x50
 2470 01b6 06       		.uleb128 0x6
 2471 01b7 A5000000 		.4byte	.LASF38
 2472 01bb 03       		.byte	0x3
 2473 01bc 46       		.byte	0x46
 2474 01bd 26020000 		.4byte	0x226
 2475 01c1 54       		.byte	0x54
 2476 01c2 06       		.uleb128 0x6
 2477 01c3 46090000 		.4byte	.LASF39
 2478 01c7 03       		.byte	0x3
 2479 01c8 47       		.byte	0x47
 2480 01c9 41020000 		.4byte	0x241
 2481 01cd 58       		.byte	0x58
 2482 01ce 00       		.byte	0
 2483 01cf 07       		.uleb128 0x7
 2484 01d0 04       		.byte	0x4
 2485 01d1 6B000000 		.4byte	0x6b
 2486 01d5 07       		.uleb128 0x7
 2487 01d6 04       		.byte	0x4
 2488 01d7 DB010000 		.4byte	0x1db
 2489 01db 08       		.uleb128 0x8
 2490 01dc 6B000000 		.4byte	0x6b
 2491 01e0 07       		.uleb128 0x7
 2492 01e1 04       		.byte	0x4
 2493 01e2 83000000 		.4byte	0x83
 2494 01e6 07       		.uleb128 0x7
 2495 01e7 04       		.byte	0x4
 2496 01e8 77000000 		.4byte	0x77
 2497 01ec 09       		.uleb128 0x9
 2498 01ed 77000000 		.4byte	0x77
 2499 01f1 FB010000 		.4byte	0x1fb
 2500 01f5 0A       		.uleb128 0xa
 2501 01f6 83000000 		.4byte	0x83
 2502 01fa 00       		.byte	0
 2503 01fb 07       		.uleb128 0x7
 2504 01fc 04       		.byte	0x4
 2505 01fd EC010000 		.4byte	0x1ec
 2506 0201 0B       		.uleb128 0xb
 2507 0202 0C020000 		.4byte	0x20c
 2508 0206 0A       		.uleb128 0xa
 2509 0207 83000000 		.4byte	0x83
 2510 020b 00       		.byte	0
 2511 020c 07       		.uleb128 0x7
 2512 020d 04       		.byte	0x4
 2513 020e 01020000 		.4byte	0x201
 2514 0212 09       		.uleb128 0x9
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 95


 2515 0213 83000000 		.4byte	0x83
 2516 0217 26020000 		.4byte	0x226
 2517 021b 0A       		.uleb128 0xa
 2518 021c D5010000 		.4byte	0x1d5
 2519 0220 0A       		.uleb128 0xa
 2520 0221 83000000 		.4byte	0x83
 2521 0225 00       		.byte	0
 2522 0226 07       		.uleb128 0x7
 2523 0227 04       		.byte	0x4
 2524 0228 12020000 		.4byte	0x212
 2525 022c 0B       		.uleb128 0xb
 2526 022d 41020000 		.4byte	0x241
 2527 0231 0A       		.uleb128 0xa
 2528 0232 CF010000 		.4byte	0x1cf
 2529 0236 0A       		.uleb128 0xa
 2530 0237 83000000 		.4byte	0x83
 2531 023b 0A       		.uleb128 0xa
 2532 023c 83000000 		.4byte	0x83
 2533 0240 00       		.byte	0
 2534 0241 07       		.uleb128 0x7
 2535 0242 04       		.byte	0x4
 2536 0243 2C020000 		.4byte	0x22c
 2537 0247 0C       		.uleb128 0xc
 2538 0248 18010000 		.4byte	.LASF40
 2539 024c 03       		.byte	0x3
 2540 024d 48       		.byte	0x48
 2541 024e B2000000 		.4byte	0xb2
 2542 0252 05       		.uleb128 0x5
 2543 0253 0C       		.byte	0xc
 2544 0254 03       		.byte	0x3
 2545 0255 4A       		.byte	0x4a
 2546 0256 A3020000 		.4byte	0x2a3
 2547 025a 06       		.uleb128 0x6
 2548 025b 2A050000 		.4byte	.LASF41
 2549 025f 03       		.byte	0x3
 2550 0260 4C       		.byte	0x4c
 2551 0261 6B000000 		.4byte	0x6b
 2552 0265 00       		.byte	0
 2553 0266 06       		.uleb128 0x6
 2554 0267 73020000 		.4byte	.LASF42
 2555 026b 03       		.byte	0x3
 2556 026c 4D       		.byte	0x4d
 2557 026d 6B000000 		.4byte	0x6b
 2558 0271 01       		.byte	0x1
 2559 0272 06       		.uleb128 0x6
 2560 0273 4C010000 		.4byte	.LASF43
 2561 0277 03       		.byte	0x3
 2562 0278 4E       		.byte	0x4e
 2563 0279 6B000000 		.4byte	0x6b
 2564 027d 02       		.byte	0x2
 2565 027e 06       		.uleb128 0x6
 2566 027f 43050000 		.4byte	.LASF44
 2567 0283 03       		.byte	0x3
 2568 0284 4F       		.byte	0x4f
 2569 0285 77000000 		.4byte	0x77
 2570 0289 04       		.byte	0x4
 2571 028a 06       		.uleb128 0x6
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 96


 2572 028b 0D070000 		.4byte	.LASF45
 2573 028f 03       		.byte	0x3
 2574 0290 50       		.byte	0x50
 2575 0291 77000000 		.4byte	0x77
 2576 0295 06       		.byte	0x6
 2577 0296 06       		.uleb128 0x6
 2578 0297 E1070000 		.4byte	.LASF46
 2579 029b 03       		.byte	0x3
 2580 029c 51       		.byte	0x51
 2581 029d A3020000 		.4byte	0x2a3
 2582 02a1 08       		.byte	0x8
 2583 02a2 00       		.byte	0
 2584 02a3 07       		.uleb128 0x7
 2585 02a4 04       		.byte	0x4
 2586 02a5 A9020000 		.4byte	0x2a9
 2587 02a9 08       		.uleb128 0x8
 2588 02aa 47020000 		.4byte	0x247
 2589 02ae 0C       		.uleb128 0xc
 2590 02af CD030000 		.4byte	.LASF47
 2591 02b3 03       		.byte	0x3
 2592 02b4 52       		.byte	0x52
 2593 02b5 52020000 		.4byte	0x252
 2594 02b9 0D       		.uleb128 0xd
 2595 02ba 44060000 		.4byte	.LASF48
 2596 02be 01       		.byte	0x1
 2597 02bf 88       		.byte	0x88
 2598 02c0 00000000 		.4byte	.LFB36
 2599 02c4 88000000 		.4byte	.LFE36-.LFB36
 2600 02c8 01       		.uleb128 0x1
 2601 02c9 9C       		.byte	0x9c
 2602 02ca EB020000 		.4byte	0x2eb
 2603 02ce 0E       		.uleb128 0xe
 2604 02cf 3C050000 		.4byte	.LASF50
 2605 02d3 01       		.byte	0x1
 2606 02d4 88       		.byte	0x88
 2607 02d5 83000000 		.4byte	0x83
 2608 02d9 02       		.uleb128 0x2
 2609 02da 91       		.byte	0x91
 2610 02db 6C       		.sleb128 -20
 2611 02dc 0F       		.uleb128 0xf
 2612 02dd AD030000 		.4byte	.LASF52
 2613 02e1 01       		.byte	0x1
 2614 02e2 8C       		.byte	0x8c
 2615 02e3 6B000000 		.4byte	0x6b
 2616 02e7 02       		.uleb128 0x2
 2617 02e8 91       		.byte	0x91
 2618 02e9 77       		.sleb128 -9
 2619 02ea 00       		.byte	0
 2620 02eb 10       		.uleb128 0x10
 2621 02ec 2B020000 		.4byte	.LASF49
 2622 02f0 01       		.byte	0x1
 2623 02f1 D4       		.byte	0xd4
 2624 02f2 00000000 		.4byte	.LFB37
 2625 02f6 2A000000 		.4byte	.LFE37-.LFB37
 2626 02fa 01       		.uleb128 0x1
 2627 02fb 9C       		.byte	0x9c
 2628 02fc 0F030000 		.4byte	0x30f
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 97


 2629 0300 0E       		.uleb128 0xe
 2630 0301 3C050000 		.4byte	.LASF50
 2631 0305 01       		.byte	0x1
 2632 0306 D4       		.byte	0xd4
 2633 0307 83000000 		.4byte	0x83
 2634 030b 02       		.uleb128 0x2
 2635 030c 91       		.byte	0x91
 2636 030d 74       		.sleb128 -12
 2637 030e 00       		.byte	0
 2638 030f 10       		.uleb128 0x10
 2639 0310 71080000 		.4byte	.LASF51
 2640 0314 01       		.byte	0x1
 2641 0315 F9       		.byte	0xf9
 2642 0316 00000000 		.4byte	.LFB38
 2643 031a 28000000 		.4byte	.LFE38-.LFB38
 2644 031e 01       		.uleb128 0x1
 2645 031f 9C       		.byte	0x9c
 2646 0320 31030000 		.4byte	0x331
 2647 0324 11       		.uleb128 0x11
 2648 0325 6900     		.ascii	"i\000"
 2649 0327 01       		.byte	0x1
 2650 0328 FB       		.byte	0xfb
 2651 0329 83000000 		.4byte	0x83
 2652 032d 02       		.uleb128 0x2
 2653 032e 91       		.byte	0x91
 2654 032f 74       		.sleb128 -12
 2655 0330 00       		.byte	0
 2656 0331 12       		.uleb128 0x12
 2657 0332 F7010000 		.4byte	.LASF53
 2658 0336 01       		.byte	0x1
 2659 0337 1C01     		.2byte	0x11c
 2660 0339 00000000 		.4byte	.LFB39
 2661 033d 50000000 		.4byte	.LFE39-.LFB39
 2662 0341 01       		.uleb128 0x1
 2663 0342 9C       		.byte	0x9c
 2664 0343 64030000 		.4byte	0x364
 2665 0347 13       		.uleb128 0x13
 2666 0348 6900     		.ascii	"i\000"
 2667 034a 01       		.byte	0x1
 2668 034b 1E01     		.2byte	0x11e
 2669 034d 83000000 		.4byte	0x83
 2670 0351 02       		.uleb128 0x2
 2671 0352 91       		.byte	0x91
 2672 0353 74       		.sleb128 -12
 2673 0354 14       		.uleb128 0x14
 2674 0355 FB000000 		.4byte	.LASF54
 2675 0359 01       		.byte	0x1
 2676 035a 1F01     		.2byte	0x11f
 2677 035c 83000000 		.4byte	0x83
 2678 0360 02       		.uleb128 0x2
 2679 0361 91       		.byte	0x91
 2680 0362 70       		.sleb128 -16
 2681 0363 00       		.byte	0
 2682 0364 12       		.uleb128 0x12
 2683 0365 72000000 		.4byte	.LASF55
 2684 0369 01       		.byte	0x1
 2685 036a 5D01     		.2byte	0x15d
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 98


 2686 036c 00000000 		.4byte	.LFB40
 2687 0370 34020000 		.4byte	.LFE40-.LFB40
 2688 0374 01       		.uleb128 0x1
 2689 0375 9C       		.byte	0x9c
 2690 0376 E4030000 		.4byte	0x3e4
 2691 037a 15       		.uleb128 0x15
 2692 037b 3C050000 		.4byte	.LASF50
 2693 037f 01       		.byte	0x1
 2694 0380 5D01     		.2byte	0x15d
 2695 0382 83000000 		.4byte	0x83
 2696 0386 02       		.uleb128 0x2
 2697 0387 91       		.byte	0x91
 2698 0388 5C       		.sleb128 -36
 2699 0389 14       		.uleb128 0x14
 2700 038a 8F040000 		.4byte	.LASF56
 2701 038e 01       		.byte	0x1
 2702 038f 5F01     		.2byte	0x15f
 2703 0391 83000000 		.4byte	0x83
 2704 0395 02       		.uleb128 0x2
 2705 0396 91       		.byte	0x91
 2706 0397 60       		.sleb128 -32
 2707 0398 14       		.uleb128 0x14
 2708 0399 79040000 		.4byte	.LASF57
 2709 039d 01       		.byte	0x1
 2710 039e 6001     		.2byte	0x160
 2711 03a0 83000000 		.4byte	0x83
 2712 03a4 02       		.uleb128 0x2
 2713 03a5 91       		.byte	0x91
 2714 03a6 6C       		.sleb128 -20
 2715 03a7 14       		.uleb128 0x14
 2716 03a8 6B090000 		.4byte	.LASF58
 2717 03ac 01       		.byte	0x1
 2718 03ad 6101     		.2byte	0x161
 2719 03af 77000000 		.4byte	0x77
 2720 03b3 02       		.uleb128 0x2
 2721 03b4 91       		.byte	0x91
 2722 03b5 6A       		.sleb128 -22
 2723 03b6 14       		.uleb128 0x14
 2724 03b7 B0040000 		.4byte	.LASF59
 2725 03bb 01       		.byte	0x1
 2726 03bc 6201     		.2byte	0x162
 2727 03be 77000000 		.4byte	0x77
 2728 03c2 02       		.uleb128 0x2
 2729 03c3 91       		.byte	0x91
 2730 03c4 68       		.sleb128 -24
 2731 03c5 14       		.uleb128 0x14
 2732 03c6 AD030000 		.4byte	.LASF52
 2733 03ca 01       		.byte	0x1
 2734 03cb 6301     		.2byte	0x163
 2735 03cd 6B000000 		.4byte	0x6b
 2736 03d1 02       		.uleb128 0x2
 2737 03d2 91       		.byte	0x91
 2738 03d3 67       		.sleb128 -25
 2739 03d4 14       		.uleb128 0x14
 2740 03d5 EA070000 		.4byte	.LASF60
 2741 03d9 01       		.byte	0x1
 2742 03da 6401     		.2byte	0x164
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 99


 2743 03dc 6B000000 		.4byte	0x6b
 2744 03e0 02       		.uleb128 0x2
 2745 03e1 91       		.byte	0x91
 2746 03e2 66       		.sleb128 -26
 2747 03e3 00       		.byte	0
 2748 03e4 12       		.uleb128 0x12
 2749 03e5 26060000 		.4byte	.LASF61
 2750 03e9 01       		.byte	0x1
 2751 03ea 1D02     		.2byte	0x21d
 2752 03ec 00000000 		.4byte	.LFB41
 2753 03f0 20000000 		.4byte	.LFE41-.LFB41
 2754 03f4 01       		.uleb128 0x1
 2755 03f5 9C       		.byte	0x9c
 2756 03f6 0A040000 		.4byte	0x40a
 2757 03fa 15       		.uleb128 0x15
 2758 03fb 3C050000 		.4byte	.LASF50
 2759 03ff 01       		.byte	0x1
 2760 0400 1D02     		.2byte	0x21d
 2761 0402 83000000 		.4byte	0x83
 2762 0406 02       		.uleb128 0x2
 2763 0407 91       		.byte	0x91
 2764 0408 74       		.sleb128 -12
 2765 0409 00       		.byte	0
 2766 040a 12       		.uleb128 0x12
 2767 040b CB000000 		.4byte	.LASF62
 2768 040f 01       		.byte	0x1
 2769 0410 5302     		.2byte	0x253
 2770 0412 00000000 		.4byte	.LFB42
 2771 0416 44000000 		.4byte	.LFE42-.LFB42
 2772 041a 01       		.uleb128 0x1
 2773 041b 9C       		.byte	0x9c
 2774 041c 3D040000 		.4byte	0x43d
 2775 0420 13       		.uleb128 0x13
 2776 0421 6900     		.ascii	"i\000"
 2777 0423 01       		.byte	0x1
 2778 0424 5502     		.2byte	0x255
 2779 0426 83000000 		.4byte	0x83
 2780 042a 02       		.uleb128 0x2
 2781 042b 91       		.byte	0x91
 2782 042c 74       		.sleb128 -12
 2783 042d 14       		.uleb128 0x14
 2784 042e FB000000 		.4byte	.LASF54
 2785 0432 01       		.byte	0x1
 2786 0433 5602     		.2byte	0x256
 2787 0435 83000000 		.4byte	0x83
 2788 0439 02       		.uleb128 0x2
 2789 043a 91       		.byte	0x91
 2790 043b 70       		.sleb128 -16
 2791 043c 00       		.byte	0
 2792 043d 12       		.uleb128 0x12
 2793 043e E4020000 		.4byte	.LASF63
 2794 0442 01       		.byte	0x1
 2795 0443 8002     		.2byte	0x280
 2796 0445 00000000 		.4byte	.LFB43
 2797 0449 58000000 		.4byte	.LFE43-.LFB43
 2798 044d 01       		.uleb128 0x1
 2799 044e 9C       		.byte	0x9c
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 100


 2800 044f AC040000 		.4byte	0x4ac
 2801 0453 15       		.uleb128 0x15
 2802 0454 AD030000 		.4byte	.LASF52
 2803 0458 01       		.byte	0x1
 2804 0459 8002     		.2byte	0x280
 2805 045b 83000000 		.4byte	0x83
 2806 045f 02       		.uleb128 0x2
 2807 0460 91       		.byte	0x91
 2808 0461 5C       		.sleb128 -36
 2809 0462 14       		.uleb128 0x14
 2810 0463 C0040000 		.4byte	.LASF64
 2811 0467 01       		.byte	0x1
 2812 0468 8202     		.2byte	0x282
 2813 046a 83000000 		.4byte	0x83
 2814 046e 02       		.uleb128 0x2
 2815 046f 91       		.byte	0x91
 2816 0470 70       		.sleb128 -16
 2817 0471 14       		.uleb128 0x14
 2818 0472 3D070000 		.4byte	.LASF65
 2819 0476 01       		.byte	0x1
 2820 0477 8302     		.2byte	0x283
 2821 0479 83000000 		.4byte	0x83
 2822 047d 02       		.uleb128 0x2
 2823 047e 91       		.byte	0x91
 2824 047f 6C       		.sleb128 -20
 2825 0480 14       		.uleb128 0x14
 2826 0481 02070000 		.4byte	.LASF66
 2827 0485 01       		.byte	0x1
 2828 0486 8402     		.2byte	0x284
 2829 0488 83000000 		.4byte	0x83
 2830 048c 02       		.uleb128 0x2
 2831 048d 91       		.byte	0x91
 2832 048e 68       		.sleb128 -24
 2833 048f 13       		.uleb128 0x13
 2834 0490 6900     		.ascii	"i\000"
 2835 0492 01       		.byte	0x1
 2836 0493 8502     		.2byte	0x285
 2837 0495 83000000 		.4byte	0x83
 2838 0499 02       		.uleb128 0x2
 2839 049a 91       		.byte	0x91
 2840 049b 74       		.sleb128 -12
 2841 049c 14       		.uleb128 0x14
 2842 049d FB000000 		.4byte	.LASF54
 2843 04a1 01       		.byte	0x1
 2844 04a2 8602     		.2byte	0x286
 2845 04a4 83000000 		.4byte	0x83
 2846 04a8 02       		.uleb128 0x2
 2847 04a9 91       		.byte	0x91
 2848 04aa 64       		.sleb128 -28
 2849 04ab 00       		.byte	0
 2850 04ac 16       		.uleb128 0x16
 2851 04ad 91080000 		.4byte	.LASF69
 2852 04b1 01       		.byte	0x1
 2853 04b2 B102     		.2byte	0x2b1
 2854 04b4 77000000 		.4byte	0x77
 2855 04b8 00000000 		.4byte	.LFB44
 2856 04bc 1C000000 		.4byte	.LFE44-.LFB44
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 101


 2857 04c0 01       		.uleb128 0x1
 2858 04c1 9C       		.byte	0x9c
 2859 04c2 D6040000 		.4byte	0x4d6
 2860 04c6 15       		.uleb128 0x15
 2861 04c7 3C050000 		.4byte	.LASF50
 2862 04cb 01       		.byte	0x1
 2863 04cc B102     		.2byte	0x2b1
 2864 04ce 83000000 		.4byte	0x83
 2865 04d2 02       		.uleb128 0x2
 2866 04d3 91       		.byte	0x91
 2867 04d4 74       		.sleb128 -12
 2868 04d5 00       		.byte	0
 2869 04d6 17       		.uleb128 0x17
 2870 04d7 4D020000 		.4byte	.LASF67
 2871 04db 01       		.byte	0x1
 2872 04dc CC02     		.2byte	0x2cc
 2873 04de 00000000 		.4byte	.LFB45
 2874 04e2 28000000 		.4byte	.LFE45-.LFB45
 2875 04e6 01       		.uleb128 0x1
 2876 04e7 9C       		.byte	0x9c
 2877 04e8 0B050000 		.4byte	0x50b
 2878 04ec 15       		.uleb128 0x15
 2879 04ed 3C050000 		.4byte	.LASF50
 2880 04f1 01       		.byte	0x1
 2881 04f2 CC02     		.2byte	0x2cc
 2882 04f4 83000000 		.4byte	0x83
 2883 04f8 02       		.uleb128 0x2
 2884 04f9 91       		.byte	0x91
 2885 04fa 74       		.sleb128 -12
 2886 04fb 15       		.uleb128 0x15
 2887 04fc A7050000 		.4byte	.LASF68
 2888 0500 01       		.byte	0x1
 2889 0501 CC02     		.2byte	0x2cc
 2890 0503 77000000 		.4byte	0x77
 2891 0507 02       		.uleb128 0x2
 2892 0508 91       		.byte	0x91
 2893 0509 72       		.sleb128 -14
 2894 050a 00       		.byte	0
 2895 050b 16       		.uleb128 0x16
 2896 050c 5F040000 		.4byte	.LASF70
 2897 0510 01       		.byte	0x1
 2898 0511 E702     		.2byte	0x2e7
 2899 0513 6B000000 		.4byte	0x6b
 2900 0517 00000000 		.4byte	.LFB46
 2901 051b 1C000000 		.4byte	.LFE46-.LFB46
 2902 051f 01       		.uleb128 0x1
 2903 0520 9C       		.byte	0x9c
 2904 0521 35050000 		.4byte	0x535
 2905 0525 15       		.uleb128 0x15
 2906 0526 3C050000 		.4byte	.LASF50
 2907 052a 01       		.byte	0x1
 2908 052b E702     		.2byte	0x2e7
 2909 052d 83000000 		.4byte	0x83
 2910 0531 02       		.uleb128 0x2
 2911 0532 91       		.byte	0x91
 2912 0533 74       		.sleb128 -12
 2913 0534 00       		.byte	0
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 102


 2914 0535 17       		.uleb128 0x17
 2915 0536 83020000 		.4byte	.LASF71
 2916 053a 01       		.byte	0x1
 2917 053b 0203     		.2byte	0x302
 2918 053d 00000000 		.4byte	.LFB47
 2919 0541 28000000 		.4byte	.LFE47-.LFB47
 2920 0545 01       		.uleb128 0x1
 2921 0546 9C       		.byte	0x9c
 2922 0547 6A050000 		.4byte	0x56a
 2923 054b 15       		.uleb128 0x15
 2924 054c 3C050000 		.4byte	.LASF50
 2925 0550 01       		.byte	0x1
 2926 0551 0203     		.2byte	0x302
 2927 0553 83000000 		.4byte	0x83
 2928 0557 02       		.uleb128 0x2
 2929 0558 91       		.byte	0x91
 2930 0559 74       		.sleb128 -12
 2931 055a 15       		.uleb128 0x15
 2932 055b 3C040000 		.4byte	.LASF72
 2933 055f 01       		.byte	0x1
 2934 0560 0203     		.2byte	0x302
 2935 0562 6B000000 		.4byte	0x6b
 2936 0566 02       		.uleb128 0x2
 2937 0567 91       		.byte	0x91
 2938 0568 73       		.sleb128 -13
 2939 0569 00       		.byte	0
 2940 056a 16       		.uleb128 0x16
 2941 056b DA060000 		.4byte	.LASF73
 2942 056f 01       		.byte	0x1
 2943 0570 1D03     		.2byte	0x31d
 2944 0572 6B000000 		.4byte	0x6b
 2945 0576 00000000 		.4byte	.LFB48
 2946 057a 1C000000 		.4byte	.LFE48-.LFB48
 2947 057e 01       		.uleb128 0x1
 2948 057f 9C       		.byte	0x9c
 2949 0580 94050000 		.4byte	0x594
 2950 0584 15       		.uleb128 0x15
 2951 0585 AD030000 		.4byte	.LASF52
 2952 0589 01       		.byte	0x1
 2953 058a 1D03     		.2byte	0x31d
 2954 058c 83000000 		.4byte	0x83
 2955 0590 02       		.uleb128 0x2
 2956 0591 91       		.byte	0x91
 2957 0592 74       		.sleb128 -12
 2958 0593 00       		.byte	0
 2959 0594 16       		.uleb128 0x16
 2960 0595 2B030000 		.4byte	.LASF74
 2961 0599 01       		.byte	0x1
 2962 059a 3803     		.2byte	0x338
 2963 059c 6B000000 		.4byte	0x6b
 2964 05a0 00000000 		.4byte	.LFB49
 2965 05a4 1C000000 		.4byte	.LFE49-.LFB49
 2966 05a8 01       		.uleb128 0x1
 2967 05a9 9C       		.byte	0x9c
 2968 05aa BE050000 		.4byte	0x5be
 2969 05ae 15       		.uleb128 0x15
 2970 05af AD030000 		.4byte	.LASF52
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 103


 2971 05b3 01       		.byte	0x1
 2972 05b4 3803     		.2byte	0x338
 2973 05b6 83000000 		.4byte	0x83
 2974 05ba 02       		.uleb128 0x2
 2975 05bb 91       		.byte	0x91
 2976 05bc 74       		.sleb128 -12
 2977 05bd 00       		.byte	0
 2978 05be 16       		.uleb128 0x16
 2979 05bf 42040000 		.4byte	.LASF75
 2980 05c3 01       		.byte	0x1
 2981 05c4 5403     		.2byte	0x354
 2982 05c6 6B000000 		.4byte	0x6b
 2983 05ca 00000000 		.4byte	.LFB50
 2984 05ce 1C000000 		.4byte	.LFE50-.LFB50
 2985 05d2 01       		.uleb128 0x1
 2986 05d3 9C       		.byte	0x9c
 2987 05d4 E8050000 		.4byte	0x5e8
 2988 05d8 15       		.uleb128 0x15
 2989 05d9 AD030000 		.4byte	.LASF52
 2990 05dd 01       		.byte	0x1
 2991 05de 5403     		.2byte	0x354
 2992 05e0 83000000 		.4byte	0x83
 2993 05e4 02       		.uleb128 0x2
 2994 05e5 91       		.byte	0x91
 2995 05e6 74       		.sleb128 -12
 2996 05e7 00       		.byte	0
 2997 05e8 16       		.uleb128 0x16
 2998 05e9 6E050000 		.4byte	.LASF76
 2999 05ed 01       		.byte	0x1
 3000 05ee 7003     		.2byte	0x370
 3001 05f0 6B000000 		.4byte	0x6b
 3002 05f4 00000000 		.4byte	.LFB51
 3003 05f8 1C000000 		.4byte	.LFE51-.LFB51
 3004 05fc 01       		.uleb128 0x1
 3005 05fd 9C       		.byte	0x9c
 3006 05fe 12060000 		.4byte	0x612
 3007 0602 15       		.uleb128 0x15
 3008 0603 AD030000 		.4byte	.LASF52
 3009 0607 01       		.byte	0x1
 3010 0608 7003     		.2byte	0x370
 3011 060a 83000000 		.4byte	0x83
 3012 060e 02       		.uleb128 0x2
 3013 060f 91       		.byte	0x91
 3014 0610 74       		.sleb128 -12
 3015 0611 00       		.byte	0
 3016 0612 17       		.uleb128 0x17
 3017 0613 01040000 		.4byte	.LASF77
 3018 0617 01       		.byte	0x1
 3019 0618 9103     		.2byte	0x391
 3020 061a 00000000 		.4byte	.LFB52
 3021 061e 28000000 		.4byte	.LFE52-.LFB52
 3022 0622 01       		.uleb128 0x1
 3023 0623 9C       		.byte	0x9c
 3024 0624 47060000 		.4byte	0x647
 3025 0628 15       		.uleb128 0x15
 3026 0629 AD030000 		.4byte	.LASF52
 3027 062d 01       		.byte	0x1
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 104


 3028 062e 9103     		.2byte	0x391
 3029 0630 83000000 		.4byte	0x83
 3030 0634 02       		.uleb128 0x2
 3031 0635 91       		.byte	0x91
 3032 0636 74       		.sleb128 -12
 3033 0637 15       		.uleb128 0x15
 3034 0638 3C040000 		.4byte	.LASF72
 3035 063c 01       		.byte	0x1
 3036 063d 9103     		.2byte	0x391
 3037 063f 6B000000 		.4byte	0x6b
 3038 0643 02       		.uleb128 0x2
 3039 0644 91       		.byte	0x91
 3040 0645 73       		.sleb128 -13
 3041 0646 00       		.byte	0
 3042 0647 17       		.uleb128 0x17
 3043 0648 C9020000 		.4byte	.LASF78
 3044 064c 01       		.byte	0x1
 3045 064d AD03     		.2byte	0x3ad
 3046 064f 00000000 		.4byte	.LFB53
 3047 0653 28000000 		.4byte	.LFE53-.LFB53
 3048 0657 01       		.uleb128 0x1
 3049 0658 9C       		.byte	0x9c
 3050 0659 7C060000 		.4byte	0x67c
 3051 065d 15       		.uleb128 0x15
 3052 065e AD030000 		.4byte	.LASF52
 3053 0662 01       		.byte	0x1
 3054 0663 AD03     		.2byte	0x3ad
 3055 0665 83000000 		.4byte	0x83
 3056 0669 02       		.uleb128 0x2
 3057 066a 91       		.byte	0x91
 3058 066b 74       		.sleb128 -12
 3059 066c 15       		.uleb128 0x15
 3060 066d 3C040000 		.4byte	.LASF72
 3061 0671 01       		.byte	0x1
 3062 0672 AD03     		.2byte	0x3ad
 3063 0674 6B000000 		.4byte	0x6b
 3064 0678 02       		.uleb128 0x2
 3065 0679 91       		.byte	0x91
 3066 067a 73       		.sleb128 -13
 3067 067b 00       		.byte	0
 3068 067c 17       		.uleb128 0x17
 3069 067d BD060000 		.4byte	.LASF79
 3070 0681 01       		.byte	0x1
 3071 0682 C903     		.2byte	0x3c9
 3072 0684 00000000 		.4byte	.LFB54
 3073 0688 28000000 		.4byte	.LFE54-.LFB54
 3074 068c 01       		.uleb128 0x1
 3075 068d 9C       		.byte	0x9c
 3076 068e B1060000 		.4byte	0x6b1
 3077 0692 15       		.uleb128 0x15
 3078 0693 AD030000 		.4byte	.LASF52
 3079 0697 01       		.byte	0x1
 3080 0698 C903     		.2byte	0x3c9
 3081 069a 83000000 		.4byte	0x83
 3082 069e 02       		.uleb128 0x2
 3083 069f 91       		.byte	0x91
 3084 06a0 74       		.sleb128 -12
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 105


 3085 06a1 15       		.uleb128 0x15
 3086 06a2 3C040000 		.4byte	.LASF72
 3087 06a6 01       		.byte	0x1
 3088 06a7 C903     		.2byte	0x3c9
 3089 06a9 6B000000 		.4byte	0x6b
 3090 06ad 02       		.uleb128 0x2
 3091 06ae 91       		.byte	0x91
 3092 06af 73       		.sleb128 -13
 3093 06b0 00       		.byte	0
 3094 06b1 17       		.uleb128 0x17
 3095 06b2 93060000 		.4byte	.LASF80
 3096 06b6 01       		.byte	0x1
 3097 06b7 E603     		.2byte	0x3e6
 3098 06b9 00000000 		.4byte	.LFB55
 3099 06bd 28000000 		.4byte	.LFE55-.LFB55
 3100 06c1 01       		.uleb128 0x1
 3101 06c2 9C       		.byte	0x9c
 3102 06c3 E6060000 		.4byte	0x6e6
 3103 06c7 15       		.uleb128 0x15
 3104 06c8 AD030000 		.4byte	.LASF52
 3105 06cc 01       		.byte	0x1
 3106 06cd E603     		.2byte	0x3e6
 3107 06cf 83000000 		.4byte	0x83
 3108 06d3 02       		.uleb128 0x2
 3109 06d4 91       		.byte	0x91
 3110 06d5 74       		.sleb128 -12
 3111 06d6 15       		.uleb128 0x15
 3112 06d7 3C040000 		.4byte	.LASF72
 3113 06db 01       		.byte	0x1
 3114 06dc E603     		.2byte	0x3e6
 3115 06de 6B000000 		.4byte	0x6b
 3116 06e2 02       		.uleb128 0x2
 3117 06e3 91       		.byte	0x91
 3118 06e4 73       		.sleb128 -13
 3119 06e5 00       		.byte	0
 3120 06e6 17       		.uleb128 0x17
 3121 06e7 0B080000 		.4byte	.LASF81
 3122 06eb 01       		.byte	0x1
 3123 06ec 0204     		.2byte	0x402
 3124 06ee 00000000 		.4byte	.LFB56
 3125 06f2 28000000 		.4byte	.LFE56-.LFB56
 3126 06f6 01       		.uleb128 0x1
 3127 06f7 9C       		.byte	0x9c
 3128 06f8 1B070000 		.4byte	0x71b
 3129 06fc 15       		.uleb128 0x15
 3130 06fd AD030000 		.4byte	.LASF52
 3131 0701 01       		.byte	0x1
 3132 0702 0204     		.2byte	0x402
 3133 0704 83000000 		.4byte	0x83
 3134 0708 02       		.uleb128 0x2
 3135 0709 91       		.byte	0x91
 3136 070a 74       		.sleb128 -12
 3137 070b 15       		.uleb128 0x15
 3138 070c 3C040000 		.4byte	.LASF72
 3139 0710 01       		.byte	0x1
 3140 0711 0204     		.2byte	0x402
 3141 0713 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 106


 3142 0717 02       		.uleb128 0x2
 3143 0718 91       		.byte	0x91
 3144 0719 73       		.sleb128 -13
 3145 071a 00       		.byte	0
 3146 071b 17       		.uleb128 0x17
 3147 071c AA080000 		.4byte	.LASF82
 3148 0720 01       		.byte	0x1
 3149 0721 1E04     		.2byte	0x41e
 3150 0723 00000000 		.4byte	.LFB57
 3151 0727 28000000 		.4byte	.LFE57-.LFB57
 3152 072b 01       		.uleb128 0x1
 3153 072c 9C       		.byte	0x9c
 3154 072d 50070000 		.4byte	0x750
 3155 0731 15       		.uleb128 0x15
 3156 0732 3C050000 		.4byte	.LASF50
 3157 0736 01       		.byte	0x1
 3158 0737 1E04     		.2byte	0x41e
 3159 0739 83000000 		.4byte	0x83
 3160 073d 02       		.uleb128 0x2
 3161 073e 91       		.byte	0x91
 3162 073f 74       		.sleb128 -12
 3163 0740 15       		.uleb128 0x15
 3164 0741 3C040000 		.4byte	.LASF72
 3165 0745 01       		.byte	0x1
 3166 0746 1E04     		.2byte	0x41e
 3167 0748 6B000000 		.4byte	0x6b
 3168 074c 02       		.uleb128 0x2
 3169 074d 91       		.byte	0x91
 3170 074e 73       		.sleb128 -13
 3171 074f 00       		.byte	0
 3172 0750 18       		.uleb128 0x18
 3173 0751 FF050000 		.4byte	.LASF83
 3174 0755 01       		.byte	0x1
 3175 0756 4C04     		.2byte	0x44c
 3176 0758 83000000 		.4byte	0x83
 3177 075c 00000000 		.4byte	.LFB58
 3178 0760 30010000 		.4byte	.LFE58-.LFB58
 3179 0764 01       		.uleb128 0x1
 3180 0765 9C       		.byte	0x9c
 3181 0766 C5070000 		.4byte	0x7c5
 3182 076a 15       		.uleb128 0x15
 3183 076b 3C050000 		.4byte	.LASF50
 3184 076f 01       		.byte	0x1
 3185 0770 4C04     		.2byte	0x44c
 3186 0772 83000000 		.4byte	0x83
 3187 0776 02       		.uleb128 0x2
 3188 0777 91       		.byte	0x91
 3189 0778 6C       		.sleb128 -20
 3190 0779 14       		.uleb128 0x14
 3191 077a AD030000 		.4byte	.LASF52
 3192 077e 01       		.byte	0x1
 3193 077f 4E04     		.2byte	0x44e
 3194 0781 6B000000 		.4byte	0x6b
 3195 0785 02       		.uleb128 0x2
 3196 0786 91       		.byte	0x91
 3197 0787 77       		.sleb128 -9
 3198 0788 14       		.uleb128 0x14
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 107


 3199 0789 EB050000 		.4byte	.LASF84
 3200 078d 01       		.byte	0x1
 3201 078e 4F04     		.2byte	0x44f
 3202 0790 6B000000 		.4byte	0x6b
 3203 0794 02       		.uleb128 0x2
 3204 0795 91       		.byte	0x91
 3205 0796 74       		.sleb128 -12
 3206 0797 14       		.uleb128 0x14
 3207 0798 63080000 		.4byte	.LASF85
 3208 079c 01       		.byte	0x1
 3209 079d 5004     		.2byte	0x450
 3210 079f 6B000000 		.4byte	0x6b
 3211 07a3 02       		.uleb128 0x2
 3212 07a4 91       		.byte	0x91
 3213 07a5 73       		.sleb128 -13
 3214 07a6 14       		.uleb128 0x14
 3215 07a7 20080000 		.4byte	.LASF86
 3216 07ab 01       		.byte	0x1
 3217 07ac 5204     		.2byte	0x452
 3218 07ae 6B000000 		.4byte	0x6b
 3219 07b2 02       		.uleb128 0x2
 3220 07b3 91       		.byte	0x91
 3221 07b4 76       		.sleb128 -10
 3222 07b5 14       		.uleb128 0x14
 3223 07b6 A5040000 		.4byte	.LASF87
 3224 07ba 01       		.byte	0x1
 3225 07bb 5304     		.2byte	0x453
 3226 07bd 6B000000 		.4byte	0x6b
 3227 07c1 02       		.uleb128 0x2
 3228 07c2 91       		.byte	0x91
 3229 07c3 75       		.sleb128 -11
 3230 07c4 00       		.byte	0
 3231 07c5 18       		.uleb128 0x18
 3232 07c6 88090000 		.4byte	.LASF88
 3233 07ca 01       		.byte	0x1
 3234 07cb 9E04     		.2byte	0x49e
 3235 07cd 83000000 		.4byte	0x83
 3236 07d1 00000000 		.4byte	.LFB59
 3237 07d5 42000000 		.4byte	.LFE59-.LFB59
 3238 07d9 01       		.uleb128 0x1
 3239 07da 9C       		.byte	0x9c
 3240 07db 1C080000 		.4byte	0x81c
 3241 07df 15       		.uleb128 0x15
 3242 07e0 AD030000 		.4byte	.LASF52
 3243 07e4 01       		.byte	0x1
 3244 07e5 9E04     		.2byte	0x49e
 3245 07e7 83000000 		.4byte	0x83
 3246 07eb 02       		.uleb128 0x2
 3247 07ec 91       		.byte	0x91
 3248 07ed 64       		.sleb128 -28
 3249 07ee 14       		.uleb128 0x14
 3250 07ef BB050000 		.4byte	.LASF89
 3251 07f3 01       		.byte	0x1
 3252 07f4 A004     		.2byte	0x4a0
 3253 07f6 83000000 		.4byte	0x83
 3254 07fa 02       		.uleb128 0x2
 3255 07fb 91       		.byte	0x91
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 108


 3256 07fc 74       		.sleb128 -12
 3257 07fd 14       		.uleb128 0x14
 3258 07fe 0B010000 		.4byte	.LASF90
 3259 0802 01       		.byte	0x1
 3260 0803 A104     		.2byte	0x4a1
 3261 0805 83000000 		.4byte	0x83
 3262 0809 02       		.uleb128 0x2
 3263 080a 91       		.byte	0x91
 3264 080b 6C       		.sleb128 -20
 3265 080c 14       		.uleb128 0x14
 3266 080d FD080000 		.4byte	.LASF91
 3267 0811 01       		.byte	0x1
 3268 0812 A204     		.2byte	0x4a2
 3269 0814 83000000 		.4byte	0x83
 3270 0818 02       		.uleb128 0x2
 3271 0819 91       		.byte	0x91
 3272 081a 70       		.sleb128 -16
 3273 081b 00       		.byte	0
 3274 081c 18       		.uleb128 0x18
 3275 081d D1040000 		.4byte	.LASF92
 3276 0821 01       		.byte	0x1
 3277 0822 CC04     		.2byte	0x4cc
 3278 0824 83000000 		.4byte	0x83
 3279 0828 00000000 		.4byte	.LFB60
 3280 082c 36000000 		.4byte	.LFE60-.LFB60
 3281 0830 01       		.uleb128 0x1
 3282 0831 9C       		.byte	0x9c
 3283 0832 53080000 		.4byte	0x853
 3284 0836 13       		.uleb128 0x13
 3285 0837 6900     		.ascii	"i\000"
 3286 0839 01       		.byte	0x1
 3287 083a CF04     		.2byte	0x4cf
 3288 083c 83000000 		.4byte	0x83
 3289 0840 02       		.uleb128 0x2
 3290 0841 91       		.byte	0x91
 3291 0842 74       		.sleb128 -12
 3292 0843 14       		.uleb128 0x14
 3293 0844 FD080000 		.4byte	.LASF91
 3294 0848 01       		.byte	0x1
 3295 0849 D004     		.2byte	0x4d0
 3296 084b 83000000 		.4byte	0x83
 3297 084f 02       		.uleb128 0x2
 3298 0850 91       		.byte	0x91
 3299 0851 70       		.sleb128 -16
 3300 0852 00       		.byte	0
 3301 0853 12       		.uleb128 0x12
 3302 0854 53050000 		.4byte	.LASF93
 3303 0858 01       		.byte	0x1
 3304 0859 FB04     		.2byte	0x4fb
 3305 085b 00000000 		.4byte	.LFB61
 3306 085f 5C000000 		.4byte	.LFE61-.LFB61
 3307 0863 01       		.uleb128 0x1
 3308 0864 9C       		.byte	0x9c
 3309 0865 97080000 		.4byte	0x897
 3310 0869 15       		.uleb128 0x15
 3311 086a AD030000 		.4byte	.LASF52
 3312 086e 01       		.byte	0x1
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 109


 3313 086f FB04     		.2byte	0x4fb
 3314 0871 83000000 		.4byte	0x83
 3315 0875 02       		.uleb128 0x2
 3316 0876 91       		.byte	0x91
 3317 0877 6C       		.sleb128 -20
 3318 0878 14       		.uleb128 0x14
 3319 0879 BB050000 		.4byte	.LASF89
 3320 087d 01       		.byte	0x1
 3321 087e FE04     		.2byte	0x4fe
 3322 0880 6B000000 		.4byte	0x6b
 3323 0884 02       		.uleb128 0x2
 3324 0885 91       		.byte	0x91
 3325 0886 77       		.sleb128 -9
 3326 0887 14       		.uleb128 0x14
 3327 0888 0B010000 		.4byte	.LASF90
 3328 088c 01       		.byte	0x1
 3329 088d FF04     		.2byte	0x4ff
 3330 088f 6B000000 		.4byte	0x6b
 3331 0893 02       		.uleb128 0x2
 3332 0894 91       		.byte	0x91
 3333 0895 76       		.sleb128 -10
 3334 0896 00       		.byte	0
 3335 0897 12       		.uleb128 0x12
 3336 0898 B4000000 		.4byte	.LASF94
 3337 089c 01       		.byte	0x1
 3338 089d 2605     		.2byte	0x526
 3339 089f 00000000 		.4byte	.LFB62
 3340 08a3 5C000000 		.4byte	.LFE62-.LFB62
 3341 08a7 01       		.uleb128 0x1
 3342 08a8 9C       		.byte	0x9c
 3343 08a9 DB080000 		.4byte	0x8db
 3344 08ad 15       		.uleb128 0x15
 3345 08ae AD030000 		.4byte	.LASF52
 3346 08b2 01       		.byte	0x1
 3347 08b3 2605     		.2byte	0x526
 3348 08b5 83000000 		.4byte	0x83
 3349 08b9 02       		.uleb128 0x2
 3350 08ba 91       		.byte	0x91
 3351 08bb 6C       		.sleb128 -20
 3352 08bc 14       		.uleb128 0x14
 3353 08bd BB050000 		.4byte	.LASF89
 3354 08c1 01       		.byte	0x1
 3355 08c2 2805     		.2byte	0x528
 3356 08c4 6B000000 		.4byte	0x6b
 3357 08c8 02       		.uleb128 0x2
 3358 08c9 91       		.byte	0x91
 3359 08ca 77       		.sleb128 -9
 3360 08cb 14       		.uleb128 0x14
 3361 08cc 0B010000 		.4byte	.LASF90
 3362 08d0 01       		.byte	0x1
 3363 08d1 2905     		.2byte	0x529
 3364 08d3 6B000000 		.4byte	0x6b
 3365 08d7 02       		.uleb128 0x2
 3366 08d8 91       		.byte	0x91
 3367 08d9 76       		.sleb128 -10
 3368 08da 00       		.byte	0
 3369 08db 16       		.uleb128 0x16
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 110


 3370 08dc 55090000 		.4byte	.LASF95
 3371 08e0 01       		.byte	0x1
 3372 08e1 4209     		.2byte	0x942
 3373 08e3 77000000 		.4byte	0x77
 3374 08e7 00000000 		.4byte	.LFB63
 3375 08eb 76000000 		.4byte	.LFE63-.LFB63
 3376 08ef 01       		.uleb128 0x1
 3377 08f0 9C       		.byte	0x9c
 3378 08f1 2F090000 		.4byte	0x92f
 3379 08f5 19       		.uleb128 0x19
 3380 08f6 783100   		.ascii	"x1\000"
 3381 08f9 01       		.byte	0x1
 3382 08fa 4209     		.2byte	0x942
 3383 08fc 77000000 		.4byte	0x77
 3384 0900 02       		.uleb128 0x2
 3385 0901 91       		.byte	0x91
 3386 0902 66       		.sleb128 -26
 3387 0903 19       		.uleb128 0x19
 3388 0904 783200   		.ascii	"x2\000"
 3389 0907 01       		.byte	0x1
 3390 0908 4209     		.2byte	0x942
 3391 090a 77000000 		.4byte	0x77
 3392 090e 02       		.uleb128 0x2
 3393 090f 91       		.byte	0x91
 3394 0910 64       		.sleb128 -28
 3395 0911 19       		.uleb128 0x19
 3396 0912 783300   		.ascii	"x3\000"
 3397 0915 01       		.byte	0x1
 3398 0916 4209     		.2byte	0x942
 3399 0918 77000000 		.4byte	0x77
 3400 091c 02       		.uleb128 0x2
 3401 091d 91       		.byte	0x91
 3402 091e 62       		.sleb128 -30
 3403 091f 13       		.uleb128 0x13
 3404 0920 746D7000 		.ascii	"tmp\000"
 3405 0924 01       		.byte	0x1
 3406 0925 4409     		.2byte	0x944
 3407 0927 77000000 		.4byte	0x77
 3408 092b 02       		.uleb128 0x2
 3409 092c 91       		.byte	0x91
 3410 092d 6E       		.sleb128 -18
 3411 092e 00       		.byte	0
 3412 092f 16       		.uleb128 0x16
 3413 0930 1B000000 		.4byte	.LASF96
 3414 0934 01       		.byte	0x1
 3415 0935 BA09     		.2byte	0x9ba
 3416 0937 77000000 		.4byte	0x77
 3417 093b 00000000 		.4byte	.LFB64
 3418 093f 3C000000 		.4byte	.LFE64-.LFB64
 3419 0943 01       		.uleb128 0x1
 3420 0944 9C       		.byte	0x9c
 3421 0945 75090000 		.4byte	0x975
 3422 0949 19       		.uleb128 0x19
 3423 094a 783100   		.ascii	"x1\000"
 3424 094d 01       		.byte	0x1
 3425 094e BA09     		.2byte	0x9ba
 3426 0950 77000000 		.4byte	0x77
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 111


 3427 0954 02       		.uleb128 0x2
 3428 0955 91       		.byte	0x91
 3429 0956 6E       		.sleb128 -18
 3430 0957 19       		.uleb128 0x19
 3431 0958 783200   		.ascii	"x2\000"
 3432 095b 01       		.byte	0x1
 3433 095c BA09     		.2byte	0x9ba
 3434 095e 77000000 		.4byte	0x77
 3435 0962 02       		.uleb128 0x2
 3436 0963 91       		.byte	0x91
 3437 0964 6C       		.sleb128 -20
 3438 0965 13       		.uleb128 0x13
 3439 0966 746D7000 		.ascii	"tmp\000"
 3440 096a 01       		.byte	0x1
 3441 096b BC09     		.2byte	0x9bc
 3442 096d 83000000 		.4byte	0x83
 3443 0971 02       		.uleb128 0x2
 3444 0972 91       		.byte	0x91
 3445 0973 74       		.sleb128 -12
 3446 0974 00       		.byte	0
 3447 0975 16       		.uleb128 0x16
 3448 0976 D2050000 		.4byte	.LASF97
 3449 097a 01       		.byte	0x1
 3450 097b A30A     		.2byte	0xaa3
 3451 097d 83000000 		.4byte	0x83
 3452 0981 00000000 		.4byte	.LFB65
 3453 0985 1C000000 		.4byte	.LFE65-.LFB65
 3454 0989 01       		.uleb128 0x1
 3455 098a 9C       		.byte	0x9c
 3456 098b 9F090000 		.4byte	0x99f
 3457 098f 15       		.uleb128 0x15
 3458 0990 3C050000 		.4byte	.LASF50
 3459 0994 01       		.byte	0x1
 3460 0995 A30A     		.2byte	0xaa3
 3461 0997 83000000 		.4byte	0x83
 3462 099b 02       		.uleb128 0x2
 3463 099c 91       		.byte	0x91
 3464 099d 74       		.sleb128 -12
 3465 099e 00       		.byte	0
 3466 099f 16       		.uleb128 0x16
 3467 09a0 76060000 		.4byte	.LASF98
 3468 09a4 01       		.byte	0x1
 3469 09a5 BD0A     		.2byte	0xabd
 3470 09a7 6B000000 		.4byte	0x6b
 3471 09ab 00000000 		.4byte	.LFB66
 3472 09af 1C000000 		.4byte	.LFE66-.LFB66
 3473 09b3 01       		.uleb128 0x1
 3474 09b4 9C       		.byte	0x9c
 3475 09b5 C9090000 		.4byte	0x9c9
 3476 09b9 15       		.uleb128 0x15
 3477 09ba 3C050000 		.4byte	.LASF50
 3478 09be 01       		.byte	0x1
 3479 09bf BD0A     		.2byte	0xabd
 3480 09c1 83000000 		.4byte	0x83
 3481 09c5 02       		.uleb128 0x2
 3482 09c6 91       		.byte	0x91
 3483 09c7 74       		.sleb128 -12
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 112


 3484 09c8 00       		.byte	0
 3485 09c9 16       		.uleb128 0x16
 3486 09ca 73090000 		.4byte	.LASF99
 3487 09ce 01       		.byte	0x1
 3488 09cf D70A     		.2byte	0xad7
 3489 09d1 6B000000 		.4byte	0x6b
 3490 09d5 00000000 		.4byte	.LFB67
 3491 09d9 1C000000 		.4byte	.LFE67-.LFB67
 3492 09dd 01       		.uleb128 0x1
 3493 09de 9C       		.byte	0x9c
 3494 09df F3090000 		.4byte	0x9f3
 3495 09e3 15       		.uleb128 0x15
 3496 09e4 AD030000 		.4byte	.LASF52
 3497 09e8 01       		.byte	0x1
 3498 09e9 D70A     		.2byte	0xad7
 3499 09eb 83000000 		.4byte	0x83
 3500 09ef 02       		.uleb128 0x2
 3501 09f0 91       		.byte	0x91
 3502 09f1 74       		.sleb128 -12
 3503 09f2 00       		.byte	0
 3504 09f3 1A       		.uleb128 0x1a
 3505 09f4 6C070000 		.4byte	.LASF100
 3506 09f8 01       		.byte	0x1
 3507 09f9 F10A     		.2byte	0xaf1
 3508 09fb 00000000 		.4byte	.LFB68
 3509 09ff 14000000 		.4byte	.LFE68-.LFB68
 3510 0a03 01       		.uleb128 0x1
 3511 0a04 9C       		.byte	0x9c
 3512 0a05 1A       		.uleb128 0x1a
 3513 0a06 1D040000 		.4byte	.LASF101
 3514 0a0a 01       		.byte	0x1
 3515 0a0b 0A0B     		.2byte	0xb0a
 3516 0a0d 00000000 		.4byte	.LFB69
 3517 0a11 14000000 		.4byte	.LFE69-.LFB69
 3518 0a15 01       		.uleb128 0x1
 3519 0a16 9C       		.byte	0x9c
 3520 0a17 1B       		.uleb128 0x1b
 3521 0a18 6B000000 		.4byte	0x6b
 3522 0a1c 270A0000 		.4byte	0xa27
 3523 0a20 1C       		.uleb128 0x1c
 3524 0a21 A4000000 		.4byte	0xa4
 3525 0a25 01       		.byte	0x1
 3526 0a26 00       		.byte	0
 3527 0a27 0F       		.uleb128 0xf
 3528 0a28 2F000000 		.4byte	.LASF102
 3529 0a2c 01       		.byte	0x1
 3530 0a2d 57       		.byte	0x57
 3531 0a2e 170A0000 		.4byte	0xa17
 3532 0a32 05       		.uleb128 0x5
 3533 0a33 03       		.byte	0x3
 3534 0a34 10000000 		.4byte	CapSense_debounceCounter
 3535 0a38 1B       		.uleb128 0x1b
 3536 0a39 77000000 		.4byte	0x77
 3537 0a3d 480A0000 		.4byte	0xa48
 3538 0a41 1C       		.uleb128 0x1c
 3539 0a42 A4000000 		.4byte	0xa4
 3540 0a46 00       		.byte	0
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 113


 3541 0a47 00       		.byte	0
 3542 0a48 1D       		.uleb128 0x1d
 3543 0a49 63060000 		.4byte	.LASF103
 3544 0a4d 01       		.byte	0x1
 3545 0a4e 2C       		.byte	0x2c
 3546 0a4f 380A0000 		.4byte	0xa38
 3547 0a53 1B       		.uleb128 0x1b
 3548 0a54 6B000000 		.4byte	0x6b
 3549 0a58 630A0000 		.4byte	0xa63
 3550 0a5c 1C       		.uleb128 0x1c
 3551 0a5d A4000000 		.4byte	0xa4
 3552 0a61 00       		.byte	0
 3553 0a62 00       		.byte	0
 3554 0a63 1D       		.uleb128 0x1d
 3555 0a64 72030000 		.4byte	.LASF104
 3556 0a68 01       		.byte	0x1
 3557 0a69 2D       		.byte	0x2d
 3558 0a6a 530A0000 		.4byte	0xa53
 3559 0a6e 1B       		.uleb128 0x1b
 3560 0a6f DB010000 		.4byte	0x1db
 3561 0a73 7E0A0000 		.4byte	0xa7e
 3562 0a77 1C       		.uleb128 0x1c
 3563 0a78 A4000000 		.4byte	0xa4
 3564 0a7c 00       		.byte	0
 3565 0a7d 00       		.byte	0
 3566 0a7e 1D       		.uleb128 0x1d
 3567 0a7f EB030000 		.4byte	.LASF105
 3568 0a83 01       		.byte	0x1
 3569 0a84 2E       		.byte	0x2e
 3570 0a85 890A0000 		.4byte	0xa89
 3571 0a89 08       		.uleb128 0x8
 3572 0a8a 6E0A0000 		.4byte	0xa6e
 3573 0a8e 1E       		.uleb128 0x1e
 3574 0a8f AE070000 		.4byte	.LASF106
 3575 0a93 01       		.byte	0x1
 3576 0a94 34       		.byte	0x34
 3577 0a95 380A0000 		.4byte	0xa38
 3578 0a99 05       		.uleb128 0x5
 3579 0a9a 03       		.byte	0x3
 3580 0a9b 00000000 		.4byte	CapSense_sensorBaseline
 3581 0a9f 1E       		.uleb128 0x1e
 3582 0aa0 00000000 		.4byte	.LASF107
 3583 0aa4 01       		.byte	0x1
 3584 0aa5 35       		.byte	0x35
 3585 0aa6 530A0000 		.4byte	0xa53
 3586 0aaa 05       		.uleb128 0x5
 3587 0aab 03       		.byte	0x3
 3588 0aac 00000000 		.4byte	CapSense_sensorBaselineLow
 3589 0ab0 1E       		.uleb128 0x1e
 3590 0ab1 9D020000 		.4byte	.LASF108
 3591 0ab5 01       		.byte	0x1
 3592 0ab6 36       		.byte	0x36
 3593 0ab7 530A0000 		.4byte	0xa53
 3594 0abb 05       		.uleb128 0x5
 3595 0abc 03       		.byte	0x3
 3596 0abd 00000000 		.4byte	CapSense_sensorSignal
 3597 0ac1 1E       		.uleb128 0x1e
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 114


 3598 0ac2 CA090000 		.4byte	.LASF109
 3599 0ac6 01       		.byte	0x1
 3600 0ac7 37       		.byte	0x37
 3601 0ac8 530A0000 		.4byte	0xa53
 3602 0acc 05       		.uleb128 0x5
 3603 0acd 03       		.byte	0x3
 3604 0ace 00000000 		.4byte	CapSense_sensorOnMask
 3605 0ad2 1E       		.uleb128 0x1e
 3606 0ad3 55000000 		.4byte	.LASF110
 3607 0ad7 01       		.byte	0x1
 3608 0ad8 39       		.byte	0x39
 3609 0ad9 530A0000 		.4byte	0xa53
 3610 0add 05       		.uleb128 0x5
 3611 0ade 03       		.byte	0x3
 3612 0adf 00000000 		.4byte	CapSense_lowBaselineResetCnt
 3613 0ae3 1E       		.uleb128 0x1e
 3614 0ae4 8A070000 		.4byte	.LASF111
 3615 0ae8 01       		.byte	0x1
 3616 0ae9 3A       		.byte	0x3a
 3617 0aea 530A0000 		.4byte	0xa53
 3618 0aee 05       		.uleb128 0x5
 3619 0aef 03       		.byte	0x3
 3620 0af0 00000000 		.4byte	CapSense_lowBaselineReset
 3621 0af4 1E       		.uleb128 0x1e
 3622 0af5 B4030000 		.4byte	.LASF112
 3623 0af9 01       		.byte	0x1
 3624 0afa 49       		.byte	0x49
 3625 0afb 530A0000 		.4byte	0xa53
 3626 0aff 05       		.uleb128 0x5
 3627 0b00 03       		.byte	0x3
 3628 0b01 00000000 		.4byte	CapSense_fingerThreshold
 3629 0b05 1E       		.uleb128 0x1e
 3630 0b06 4B080000 		.4byte	.LASF113
 3631 0b0a 01       		.byte	0x1
 3632 0b0b 4D       		.byte	0x4d
 3633 0b0c 530A0000 		.4byte	0xa53
 3634 0b10 05       		.uleb128 0x5
 3635 0b11 03       		.byte	0x3
 3636 0b12 00000000 		.4byte	CapSense_noiseThreshold
 3637 0b16 1E       		.uleb128 0x1e
 3638 0b17 0A050000 		.4byte	.LASF114
 3639 0b1b 01       		.byte	0x1
 3640 0b1c 4F       		.byte	0x4f
 3641 0b1d 530A0000 		.4byte	0xa53
 3642 0b21 05       		.uleb128 0x5
 3643 0b22 03       		.byte	0x3
 3644 0b23 00000000 		.4byte	CapSense_negativeNoiseThreshold
 3645 0b27 1E       		.uleb128 0x1e
 3646 0b28 02030000 		.4byte	.LASF115
 3647 0b2c 01       		.byte	0x1
 3648 0b2d 51       		.byte	0x51
 3649 0b2e 530A0000 		.4byte	0xa53
 3650 0b32 05       		.uleb128 0x5
 3651 0b33 03       		.byte	0x3
 3652 0b34 00000000 		.4byte	CapSense_hysteresis
 3653 0b38 1E       		.uleb128 0x1e
 3654 0b39 49070000 		.4byte	.LASF116
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 115


 3655 0b3d 01       		.byte	0x1
 3656 0b3e 53       		.byte	0x53
 3657 0b3f 530A0000 		.4byte	0xa53
 3658 0b43 05       		.uleb128 0x5
 3659 0b44 03       		.byte	0x3
 3660 0b45 00000000 		.4byte	CapSense_debounce
 3661 0b49 1E       		.uleb128 0x1e
 3662 0b4a B3020000 		.4byte	.LASF117
 3663 0b4e 01       		.byte	0x1
 3664 0b4f 5B       		.byte	0x5b
 3665 0b50 5A0B0000 		.4byte	0xb5a
 3666 0b54 05       		.uleb128 0x5
 3667 0b55 03       		.byte	0x3
 3668 0b56 00000000 		.4byte	CapSense_rawDataIndex
 3669 0b5a 08       		.uleb128 0x8
 3670 0b5b 6E0A0000 		.4byte	0xa6e
 3671 0b5f 1E       		.uleb128 0x1e
 3672 0b60 F1040000 		.4byte	.LASF118
 3673 0b64 01       		.byte	0x1
 3674 0b65 5F       		.byte	0x5f
 3675 0b66 700B0000 		.4byte	0xb70
 3676 0b6a 05       		.uleb128 0x5
 3677 0b6b 03       		.byte	0x3
 3678 0b6c 00000000 		.4byte	CapSense_numberOfSensors
 3679 0b70 08       		.uleb128 0x8
 3680 0b71 6E0A0000 		.4byte	0xa6e
 3681 0b75 1E       		.uleb128 0x1e
 3682 0b76 B2090000 		.4byte	.LASF119
 3683 0b7a 01       		.byte	0x1
 3684 0b7b 27       		.byte	0x27
 3685 0b7c 380A0000 		.4byte	0xa38
 3686 0b80 05       		.uleb128 0x5
 3687 0b81 03       		.byte	0x3
 3688 0b82 00000000 		.4byte	CapSense_rawFilterData1
 3689 0b86 1D       		.uleb128 0x1d
 3690 0b87 EB000000 		.4byte	.LASF120
 3691 0b8b 01       		.byte	0x1
 3692 0b8c 41       		.byte	0x41
 3693 0b8d AE020000 		.4byte	0x2ae
 3694 0b91 1E       		.uleb128 0x1e
 3695 0b92 03090000 		.4byte	.LASF121
 3696 0b96 01       		.byte	0x1
 3697 0b97 45       		.byte	0x45
 3698 0b98 6B000000 		.4byte	0x6b
 3699 0b9c 05       		.uleb128 0x5
 3700 0b9d 03       		.byte	0x3
 3701 0b9e 00000000 		.4byte	CapSense_enableRawFilters
 3702 0ba2 00       		.byte	0
 3703              		.section	.debug_abbrev,"",%progbits
 3704              	.Ldebug_abbrev0:
 3705 0000 01       		.uleb128 0x1
 3706 0001 11       		.uleb128 0x11
 3707 0002 01       		.byte	0x1
 3708 0003 25       		.uleb128 0x25
 3709 0004 0E       		.uleb128 0xe
 3710 0005 13       		.uleb128 0x13
 3711 0006 0B       		.uleb128 0xb
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 116


 3712 0007 03       		.uleb128 0x3
 3713 0008 0E       		.uleb128 0xe
 3714 0009 1B       		.uleb128 0x1b
 3715 000a 0E       		.uleb128 0xe
 3716 000b 55       		.uleb128 0x55
 3717 000c 17       		.uleb128 0x17
 3718 000d 11       		.uleb128 0x11
 3719 000e 01       		.uleb128 0x1
 3720 000f 10       		.uleb128 0x10
 3721 0010 17       		.uleb128 0x17
 3722 0011 00       		.byte	0
 3723 0012 00       		.byte	0
 3724 0013 02       		.uleb128 0x2
 3725 0014 24       		.uleb128 0x24
 3726 0015 00       		.byte	0
 3727 0016 0B       		.uleb128 0xb
 3728 0017 0B       		.uleb128 0xb
 3729 0018 3E       		.uleb128 0x3e
 3730 0019 0B       		.uleb128 0xb
 3731 001a 03       		.uleb128 0x3
 3732 001b 0E       		.uleb128 0xe
 3733 001c 00       		.byte	0
 3734 001d 00       		.byte	0
 3735 001e 03       		.uleb128 0x3
 3736 001f 24       		.uleb128 0x24
 3737 0020 00       		.byte	0
 3738 0021 0B       		.uleb128 0xb
 3739 0022 0B       		.uleb128 0xb
 3740 0023 3E       		.uleb128 0x3e
 3741 0024 0B       		.uleb128 0xb
 3742 0025 03       		.uleb128 0x3
 3743 0026 08       		.uleb128 0x8
 3744 0027 00       		.byte	0
 3745 0028 00       		.byte	0
 3746 0029 04       		.uleb128 0x4
 3747 002a 16       		.uleb128 0x16
 3748 002b 00       		.byte	0
 3749 002c 03       		.uleb128 0x3
 3750 002d 0E       		.uleb128 0xe
 3751 002e 3A       		.uleb128 0x3a
 3752 002f 0B       		.uleb128 0xb
 3753 0030 3B       		.uleb128 0x3b
 3754 0031 05       		.uleb128 0x5
 3755 0032 49       		.uleb128 0x49
 3756 0033 13       		.uleb128 0x13
 3757 0034 00       		.byte	0
 3758 0035 00       		.byte	0
 3759 0036 05       		.uleb128 0x5
 3760 0037 13       		.uleb128 0x13
 3761 0038 01       		.byte	0x1
 3762 0039 0B       		.uleb128 0xb
 3763 003a 0B       		.uleb128 0xb
 3764 003b 3A       		.uleb128 0x3a
 3765 003c 0B       		.uleb128 0xb
 3766 003d 3B       		.uleb128 0x3b
 3767 003e 0B       		.uleb128 0xb
 3768 003f 01       		.uleb128 0x1
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 117


 3769 0040 13       		.uleb128 0x13
 3770 0041 00       		.byte	0
 3771 0042 00       		.byte	0
 3772 0043 06       		.uleb128 0x6
 3773 0044 0D       		.uleb128 0xd
 3774 0045 00       		.byte	0
 3775 0046 03       		.uleb128 0x3
 3776 0047 0E       		.uleb128 0xe
 3777 0048 3A       		.uleb128 0x3a
 3778 0049 0B       		.uleb128 0xb
 3779 004a 3B       		.uleb128 0x3b
 3780 004b 0B       		.uleb128 0xb
 3781 004c 49       		.uleb128 0x49
 3782 004d 13       		.uleb128 0x13
 3783 004e 38       		.uleb128 0x38
 3784 004f 0B       		.uleb128 0xb
 3785 0050 00       		.byte	0
 3786 0051 00       		.byte	0
 3787 0052 07       		.uleb128 0x7
 3788 0053 0F       		.uleb128 0xf
 3789 0054 00       		.byte	0
 3790 0055 0B       		.uleb128 0xb
 3791 0056 0B       		.uleb128 0xb
 3792 0057 49       		.uleb128 0x49
 3793 0058 13       		.uleb128 0x13
 3794 0059 00       		.byte	0
 3795 005a 00       		.byte	0
 3796 005b 08       		.uleb128 0x8
 3797 005c 26       		.uleb128 0x26
 3798 005d 00       		.byte	0
 3799 005e 49       		.uleb128 0x49
 3800 005f 13       		.uleb128 0x13
 3801 0060 00       		.byte	0
 3802 0061 00       		.byte	0
 3803 0062 09       		.uleb128 0x9
 3804 0063 15       		.uleb128 0x15
 3805 0064 01       		.byte	0x1
 3806 0065 27       		.uleb128 0x27
 3807 0066 19       		.uleb128 0x19
 3808 0067 49       		.uleb128 0x49
 3809 0068 13       		.uleb128 0x13
 3810 0069 01       		.uleb128 0x1
 3811 006a 13       		.uleb128 0x13
 3812 006b 00       		.byte	0
 3813 006c 00       		.byte	0
 3814 006d 0A       		.uleb128 0xa
 3815 006e 05       		.uleb128 0x5
 3816 006f 00       		.byte	0
 3817 0070 49       		.uleb128 0x49
 3818 0071 13       		.uleb128 0x13
 3819 0072 00       		.byte	0
 3820 0073 00       		.byte	0
 3821 0074 0B       		.uleb128 0xb
 3822 0075 15       		.uleb128 0x15
 3823 0076 01       		.byte	0x1
 3824 0077 27       		.uleb128 0x27
 3825 0078 19       		.uleb128 0x19
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 118


 3826 0079 01       		.uleb128 0x1
 3827 007a 13       		.uleb128 0x13
 3828 007b 00       		.byte	0
 3829 007c 00       		.byte	0
 3830 007d 0C       		.uleb128 0xc
 3831 007e 16       		.uleb128 0x16
 3832 007f 00       		.byte	0
 3833 0080 03       		.uleb128 0x3
 3834 0081 0E       		.uleb128 0xe
 3835 0082 3A       		.uleb128 0x3a
 3836 0083 0B       		.uleb128 0xb
 3837 0084 3B       		.uleb128 0x3b
 3838 0085 0B       		.uleb128 0xb
 3839 0086 49       		.uleb128 0x49
 3840 0087 13       		.uleb128 0x13
 3841 0088 00       		.byte	0
 3842 0089 00       		.byte	0
 3843 008a 0D       		.uleb128 0xd
 3844 008b 2E       		.uleb128 0x2e
 3845 008c 01       		.byte	0x1
 3846 008d 3F       		.uleb128 0x3f
 3847 008e 19       		.uleb128 0x19
 3848 008f 03       		.uleb128 0x3
 3849 0090 0E       		.uleb128 0xe
 3850 0091 3A       		.uleb128 0x3a
 3851 0092 0B       		.uleb128 0xb
 3852 0093 3B       		.uleb128 0x3b
 3853 0094 0B       		.uleb128 0xb
 3854 0095 27       		.uleb128 0x27
 3855 0096 19       		.uleb128 0x19
 3856 0097 11       		.uleb128 0x11
 3857 0098 01       		.uleb128 0x1
 3858 0099 12       		.uleb128 0x12
 3859 009a 06       		.uleb128 0x6
 3860 009b 40       		.uleb128 0x40
 3861 009c 18       		.uleb128 0x18
 3862 009d 9742     		.uleb128 0x2117
 3863 009f 19       		.uleb128 0x19
 3864 00a0 01       		.uleb128 0x1
 3865 00a1 13       		.uleb128 0x13
 3866 00a2 00       		.byte	0
 3867 00a3 00       		.byte	0
 3868 00a4 0E       		.uleb128 0xe
 3869 00a5 05       		.uleb128 0x5
 3870 00a6 00       		.byte	0
 3871 00a7 03       		.uleb128 0x3
 3872 00a8 0E       		.uleb128 0xe
 3873 00a9 3A       		.uleb128 0x3a
 3874 00aa 0B       		.uleb128 0xb
 3875 00ab 3B       		.uleb128 0x3b
 3876 00ac 0B       		.uleb128 0xb
 3877 00ad 49       		.uleb128 0x49
 3878 00ae 13       		.uleb128 0x13
 3879 00af 02       		.uleb128 0x2
 3880 00b0 18       		.uleb128 0x18
 3881 00b1 00       		.byte	0
 3882 00b2 00       		.byte	0
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 119


 3883 00b3 0F       		.uleb128 0xf
 3884 00b4 34       		.uleb128 0x34
 3885 00b5 00       		.byte	0
 3886 00b6 03       		.uleb128 0x3
 3887 00b7 0E       		.uleb128 0xe
 3888 00b8 3A       		.uleb128 0x3a
 3889 00b9 0B       		.uleb128 0xb
 3890 00ba 3B       		.uleb128 0x3b
 3891 00bb 0B       		.uleb128 0xb
 3892 00bc 49       		.uleb128 0x49
 3893 00bd 13       		.uleb128 0x13
 3894 00be 02       		.uleb128 0x2
 3895 00bf 18       		.uleb128 0x18
 3896 00c0 00       		.byte	0
 3897 00c1 00       		.byte	0
 3898 00c2 10       		.uleb128 0x10
 3899 00c3 2E       		.uleb128 0x2e
 3900 00c4 01       		.byte	0x1
 3901 00c5 3F       		.uleb128 0x3f
 3902 00c6 19       		.uleb128 0x19
 3903 00c7 03       		.uleb128 0x3
 3904 00c8 0E       		.uleb128 0xe
 3905 00c9 3A       		.uleb128 0x3a
 3906 00ca 0B       		.uleb128 0xb
 3907 00cb 3B       		.uleb128 0x3b
 3908 00cc 0B       		.uleb128 0xb
 3909 00cd 27       		.uleb128 0x27
 3910 00ce 19       		.uleb128 0x19
 3911 00cf 11       		.uleb128 0x11
 3912 00d0 01       		.uleb128 0x1
 3913 00d1 12       		.uleb128 0x12
 3914 00d2 06       		.uleb128 0x6
 3915 00d3 40       		.uleb128 0x40
 3916 00d4 18       		.uleb128 0x18
 3917 00d5 9642     		.uleb128 0x2116
 3918 00d7 19       		.uleb128 0x19
 3919 00d8 01       		.uleb128 0x1
 3920 00d9 13       		.uleb128 0x13
 3921 00da 00       		.byte	0
 3922 00db 00       		.byte	0
 3923 00dc 11       		.uleb128 0x11
 3924 00dd 34       		.uleb128 0x34
 3925 00de 00       		.byte	0
 3926 00df 03       		.uleb128 0x3
 3927 00e0 08       		.uleb128 0x8
 3928 00e1 3A       		.uleb128 0x3a
 3929 00e2 0B       		.uleb128 0xb
 3930 00e3 3B       		.uleb128 0x3b
 3931 00e4 0B       		.uleb128 0xb
 3932 00e5 49       		.uleb128 0x49
 3933 00e6 13       		.uleb128 0x13
 3934 00e7 02       		.uleb128 0x2
 3935 00e8 18       		.uleb128 0x18
 3936 00e9 00       		.byte	0
 3937 00ea 00       		.byte	0
 3938 00eb 12       		.uleb128 0x12
 3939 00ec 2E       		.uleb128 0x2e
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 120


 3940 00ed 01       		.byte	0x1
 3941 00ee 3F       		.uleb128 0x3f
 3942 00ef 19       		.uleb128 0x19
 3943 00f0 03       		.uleb128 0x3
 3944 00f1 0E       		.uleb128 0xe
 3945 00f2 3A       		.uleb128 0x3a
 3946 00f3 0B       		.uleb128 0xb
 3947 00f4 3B       		.uleb128 0x3b
 3948 00f5 05       		.uleb128 0x5
 3949 00f6 27       		.uleb128 0x27
 3950 00f7 19       		.uleb128 0x19
 3951 00f8 11       		.uleb128 0x11
 3952 00f9 01       		.uleb128 0x1
 3953 00fa 12       		.uleb128 0x12
 3954 00fb 06       		.uleb128 0x6
 3955 00fc 40       		.uleb128 0x40
 3956 00fd 18       		.uleb128 0x18
 3957 00fe 9642     		.uleb128 0x2116
 3958 0100 19       		.uleb128 0x19
 3959 0101 01       		.uleb128 0x1
 3960 0102 13       		.uleb128 0x13
 3961 0103 00       		.byte	0
 3962 0104 00       		.byte	0
 3963 0105 13       		.uleb128 0x13
 3964 0106 34       		.uleb128 0x34
 3965 0107 00       		.byte	0
 3966 0108 03       		.uleb128 0x3
 3967 0109 08       		.uleb128 0x8
 3968 010a 3A       		.uleb128 0x3a
 3969 010b 0B       		.uleb128 0xb
 3970 010c 3B       		.uleb128 0x3b
 3971 010d 05       		.uleb128 0x5
 3972 010e 49       		.uleb128 0x49
 3973 010f 13       		.uleb128 0x13
 3974 0110 02       		.uleb128 0x2
 3975 0111 18       		.uleb128 0x18
 3976 0112 00       		.byte	0
 3977 0113 00       		.byte	0
 3978 0114 14       		.uleb128 0x14
 3979 0115 34       		.uleb128 0x34
 3980 0116 00       		.byte	0
 3981 0117 03       		.uleb128 0x3
 3982 0118 0E       		.uleb128 0xe
 3983 0119 3A       		.uleb128 0x3a
 3984 011a 0B       		.uleb128 0xb
 3985 011b 3B       		.uleb128 0x3b
 3986 011c 05       		.uleb128 0x5
 3987 011d 49       		.uleb128 0x49
 3988 011e 13       		.uleb128 0x13
 3989 011f 02       		.uleb128 0x2
 3990 0120 18       		.uleb128 0x18
 3991 0121 00       		.byte	0
 3992 0122 00       		.byte	0
 3993 0123 15       		.uleb128 0x15
 3994 0124 05       		.uleb128 0x5
 3995 0125 00       		.byte	0
 3996 0126 03       		.uleb128 0x3
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 121


 3997 0127 0E       		.uleb128 0xe
 3998 0128 3A       		.uleb128 0x3a
 3999 0129 0B       		.uleb128 0xb
 4000 012a 3B       		.uleb128 0x3b
 4001 012b 05       		.uleb128 0x5
 4002 012c 49       		.uleb128 0x49
 4003 012d 13       		.uleb128 0x13
 4004 012e 02       		.uleb128 0x2
 4005 012f 18       		.uleb128 0x18
 4006 0130 00       		.byte	0
 4007 0131 00       		.byte	0
 4008 0132 16       		.uleb128 0x16
 4009 0133 2E       		.uleb128 0x2e
 4010 0134 01       		.byte	0x1
 4011 0135 3F       		.uleb128 0x3f
 4012 0136 19       		.uleb128 0x19
 4013 0137 03       		.uleb128 0x3
 4014 0138 0E       		.uleb128 0xe
 4015 0139 3A       		.uleb128 0x3a
 4016 013a 0B       		.uleb128 0xb
 4017 013b 3B       		.uleb128 0x3b
 4018 013c 05       		.uleb128 0x5
 4019 013d 27       		.uleb128 0x27
 4020 013e 19       		.uleb128 0x19
 4021 013f 49       		.uleb128 0x49
 4022 0140 13       		.uleb128 0x13
 4023 0141 11       		.uleb128 0x11
 4024 0142 01       		.uleb128 0x1
 4025 0143 12       		.uleb128 0x12
 4026 0144 06       		.uleb128 0x6
 4027 0145 40       		.uleb128 0x40
 4028 0146 18       		.uleb128 0x18
 4029 0147 9742     		.uleb128 0x2117
 4030 0149 19       		.uleb128 0x19
 4031 014a 01       		.uleb128 0x1
 4032 014b 13       		.uleb128 0x13
 4033 014c 00       		.byte	0
 4034 014d 00       		.byte	0
 4035 014e 17       		.uleb128 0x17
 4036 014f 2E       		.uleb128 0x2e
 4037 0150 01       		.byte	0x1
 4038 0151 3F       		.uleb128 0x3f
 4039 0152 19       		.uleb128 0x19
 4040 0153 03       		.uleb128 0x3
 4041 0154 0E       		.uleb128 0xe
 4042 0155 3A       		.uleb128 0x3a
 4043 0156 0B       		.uleb128 0xb
 4044 0157 3B       		.uleb128 0x3b
 4045 0158 05       		.uleb128 0x5
 4046 0159 27       		.uleb128 0x27
 4047 015a 19       		.uleb128 0x19
 4048 015b 11       		.uleb128 0x11
 4049 015c 01       		.uleb128 0x1
 4050 015d 12       		.uleb128 0x12
 4051 015e 06       		.uleb128 0x6
 4052 015f 40       		.uleb128 0x40
 4053 0160 18       		.uleb128 0x18
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 122


 4054 0161 9742     		.uleb128 0x2117
 4055 0163 19       		.uleb128 0x19
 4056 0164 01       		.uleb128 0x1
 4057 0165 13       		.uleb128 0x13
 4058 0166 00       		.byte	0
 4059 0167 00       		.byte	0
 4060 0168 18       		.uleb128 0x18
 4061 0169 2E       		.uleb128 0x2e
 4062 016a 01       		.byte	0x1
 4063 016b 3F       		.uleb128 0x3f
 4064 016c 19       		.uleb128 0x19
 4065 016d 03       		.uleb128 0x3
 4066 016e 0E       		.uleb128 0xe
 4067 016f 3A       		.uleb128 0x3a
 4068 0170 0B       		.uleb128 0xb
 4069 0171 3B       		.uleb128 0x3b
 4070 0172 05       		.uleb128 0x5
 4071 0173 27       		.uleb128 0x27
 4072 0174 19       		.uleb128 0x19
 4073 0175 49       		.uleb128 0x49
 4074 0176 13       		.uleb128 0x13
 4075 0177 11       		.uleb128 0x11
 4076 0178 01       		.uleb128 0x1
 4077 0179 12       		.uleb128 0x12
 4078 017a 06       		.uleb128 0x6
 4079 017b 40       		.uleb128 0x40
 4080 017c 18       		.uleb128 0x18
 4081 017d 9642     		.uleb128 0x2116
 4082 017f 19       		.uleb128 0x19
 4083 0180 01       		.uleb128 0x1
 4084 0181 13       		.uleb128 0x13
 4085 0182 00       		.byte	0
 4086 0183 00       		.byte	0
 4087 0184 19       		.uleb128 0x19
 4088 0185 05       		.uleb128 0x5
 4089 0186 00       		.byte	0
 4090 0187 03       		.uleb128 0x3
 4091 0188 08       		.uleb128 0x8
 4092 0189 3A       		.uleb128 0x3a
 4093 018a 0B       		.uleb128 0xb
 4094 018b 3B       		.uleb128 0x3b
 4095 018c 05       		.uleb128 0x5
 4096 018d 49       		.uleb128 0x49
 4097 018e 13       		.uleb128 0x13
 4098 018f 02       		.uleb128 0x2
 4099 0190 18       		.uleb128 0x18
 4100 0191 00       		.byte	0
 4101 0192 00       		.byte	0
 4102 0193 1A       		.uleb128 0x1a
 4103 0194 2E       		.uleb128 0x2e
 4104 0195 00       		.byte	0
 4105 0196 3F       		.uleb128 0x3f
 4106 0197 19       		.uleb128 0x19
 4107 0198 03       		.uleb128 0x3
 4108 0199 0E       		.uleb128 0xe
 4109 019a 3A       		.uleb128 0x3a
 4110 019b 0B       		.uleb128 0xb
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 123


 4111 019c 3B       		.uleb128 0x3b
 4112 019d 05       		.uleb128 0x5
 4113 019e 27       		.uleb128 0x27
 4114 019f 19       		.uleb128 0x19
 4115 01a0 11       		.uleb128 0x11
 4116 01a1 01       		.uleb128 0x1
 4117 01a2 12       		.uleb128 0x12
 4118 01a3 06       		.uleb128 0x6
 4119 01a4 40       		.uleb128 0x40
 4120 01a5 18       		.uleb128 0x18
 4121 01a6 9742     		.uleb128 0x2117
 4122 01a8 19       		.uleb128 0x19
 4123 01a9 00       		.byte	0
 4124 01aa 00       		.byte	0
 4125 01ab 1B       		.uleb128 0x1b
 4126 01ac 01       		.uleb128 0x1
 4127 01ad 01       		.byte	0x1
 4128 01ae 49       		.uleb128 0x49
 4129 01af 13       		.uleb128 0x13
 4130 01b0 01       		.uleb128 0x1
 4131 01b1 13       		.uleb128 0x13
 4132 01b2 00       		.byte	0
 4133 01b3 00       		.byte	0
 4134 01b4 1C       		.uleb128 0x1c
 4135 01b5 21       		.uleb128 0x21
 4136 01b6 00       		.byte	0
 4137 01b7 49       		.uleb128 0x49
 4138 01b8 13       		.uleb128 0x13
 4139 01b9 2F       		.uleb128 0x2f
 4140 01ba 0B       		.uleb128 0xb
 4141 01bb 00       		.byte	0
 4142 01bc 00       		.byte	0
 4143 01bd 1D       		.uleb128 0x1d
 4144 01be 34       		.uleb128 0x34
 4145 01bf 00       		.byte	0
 4146 01c0 03       		.uleb128 0x3
 4147 01c1 0E       		.uleb128 0xe
 4148 01c2 3A       		.uleb128 0x3a
 4149 01c3 0B       		.uleb128 0xb
 4150 01c4 3B       		.uleb128 0x3b
 4151 01c5 0B       		.uleb128 0xb
 4152 01c6 49       		.uleb128 0x49
 4153 01c7 13       		.uleb128 0x13
 4154 01c8 3F       		.uleb128 0x3f
 4155 01c9 19       		.uleb128 0x19
 4156 01ca 3C       		.uleb128 0x3c
 4157 01cb 19       		.uleb128 0x19
 4158 01cc 00       		.byte	0
 4159 01cd 00       		.byte	0
 4160 01ce 1E       		.uleb128 0x1e
 4161 01cf 34       		.uleb128 0x34
 4162 01d0 00       		.byte	0
 4163 01d1 03       		.uleb128 0x3
 4164 01d2 0E       		.uleb128 0xe
 4165 01d3 3A       		.uleb128 0x3a
 4166 01d4 0B       		.uleb128 0xb
 4167 01d5 3B       		.uleb128 0x3b
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 124


 4168 01d6 0B       		.uleb128 0xb
 4169 01d7 49       		.uleb128 0x49
 4170 01d8 13       		.uleb128 0x13
 4171 01d9 3F       		.uleb128 0x3f
 4172 01da 19       		.uleb128 0x19
 4173 01db 02       		.uleb128 0x2
 4174 01dc 18       		.uleb128 0x18
 4175 01dd 00       		.byte	0
 4176 01de 00       		.byte	0
 4177 01df 00       		.byte	0
 4178              		.section	.debug_aranges,"",%progbits
 4179 0000 24010000 		.4byte	0x124
 4180 0004 0200     		.2byte	0x2
 4181 0006 00000000 		.4byte	.Ldebug_info0
 4182 000a 04       		.byte	0x4
 4183 000b 00       		.byte	0
 4184 000c 0000     		.2byte	0
 4185 000e 0000     		.2byte	0
 4186 0010 00000000 		.4byte	.LFB36
 4187 0014 88000000 		.4byte	.LFE36-.LFB36
 4188 0018 00000000 		.4byte	.LFB37
 4189 001c 2A000000 		.4byte	.LFE37-.LFB37
 4190 0020 00000000 		.4byte	.LFB38
 4191 0024 28000000 		.4byte	.LFE38-.LFB38
 4192 0028 00000000 		.4byte	.LFB39
 4193 002c 50000000 		.4byte	.LFE39-.LFB39
 4194 0030 00000000 		.4byte	.LFB40
 4195 0034 34020000 		.4byte	.LFE40-.LFB40
 4196 0038 00000000 		.4byte	.LFB41
 4197 003c 20000000 		.4byte	.LFE41-.LFB41
 4198 0040 00000000 		.4byte	.LFB42
 4199 0044 44000000 		.4byte	.LFE42-.LFB42
 4200 0048 00000000 		.4byte	.LFB43
 4201 004c 58000000 		.4byte	.LFE43-.LFB43
 4202 0050 00000000 		.4byte	.LFB44
 4203 0054 1C000000 		.4byte	.LFE44-.LFB44
 4204 0058 00000000 		.4byte	.LFB45
 4205 005c 28000000 		.4byte	.LFE45-.LFB45
 4206 0060 00000000 		.4byte	.LFB46
 4207 0064 1C000000 		.4byte	.LFE46-.LFB46
 4208 0068 00000000 		.4byte	.LFB47
 4209 006c 28000000 		.4byte	.LFE47-.LFB47
 4210 0070 00000000 		.4byte	.LFB48
 4211 0074 1C000000 		.4byte	.LFE48-.LFB48
 4212 0078 00000000 		.4byte	.LFB49
 4213 007c 1C000000 		.4byte	.LFE49-.LFB49
 4214 0080 00000000 		.4byte	.LFB50
 4215 0084 1C000000 		.4byte	.LFE50-.LFB50
 4216 0088 00000000 		.4byte	.LFB51
 4217 008c 1C000000 		.4byte	.LFE51-.LFB51
 4218 0090 00000000 		.4byte	.LFB52
 4219 0094 28000000 		.4byte	.LFE52-.LFB52
 4220 0098 00000000 		.4byte	.LFB53
 4221 009c 28000000 		.4byte	.LFE53-.LFB53
 4222 00a0 00000000 		.4byte	.LFB54
 4223 00a4 28000000 		.4byte	.LFE54-.LFB54
 4224 00a8 00000000 		.4byte	.LFB55
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 125


 4225 00ac 28000000 		.4byte	.LFE55-.LFB55
 4226 00b0 00000000 		.4byte	.LFB56
 4227 00b4 28000000 		.4byte	.LFE56-.LFB56
 4228 00b8 00000000 		.4byte	.LFB57
 4229 00bc 28000000 		.4byte	.LFE57-.LFB57
 4230 00c0 00000000 		.4byte	.LFB58
 4231 00c4 30010000 		.4byte	.LFE58-.LFB58
 4232 00c8 00000000 		.4byte	.LFB59
 4233 00cc 42000000 		.4byte	.LFE59-.LFB59
 4234 00d0 00000000 		.4byte	.LFB60
 4235 00d4 36000000 		.4byte	.LFE60-.LFB60
 4236 00d8 00000000 		.4byte	.LFB61
 4237 00dc 5C000000 		.4byte	.LFE61-.LFB61
 4238 00e0 00000000 		.4byte	.LFB62
 4239 00e4 5C000000 		.4byte	.LFE62-.LFB62
 4240 00e8 00000000 		.4byte	.LFB63
 4241 00ec 76000000 		.4byte	.LFE63-.LFB63
 4242 00f0 00000000 		.4byte	.LFB64
 4243 00f4 3C000000 		.4byte	.LFE64-.LFB64
 4244 00f8 00000000 		.4byte	.LFB65
 4245 00fc 1C000000 		.4byte	.LFE65-.LFB65
 4246 0100 00000000 		.4byte	.LFB66
 4247 0104 1C000000 		.4byte	.LFE66-.LFB66
 4248 0108 00000000 		.4byte	.LFB67
 4249 010c 1C000000 		.4byte	.LFE67-.LFB67
 4250 0110 00000000 		.4byte	.LFB68
 4251 0114 14000000 		.4byte	.LFE68-.LFB68
 4252 0118 00000000 		.4byte	.LFB69
 4253 011c 14000000 		.4byte	.LFE69-.LFB69
 4254 0120 00000000 		.4byte	0
 4255 0124 00000000 		.4byte	0
 4256              		.section	.debug_ranges,"",%progbits
 4257              	.Ldebug_ranges0:
 4258 0000 00000000 		.4byte	.LFB36
 4259 0004 88000000 		.4byte	.LFE36
 4260 0008 00000000 		.4byte	.LFB37
 4261 000c 2A000000 		.4byte	.LFE37
 4262 0010 00000000 		.4byte	.LFB38
 4263 0014 28000000 		.4byte	.LFE38
 4264 0018 00000000 		.4byte	.LFB39
 4265 001c 50000000 		.4byte	.LFE39
 4266 0020 00000000 		.4byte	.LFB40
 4267 0024 34020000 		.4byte	.LFE40
 4268 0028 00000000 		.4byte	.LFB41
 4269 002c 20000000 		.4byte	.LFE41
 4270 0030 00000000 		.4byte	.LFB42
 4271 0034 44000000 		.4byte	.LFE42
 4272 0038 00000000 		.4byte	.LFB43
 4273 003c 58000000 		.4byte	.LFE43
 4274 0040 00000000 		.4byte	.LFB44
 4275 0044 1C000000 		.4byte	.LFE44
 4276 0048 00000000 		.4byte	.LFB45
 4277 004c 28000000 		.4byte	.LFE45
 4278 0050 00000000 		.4byte	.LFB46
 4279 0054 1C000000 		.4byte	.LFE46
 4280 0058 00000000 		.4byte	.LFB47
 4281 005c 28000000 		.4byte	.LFE47
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 126


 4282 0060 00000000 		.4byte	.LFB48
 4283 0064 1C000000 		.4byte	.LFE48
 4284 0068 00000000 		.4byte	.LFB49
 4285 006c 1C000000 		.4byte	.LFE49
 4286 0070 00000000 		.4byte	.LFB50
 4287 0074 1C000000 		.4byte	.LFE50
 4288 0078 00000000 		.4byte	.LFB51
 4289 007c 1C000000 		.4byte	.LFE51
 4290 0080 00000000 		.4byte	.LFB52
 4291 0084 28000000 		.4byte	.LFE52
 4292 0088 00000000 		.4byte	.LFB53
 4293 008c 28000000 		.4byte	.LFE53
 4294 0090 00000000 		.4byte	.LFB54
 4295 0094 28000000 		.4byte	.LFE54
 4296 0098 00000000 		.4byte	.LFB55
 4297 009c 28000000 		.4byte	.LFE55
 4298 00a0 00000000 		.4byte	.LFB56
 4299 00a4 28000000 		.4byte	.LFE56
 4300 00a8 00000000 		.4byte	.LFB57
 4301 00ac 28000000 		.4byte	.LFE57
 4302 00b0 00000000 		.4byte	.LFB58
 4303 00b4 30010000 		.4byte	.LFE58
 4304 00b8 00000000 		.4byte	.LFB59
 4305 00bc 42000000 		.4byte	.LFE59
 4306 00c0 00000000 		.4byte	.LFB60
 4307 00c4 36000000 		.4byte	.LFE60
 4308 00c8 00000000 		.4byte	.LFB61
 4309 00cc 5C000000 		.4byte	.LFE61
 4310 00d0 00000000 		.4byte	.LFB62
 4311 00d4 5C000000 		.4byte	.LFE62
 4312 00d8 00000000 		.4byte	.LFB63
 4313 00dc 76000000 		.4byte	.LFE63
 4314 00e0 00000000 		.4byte	.LFB64
 4315 00e4 3C000000 		.4byte	.LFE64
 4316 00e8 00000000 		.4byte	.LFB65
 4317 00ec 1C000000 		.4byte	.LFE65
 4318 00f0 00000000 		.4byte	.LFB66
 4319 00f4 1C000000 		.4byte	.LFE66
 4320 00f8 00000000 		.4byte	.LFB67
 4321 00fc 1C000000 		.4byte	.LFE67
 4322 0100 00000000 		.4byte	.LFB68
 4323 0104 14000000 		.4byte	.LFE68
 4324 0108 00000000 		.4byte	.LFB69
 4325 010c 14000000 		.4byte	.LFE69
 4326 0110 00000000 		.4byte	0
 4327 0114 00000000 		.4byte	0
 4328              		.section	.debug_line,"",%progbits
 4329              	.Ldebug_line0:
 4330 0000 E0030000 		.section	.debug_str,"MS",%progbits,1
 4330      02005C00 
 4330      00000201 
 4330      FB0E0D00 
 4330      01010101 
 4331              	.LASF107:
 4332 0000 43617053 		.ascii	"CapSense_sensorBaselineLow\000"
 4332      656E7365 
 4332      5F73656E 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 127


 4332      736F7242 
 4332      6173656C 
 4333              	.LASF96:
 4334 001b 43617053 		.ascii	"CapSense_IIR4Filter\000"
 4334      656E7365 
 4334      5F494952 
 4334      3446696C 
 4334      74657200 
 4335              	.LASF102:
 4336 002f 43617053 		.ascii	"CapSense_debounceCounter\000"
 4336      656E7365 
 4336      5F646562 
 4336      6F756E63 
 4336      65436F75 
 4337              	.LASF31:
 4338 0048 7363616E 		.ascii	"scanSpeedTbl\000"
 4338      53706565 
 4338      6454626C 
 4338      00
 4339              	.LASF110:
 4340 0055 43617053 		.ascii	"CapSense_lowBaselineResetCnt\000"
 4340      656E7365 
 4340      5F6C6F77 
 4340      42617365 
 4340      6C696E65 
 4341              	.LASF55:
 4342 0072 43617053 		.ascii	"CapSense_UpdateBaselineNoThreshold\000"
 4342      656E7365 
 4342      5F557064 
 4342      61746542 
 4342      6173656C 
 4343              	.LASF34:
 4344 0095 6E756D62 		.ascii	"numberOfSensors\000"
 4344      65724F66 
 4344      53656E73 
 4344      6F727300 
 4345              	.LASF38:
 4346 00a5 70747247 		.ascii	"ptrGetBitValue\000"
 4346      65744269 
 4346      7456616C 
 4346      756500
 4347              	.LASF94:
 4348 00b4 43617053 		.ascii	"CapSense_DisableWidget\000"
 4348      656E7365 
 4348      5F446973 
 4348      61626C65 
 4348      57696467 
 4349              	.LASF62:
 4350 00cb 43617053 		.ascii	"CapSense_UpdateEnabledBaselines\000"
 4350      656E7365 
 4350      5F557064 
 4350      61746545 
 4350      6E61626C 
 4351              	.LASF120:
 4352 00eb 43617053 		.ascii	"CapSense_config\000"
 4352      656E7365 
 4352      5F636F6E 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 128


 4352      66696700 
 4353              	.LASF54:
 4354 00fb 69735365 		.ascii	"isSensorEnabled\000"
 4354      6E736F72 
 4354      456E6162 
 4354      6C656400 
 4355              	.LASF90:
 4356 010b 6E756D4F 		.ascii	"numOfSensors\000"
 4356      6653656E 
 4356      736F7273 
 4356      00
 4357              	.LASF40:
 4358 0118 43617053 		.ascii	"CapSense_CONFIG_TYPE_POINTERS_P4_v2_60\000"
 4358      656E7365 
 4358      5F434F4E 
 4358      4649475F 
 4358      54595045 
 4359              	.LASF8:
 4360 013f 756E7369 		.ascii	"unsigned int\000"
 4360      676E6564 
 4360      20696E74 
 4360      00
 4361              	.LASF43:
 4362 014c 746F7461 		.ascii	"totalSensorsNum\000"
 4362      6C53656E 
 4362      736F7273 
 4362      4E756D00 
 4363              	.LASF122:
 4364 015c 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4364      43313120 
 4364      352E342E 
 4364      31203230 
 4364      31363036 
 4365 018f 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 4365      20726576 
 4365      6973696F 
 4365      6E203233 
 4365      37373135 
 4366 01c2 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4366      66756E63 
 4366      74696F6E 
 4366      2D736563 
 4366      74696F6E 
 4367              	.LASF28:
 4368 01ea 73616D70 		.ascii	"sampleMaxTbl\000"
 4368      6C654D61 
 4368      7854626C 
 4368      00
 4369              	.LASF53:
 4370 01f7 43617053 		.ascii	"CapSense_InitializeEnabledBaselines\000"
 4370      656E7365 
 4370      5F496E69 
 4370      7469616C 
 4370      697A6545 
 4371              	.LASF26:
 4372 021b 7369676E 		.ascii	"signRegisterTbl\000"
 4372      52656769 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 129


 4372      73746572 
 4372      54626C00 
 4373              	.LASF49:
 4374 022b 43617053 		.ascii	"CapSense_InitializeSensorBaseline\000"
 4374      656E7365 
 4374      5F496E69 
 4374      7469616C 
 4374      697A6553 
 4375              	.LASF67:
 4376 024d 43617053 		.ascii	"CapSense_SetBaselineData\000"
 4376      656E7365 
 4376      5F536574 
 4376      42617365 
 4376      6C696E65 
 4377              	.LASF33:
 4378 0266 72617744 		.ascii	"rawDataIndex\000"
 4378      61746149 
 4378      6E646578 
 4378      00
 4379              	.LASF42:
 4380 0273 746F7461 		.ascii	"totalWidgetsNum\000"
 4380      6C576964 
 4380      67657473 
 4380      4E756D00 
 4381              	.LASF71:
 4382 0283 43617053 		.ascii	"CapSense_SetDiffCountData\000"
 4382      656E7365 
 4382      5F536574 
 4382      44696666 
 4382      436F756E 
 4383              	.LASF108:
 4384 029d 43617053 		.ascii	"CapSense_sensorSignal\000"
 4384      656E7365 
 4384      5F73656E 
 4384      736F7253 
 4384      69676E61 
 4385              	.LASF117:
 4386 02b3 43617053 		.ascii	"CapSense_rawDataIndex\000"
 4386      656E7365 
 4386      5F726177 
 4386      44617461 
 4386      496E6465 
 4387              	.LASF78:
 4388 02c9 43617053 		.ascii	"CapSense_SetNoiseThreshold\000"
 4388      656E7365 
 4388      5F536574 
 4388      4E6F6973 
 4388      65546872 
 4389              	.LASF63:
 4390 02e4 43617053 		.ascii	"CapSense_UpdateWidgetBaseline\000"
 4390      656E7365 
 4390      5F557064 
 4390      61746557 
 4390      69646765 
 4391              	.LASF115:
 4392 0302 43617053 		.ascii	"CapSense_hysteresis\000"
 4392      656E7365 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 130


 4392      5F687973 
 4392      74657265 
 4392      73697300 
 4393              	.LASF12:
 4394 0316 666C6F61 		.ascii	"float\000"
 4394      7400
 4395              	.LASF23:
 4396 031c 7265736F 		.ascii	"resolutionsTbl\000"
 4396      6C757469 
 4396      6F6E7354 
 4396      626C00
 4397              	.LASF74:
 4398 032b 43617053 		.ascii	"CapSense_GetNoiseThreshold\000"
 4398      656E7365 
 4398      5F476574 
 4398      4E6F6973 
 4398      65546872 
 4399              	.LASF25:
 4400 0346 72756E6E 		.ascii	"runningDifferenceTbl\000"
 4400      696E6744 
 4400      69666665 
 4400      72656E63 
 4400      6554626C 
 4401              	.LASF7:
 4402 035b 6C6F6E67 		.ascii	"long long unsigned int\000"
 4402      206C6F6E 
 4402      6720756E 
 4402      7369676E 
 4402      65642069 
 4403              	.LASF104:
 4404 0372 43617053 		.ascii	"CapSense_sensorEnableMask\000"
 4404      656E7365 
 4404      5F73656E 
 4404      736F7245 
 4404      6E61626C 
 4405              	.LASF124:
 4406 038c 433A5C55 		.ascii	"C:\\Users\\PC\\Desktop\\Skif_5.cydsn\000"
 4406      73657273 
 4406      5C50435C 
 4406      4465736B 
 4406      746F705C 
 4407              	.LASF52:
 4408 03ad 77696467 		.ascii	"widget\000"
 4408      657400
 4409              	.LASF112:
 4410 03b4 43617053 		.ascii	"CapSense_fingerThreshold\000"
 4410      656E7365 
 4410      5F66696E 
 4410      67657254 
 4410      68726573 
 4411              	.LASF47:
 4412 03cd 43617053 		.ascii	"CapSense_CONFIG_TYPE_P4_v2_60\000"
 4412      656E7365 
 4412      5F434F4E 
 4412      4649475F 
 4412      54595045 
 4413              	.LASF105:
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 131


 4414 03eb 43617053 		.ascii	"CapSense_widgetNumber\000"
 4414      656E7365 
 4414      5F776964 
 4414      6765744E 
 4414      756D6265 
 4415              	.LASF77:
 4416 0401 43617053 		.ascii	"CapSense_SetFingerThreshold\000"
 4416      656E7365 
 4416      5F536574 
 4416      46696E67 
 4416      65725468 
 4417              	.LASF101:
 4418 041d 43617053 		.ascii	"CapSense_DisableRawDataFilters\000"
 4418      656E7365 
 4418      5F446973 
 4418      61626C65 
 4418      52617744 
 4419              	.LASF72:
 4420 043c 76616C75 		.ascii	"value\000"
 4420      6500
 4421              	.LASF75:
 4422 0442 43617053 		.ascii	"CapSense_GetFingerHysteresis\000"
 4422      656E7365 
 4422      5F476574 
 4422      46696E67 
 4422      65724879 
 4423              	.LASF70:
 4424 045f 43617053 		.ascii	"CapSense_GetDiffCountData\000"
 4424      656E7365 
 4424      5F476574 
 4424      44696666 
 4424      436F756E 
 4425              	.LASF57:
 4426 0479 7369676E 		.ascii	"sign\000"
 4426      00
 4427              	.LASF24:
 4428 047e 6E6F6973 		.ascii	"noiseEnvelopeTbl\000"
 4428      65456E76 
 4428      656C6F70 
 4428      6554626C 
 4428      00
 4429              	.LASF56:
 4430 048f 63616C63 		.ascii	"calc\000"
 4430      00
 4431              	.LASF37:
 4432 0494 70747252 		.ascii	"ptrReadSensorRaw\000"
 4432      65616453 
 4432      656E736F 
 4432      72526177 
 4432      00
 4433              	.LASF87:
 4434 04a5 68797374 		.ascii	"hysteresis\000"
 4434      65726573 
 4434      697300
 4435              	.LASF59:
 4436 04b0 66696C74 		.ascii	"filteredRawData\000"
 4436      65726564 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 132


 4436      52617744 
 4436      61746100 
 4437              	.LASF64:
 4438 04c0 73656E73 		.ascii	"sensorsPerWidget\000"
 4438      6F727350 
 4438      65725769 
 4438      64676574 
 4438      00
 4439              	.LASF92:
 4440 04d1 43617053 		.ascii	"CapSense_CheckIsAnyWidgetActive\000"
 4440      656E7365 
 4440      5F436865 
 4440      636B4973 
 4440      416E7957 
 4441              	.LASF118:
 4442 04f1 43617053 		.ascii	"CapSense_numberOfSensors\000"
 4442      656E7365 
 4442      5F6E756D 
 4442      6265724F 
 4442      6653656E 
 4443              	.LASF114:
 4444 050a 43617053 		.ascii	"CapSense_negativeNoiseThreshold\000"
 4444      656E7365 
 4444      5F6E6567 
 4444      61746976 
 4444      654E6F69 
 4445              	.LASF41:
 4446 052a 746F7461 		.ascii	"totalScanslotsNum\000"
 4446      6C536361 
 4446      6E736C6F 
 4446      74734E75 
 4446      6D00
 4447              	.LASF50:
 4448 053c 73656E73 		.ascii	"sensor\000"
 4448      6F7200
 4449              	.LASF44:
 4450 0543 73656E73 		.ascii	"sensetivitySeed\000"
 4450      65746976 
 4450      69747953 
 4450      65656400 
 4451              	.LASF93:
 4452 0553 43617053 		.ascii	"CapSense_EnableWidget\000"
 4452      656E7365 
 4452      5F456E61 
 4452      626C6557 
 4452      69646765 
 4453              	.LASF14:
 4454 0569 63686172 		.ascii	"char\000"
 4454      00
 4455              	.LASF76:
 4456 056e 43617053 		.ascii	"CapSense_GetNegativeNoiseThreshold\000"
 4456      656E7365 
 4456      5F476574 
 4456      4E656761 
 4456      74697665 
 4457              	.LASF32:
 4458 0591 70726573 		.ascii	"prescalerTable\000"
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 133


 4458      63616C65 
 4458      72546162 
 4458      6C6500
 4459              	.LASF10:
 4460 05a0 75696E74 		.ascii	"uint16\000"
 4460      313600
 4461              	.LASF68:
 4462 05a7 64617461 		.ascii	"data\000"
 4462      00
 4463              	.LASF17:
 4464 05ac 69646163 		.ascii	"idac1LevelsTbl\000"
 4464      314C6576 
 4464      656C7354 
 4464      626C00
 4465              	.LASF89:
 4466 05bb 72617749 		.ascii	"rawIndex\000"
 4466      6E646578 
 4466      00
 4467              	.LASF6:
 4468 05c4 6C6F6E67 		.ascii	"long long int\000"
 4468      206C6F6E 
 4468      6720696E 
 4468      7400
 4469              	.LASF97:
 4470 05d2 43617053 		.ascii	"CapSense_GetWidgetNumber\000"
 4470      656E7365 
 4470      5F476574 
 4470      57696467 
 4470      65744E75 
 4471              	.LASF84:
 4472 05eb 6465626F 		.ascii	"debounce\000"
 4472      756E6365 
 4472      00
 4473              	.LASF36:
 4474 05f4 70747250 		.ascii	"ptrPreScan\000"
 4474      72655363 
 4474      616E00
 4475              	.LASF83:
 4476 05ff 43617053 		.ascii	"CapSense_CheckIsSensorActive\000"
 4476      656E7365 
 4476      5F436865 
 4476      636B4973 
 4476      53656E73 
 4477              	.LASF35:
 4478 061c 70747247 		.ascii	"ptrGetRaw\000"
 4478      65745261 
 4478      7700
 4479              	.LASF61:
 4480 0626 43617053 		.ascii	"CapSense_UpdateSensorBaseline\000"
 4480      656E7365 
 4480      5F557064 
 4480      61746553 
 4480      656E736F 
 4481              	.LASF48:
 4482 0644 43617053 		.ascii	"CapSense_BaseInit\000"
 4482      656E7365 
 4482      5F426173 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 134


 4482      65496E69 
 4482      7400
 4483              	.LASF27:
 4484 0656 73616D70 		.ascii	"sampleMinTbl\000"
 4484      6C654D69 
 4484      6E54626C 
 4484      00
 4485              	.LASF103:
 4486 0663 43617053 		.ascii	"CapSense_sensorRaw\000"
 4486      656E7365 
 4486      5F73656E 
 4486      736F7252 
 4486      617700
 4487              	.LASF98:
 4488 0676 43617053 		.ascii	"CapSense_GetLowBaselineReset\000"
 4488      656E7365 
 4488      5F476574 
 4488      4C6F7742 
 4488      6173656C 
 4489              	.LASF80:
 4490 0693 43617053 		.ascii	"CapSense_SetNegativeNoiseThreshold\000"
 4490      656E7365 
 4490      5F536574 
 4490      4E656761 
 4490      74697665 
 4491              	.LASF11:
 4492 06b6 75696E74 		.ascii	"uint32\000"
 4492      333200
 4493              	.LASF79:
 4494 06bd 43617053 		.ascii	"CapSense_SetFingerHysteresis\000"
 4494      656E7365 
 4494      5F536574 
 4494      46696E67 
 4494      65724879 
 4495              	.LASF73:
 4496 06da 43617053 		.ascii	"CapSense_GetFingerThreshold\000"
 4496      656E7365 
 4496      5F476574 
 4496      46696E67 
 4496      65725468 
 4497              	.LASF16:
 4498 06f6 6C6F6E67 		.ascii	"long double\000"
 4498      20646F75 
 4498      626C6500 
 4499              	.LASF66:
 4500 0702 6C617374 		.ascii	"lastSensor\000"
 4500      53656E73 
 4500      6F7200
 4501              	.LASF45:
 4502 070d 6866636C 		.ascii	"hfclkFreq_MHz\000"
 4502      6B467265 
 4502      715F4D48 
 4502      7A00
 4503              	.LASF18:
 4504 071b 69646163 		.ascii	"idac2LevelsTbl\000"
 4504      324C6576 
 4504      656C7354 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 135


 4504      626C00
 4505              	.LASF2:
 4506 072a 73686F72 		.ascii	"short int\000"
 4506      7420696E 
 4506      7400
 4507              	.LASF4:
 4508 0734 6C6F6E67 		.ascii	"long int\000"
 4508      20696E74 
 4508      00
 4509              	.LASF65:
 4510 073d 66697273 		.ascii	"firstSensor\000"
 4510      7453656E 
 4510      736F7200 
 4511              	.LASF116:
 4512 0749 43617053 		.ascii	"CapSense_debounce\000"
 4512      656E7365 
 4512      5F646562 
 4512      6F756E63 
 4512      6500
 4513              	.LASF22:
 4514 075b 77696467 		.ascii	"widgetNubmersTbl\000"
 4514      65744E75 
 4514      626D6572 
 4514      7354626C 
 4514      00
 4515              	.LASF100:
 4516 076c 43617053 		.ascii	"CapSense_EnableRawDataFilters\000"
 4516      656E7365 
 4516      5F456E61 
 4516      626C6552 
 4516      61774461 
 4517              	.LASF111:
 4518 078a 43617053 		.ascii	"CapSense_lowBaselineReset\000"
 4518      656E7365 
 4518      5F6C6F77 
 4518      42617365 
 4518      6C696E65 
 4519              	.LASF30:
 4520 07a4 6B56616C 		.ascii	"kValueTbl\000"
 4520      75655462 
 4520      6C00
 4521              	.LASF106:
 4522 07ae 43617053 		.ascii	"CapSense_sensorBaseline\000"
 4522      656E7365 
 4522      5F73656E 
 4522      736F7242 
 4522      6173656C 
 4523              	.LASF15:
 4524 07c6 73697A65 		.ascii	"sizetype\000"
 4524      74797065 
 4524      00
 4525              	.LASF5:
 4526 07cf 6C6F6E67 		.ascii	"long unsigned int\000"
 4526      20756E73 
 4526      69676E65 
 4526      6420696E 
 4526      7400
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 136


 4527              	.LASF46:
 4528 07e1 706F696E 		.ascii	"pointers\000"
 4528      74657273 
 4528      00
 4529              	.LASF60:
 4530 07ea 6E6F6973 		.ascii	"noiseThreshold\000"
 4530      65546872 
 4530      6573686F 
 4530      6C6400
 4531              	.LASF29:
 4532 07f9 70726576 		.ascii	"previousSampleTbl\000"
 4532      696F7573 
 4532      53616D70 
 4532      6C655462 
 4532      6C00
 4533              	.LASF81:
 4534 080b 43617053 		.ascii	"CapSense_SetDebounce\000"
 4534      656E7365 
 4534      5F536574 
 4534      4465626F 
 4534      756E6365 
 4535              	.LASF86:
 4536 0820 66696E67 		.ascii	"fingerThreshold\000"
 4536      65725468 
 4536      72657368 
 4536      6F6C6400 
 4537              	.LASF20:
 4538 0830 63686172 		.ascii	"chargeDivTbl\000"
 4538      67654469 
 4538      7654626C 
 4538      00
 4539              	.LASF1:
 4540 083d 756E7369 		.ascii	"unsigned char\000"
 4540      676E6564 
 4540      20636861 
 4540      7200
 4541              	.LASF113:
 4542 084b 43617053 		.ascii	"CapSense_noiseThreshold\000"
 4542      656E7365 
 4542      5F6E6F69 
 4542      73655468 
 4542      72657368 
 4543              	.LASF85:
 4544 0863 6465626F 		.ascii	"debounceIndex\000"
 4544      756E6365 
 4544      496E6465 
 4544      7800
 4545              	.LASF51:
 4546 0871 43617053 		.ascii	"CapSense_InitializeAllBaselines\000"
 4546      656E7365 
 4546      5F496E69 
 4546      7469616C 
 4546      697A6541 
 4547              	.LASF69:
 4548 0891 43617053 		.ascii	"CapSense_GetBaselineData\000"
 4548      656E7365 
 4548      5F476574 
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 137


 4548      42617365 
 4548      6C696E65 
 4549              	.LASF82:
 4550 08aa 43617053 		.ascii	"CapSense_SetLowBaselineReset\000"
 4550      656E7365 
 4550      5F536574 
 4550      4C6F7742 
 4550      6173656C 
 4551              	.LASF19:
 4552 08c7 73656E73 		.ascii	"sensetivityTbl\000"
 4552      65746976 
 4552      69747954 
 4552      626C00
 4553              	.LASF123:
 4554 08d6 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_CSHL.c\000"
 4554      72617465 
 4554      645F536F 
 4554      75726365 
 4554      5C50536F 
 4555              	.LASF91:
 4556 08fd 73746174 		.ascii	"state\000"
 4556      6500
 4557              	.LASF121:
 4558 0903 43617053 		.ascii	"CapSense_enableRawFilters\000"
 4558      656E7365 
 4558      5F656E61 
 4558      626C6552 
 4558      61774669 
 4559              	.LASF21:
 4560 091d 6D6F6444 		.ascii	"modDivTbl\000"
 4560      69765462 
 4560      6C00
 4561              	.LASF0:
 4562 0927 7369676E 		.ascii	"signed char\000"
 4562      65642063 
 4562      68617200 
 4563              	.LASF3:
 4564 0933 73686F72 		.ascii	"short unsigned int\000"
 4564      7420756E 
 4564      7369676E 
 4564      65642069 
 4564      6E7400
 4565              	.LASF39:
 4566 0946 70747253 		.ascii	"ptrSetBitValue\000"
 4566      65744269 
 4566      7456616C 
 4566      756500
 4567              	.LASF95:
 4568 0955 43617053 		.ascii	"CapSense_MedianFilter\000"
 4568      656E7365 
 4568      5F4D6564 
 4568      69616E46 
 4568      696C7465 
 4569              	.LASF58:
 4570 096b 74656D70 		.ascii	"tempRaw\000"
 4570      52617700 
 4571              	.LASF99:
ARM GAS  C:\Users\PC\AppData\Local\Temp\ccBgQfEQ.s 			page 138


 4572 0973 43617053 		.ascii	"CapSense_GetDebounce\000"
 4572      656E7365 
 4572      5F476574 
 4572      4465626F 
 4572      756E6365 
 4573              	.LASF88:
 4574 0988 43617053 		.ascii	"CapSense_CheckIsWidgetActive\000"
 4574      656E7365 
 4574      5F436865 
 4574      636B4973 
 4574      57696467 
 4575              	.LASF9:
 4576 09a5 75696E74 		.ascii	"uint8\000"
 4576      3800
 4577              	.LASF13:
 4578 09ab 646F7562 		.ascii	"double\000"
 4578      6C6500
 4579              	.LASF119:
 4580 09b2 43617053 		.ascii	"CapSense_rawFilterData1\000"
 4580      656E7365 
 4580      5F726177 
 4580      46696C74 
 4580      65724461 
 4581              	.LASF109:
 4582 09ca 43617053 		.ascii	"CapSense_sensorOnMask\000"
 4582      656E7365 
 4582      5F73656E 
 4582      736F724F 
 4582      6E4D6173 
 4583              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
